,Epochs,Params,Train loss,Test loss
0,0,"OrderedDict([('layers.0.weight', tensor([[-1.2433],
        [-0.8154],
        [ 0.3098],
        [ 0.5266],
        [-0.9812],
        [-0.9687],
        [-0.7089],
        [-1.2967],
        [ 1.2936],
        [-0.9086],
        [-0.9404],
        [-0.5964],
        [-1.1579],
        [-1.6673],
        [-1.1292],
        [-0.7228],
        [ 0.7816],
        [ 0.7447],
        [-0.1006]])), ('layers.0.bias', tensor([ 0.3586,  1.2675, -0.5516, -1.0902,  0.2380,  0.2224,  0.3038,  0.3829,
         0.4132,  0.2532,  1.1615, -0.9440,  0.4783,  0.6349,  0.3897,  1.0979,
         0.3845,  0.3483, -0.5434])), ('layers.2.weight', tensor([[-0.2311, -0.5563,  0.0496,  0.0795, -0.4200, -0.4018, -0.1871, -1.4908,
          0.3983, -0.3661, -0.4565,  0.0551, -0.7009, -0.5166, -0.3052, -0.5790,
          0.5851,  0.5564, -0.1102]])), ('layers.2.bias', tensor([-0.1649]))])",0.3473829071305036,0.3314539734606539
1,1,"OrderedDict([('layers.0.weight', tensor([[-1.4505],
        [-0.7344],
        [ 0.3492],
        [ 0.6258],
        [-1.1402],
        [-1.1652],
        [-0.7454],
        [-1.7094],
        [ 1.3034],
        [-1.2436],
        [-1.1636],
        [-0.5964],
        [-1.3557],
        [-1.8464],
        [-1.3457],
        [-0.6525],
        [ 0.8014],
        [ 0.7694],
        [-0.1006]])), ('layers.0.bias', tensor([ 0.3232,  1.3502, -0.5283, -1.0125,  0.2375,  0.2320,  0.4255,  0.3527,
         0.4198,  0.2653,  0.9896, -0.9440,  0.5725,  0.6350,  0.3367,  1.1741,
         0.3610,  0.3141, -0.5434])), ('layers.2.weight', tensor([[-0.2962, -0.5683,  0.0960,  0.1706, -0.5603, -0.5773, -0.2216, -1.9098,
          0.4057, -0.5010, -0.4749,  0.0551, -0.8334, -0.5798, -0.3647, -0.5907,
          0.5903,  0.5584, -0.1102]])), ('layers.2.bias', tensor([-0.1812]))])",0.34103065959493145,0.3312810110615206
2,2,"OrderedDict([('layers.0.weight', tensor([[-1.6323],
        [-0.7646],
        [ 0.3332],
        [ 0.5960],
        [-1.2842],
        [-1.3564],
        [-0.7837],
        [-2.0535],
        [ 1.3476],
        [-1.5444],
        [-1.2484],
        [-0.5964],
        [-1.4840],
        [-2.0284],
        [-1.5261],
        [-0.6949],
        [ 0.8469],
        [ 0.8214],
        [-0.1006]])), ('layers.0.bias', tensor([ 0.2663,  1.3885, -0.5609, -1.0919,  0.2057,  0.1894,  0.5108,  0.3503,
         0.3446,  0.2842,  1.0144, -0.9440,  0.6521,  0.4774,  0.2603,  1.2035,
         0.3094,  0.2325, -0.5434])), ('layers.2.weight', tensor([[-0.3479, -0.5958,  0.1170,  0.2349, -0.6704, -0.7207, -0.2491, -2.2715,
          0.4283, -0.6238, -0.5155,  0.0551, -0.9261, -0.6253, -0.4124, -0.6190,
          0.6039,  0.5637, -0.1102]])), ('layers.2.bias', tensor([-0.2026]))])",0.3409386760006012,0.33140772031706295
3,3,"OrderedDict([('layers.0.weight', tensor([[-1.8090],
        [-0.8041],
        [ 0.3661],
        [ 0.7040],
        [-1.4298],
        [-1.5486],
        [-0.8342],
        [-2.4089],
        [ 1.3174],
        [-1.8730],
        [-1.3222],
        [-0.5964],
        [-1.6592],
        [-2.1901],
        [-1.6903],
        [-0.7837],
        [ 0.8678],
        [ 0.8126],
        [-0.1006]])), ('layers.0.bias', tensor([ 0.2297,  1.3684, -0.5809, -1.1327,  0.1730,  0.1968,  0.5543,  0.3125,
         0.2388,  0.2436,  1.0407, -0.9440,  0.6716,  0.4237,  0.2274,  1.1576,
         0.2398,  0.1446, -0.5434])), ('layers.2.weight', tensor([[-0.3948, -0.5870,  0.1783,  0.4009, -0.7685, -0.8521, -0.2598, -2.6190,
          0.4266, -0.7429, -0.5542,  0.0551, -1.0054, -0.6699, -0.4562, -0.6050,
          0.5846,  0.5161, -0.1102]])), ('layers.2.bias', tensor([-0.2119]))])",0.34094391927845974,0.3316066387086608
4,4,"OrderedDict([('layers.0.weight', tensor([[-1.9951],
        [-0.8915],
        [ 0.6606],
        [ 1.0399],
        [-1.5945],
        [-1.8039],
        [-0.9219],
        [-2.7719],
        [ 1.2663],
        [-2.2302],
        [-1.3184],
        [-0.5964],
        [-1.7988],
        [-2.3928],
        [-1.8591],
        [-0.9765],
        [ 0.8623],
        [ 0.7840],
        [-0.1006]])), ('layers.0.bias', tensor([ 0.2281,  1.2818, -0.4721, -1.0391,  0.1099,  0.1433,  0.5158,  0.3286,
         0.1185,  0.2450,  1.0679, -0.9440,  0.6988,  0.3462,  0.2254,  1.0160,
         0.1498,  0.0480, -0.5434])), ('layers.2.weight', tensor([[-0.4387, -0.5109,  0.2074,  0.4204, -0.8629, -0.9737, -0.2382, -2.9656,
          0.4132, -0.8658, -0.5212,  0.0551, -1.0677, -0.6995, -0.4969, -0.5192,
          0.5351,  0.4451, -0.1102]])), ('layers.2.bias', tensor([-0.2051]))])",0.3409564140119681,0.33133813537221896
5,5,"OrderedDict([('layers.0.weight', tensor([[-2.1434],
        [-0.9929],
        [ 0.4990],
        [ 1.0571],
        [-1.8046],
        [-2.1270],
        [-1.0144],
        [-3.0903],
        [ 1.3095],
        [-2.6735],
        [-1.5109],
        [-0.5964],
        [-2.0387],
        [-2.6028],
        [-2.1306],
        [-1.0225],
        [ 0.9224],
        [ 0.8279],
        [-0.1006]])), ('layers.0.bias', tensor([ 0.3733,  1.2311, -0.7551, -1.1863,  0.2285,  0.1310,  0.5240,  0.3851,
         0.0585,  0.1240,  0.9603, -0.9440,  0.5890,  0.2532,  0.1343,  0.9993,
         0.0924,  0.0044, -0.5434])), ('layers.2.weight', tensor([[-0.4711, -0.5026,  0.1621,  0.4311, -0.9229, -1.0960, -0.2424, -3.1895,
          0.4616, -1.0138, -0.5425,  0.0551, -1.0993, -0.7429, -0.5300, -0.5097,
          0.5582,  0.4620, -0.1102]])), ('layers.2.bias', tensor([-0.2145]))])",0.34091171296378087,0.3312242825768781
6,6,"OrderedDict([('layers.0.weight', tensor([[-2.5322],
        [-1.0500],
        [ 0.4445],
        [ 1.1206],
        [-2.0396],
        [-2.3724],
        [-1.0792],
        [-3.4025],
        [ 1.3239],
        [-3.1400],
        [-1.6518],
        [-0.5964],
        [-1.9891],
        [-2.7644],
        [-2.3238],
        [-1.1149],
        [ 0.9546],
        [ 0.8376],
        [-0.1006]])), ('layers.0.bias', tensor([ 0.1530,  1.2677, -0.8410, -1.2023,  0.0850,  0.1202,  0.4473,  0.3596,
        -0.0653,  0.1392,  0.8356, -0.9440,  0.6755,  0.1809,  0.1238,  0.9866,
        -0.0232, -0.1371, -0.5434])), ('layers.2.weight', tensor([[-0.5165, -0.5628,  0.1225,  0.4735, -1.0419, -1.2813, -0.0994, -3.5069,
          0.4903, -1.1936, -0.4603,  0.0551, -0.9837, -0.7959, -0.5847, -0.5219,
          0.5523,  0.4456, -0.1102]])), ('layers.2.bias', tensor([-0.2664]))])",0.34091141291061916,0.33128209997836155
7,7,"OrderedDict([('layers.0.weight', tensor([[-2.7872],
        [-1.0819],
        [ 0.3581],
        [ 1.0992],
        [-2.2859],
        [-2.7088],
        [-1.2226],
        [-3.6717],
        [ 1.3709],
        [-3.7223],
        [-1.6859],
        [-0.5964],
        [-2.0540],
        [-3.0182],
        [-2.5777],
        [-1.2529],
        [ 1.0065],
        [ 0.8891],
        [-0.1006]])), ('layers.0.bias', tensor([ 0.1020,  1.2935, -0.9207, -1.2697,  0.1523,  0.1633,  0.2736,  0.3494,
        -0.1551,  0.2375,  0.8037, -0.9440,  0.6432,  0.1390,  0.1635,  0.8955,
        -0.1117, -0.1225, -0.5434])), ('layers.2.weight', tensor([[-0.6123, -0.6094,  0.1362,  0.3581, -1.2317, -1.5687, -0.1124, -3.6274,
          0.5437, -1.5030, -0.3980,  0.0551, -0.8319, -0.8693, -0.6681, -0.5068,
          0.5745,  0.4458, -0.1102]])), ('layers.2.bias', tensor([-0.2759]))])",0.34091717774560915,0.33121471533624
8,8,"OrderedDict([('layers.0.weight', tensor([[-3.0125],
        [-1.3017],
        [ 0.3388],
        [ 1.3058],
        [-2.6896],
        [-3.2479],
        [-1.3790],
        [-3.7735],
        [ 1.3783],
        [-4.4949],
        [-1.7708],
        [-0.5964],
        [-2.1275],
        [-3.2375],
        [-2.9716],
        [-1.2665],
        [ 1.0187],
        [ 0.8581],
        [-0.1006]])), ('layers.0.bias', tensor([ 0.1917,  1.1792, -0.9321, -1.0920,  0.0774,  0.0875,  0.2534,  0.3942,
        -0.2111,  0.2836,  0.7924, -0.9440,  0.6415,  0.1917,  0.0908,  0.8858,
        -0.1622, -0.2076, -0.5434])), ('layers.2.weight', tensor([[-0.7373, -0.5948,  0.0545,  0.4063, -1.4371, -1.9045, -0.1703, -3.5782,
          0.5574, -1.9232, -0.4247,  0.0551, -0.8381, -0.9670, -0.7624, -0.4274,
          0.5524,  0.4017, -0.1102]])), ('layers.2.bias', tensor([-0.3192]))])",0.3409116772813258,0.33119865959756284
9,9,"OrderedDict([('layers.0.weight', tensor([[-3.3285],
        [-1.3194],
        [ 0.3136],
        [ 1.2192],
        [-3.0519],
        [-3.7282],
        [-1.5660],
        [-3.8166],
        [ 1.4756],
        [-5.2453],
        [-1.9522],
        [-0.5964],
        [-2.0837],
        [-3.5179],
        [-3.3170],
        [-1.4981],
        [ 1.1036],
        [ 0.8744],
        [-0.1006]])), ('layers.0.bias', tensor([ 0.0968,  1.1999, -0.9440, -1.2294,  0.1449,  0.1603,  0.1062,  0.4429,
        -0.2433,  0.2650,  0.6577, -0.9440,  0.7064,  0.0990,  0.1569,  0.7714,
        -0.2108, -0.3481, -0.5434])), ('layers.2.weight', tensor([[-0.8444, -0.6040,  0.0457,  0.2184, -1.7080, -2.3249, -0.1105, -3.3323,
          0.6349, -2.2200, -0.3154,  0.0551, -0.6221, -1.0568, -0.8811, -0.4783,
          0.5759,  0.3659, -0.1102]])), ('layers.2.bias', tensor([-0.3134]))])",0.3409431319029156,0.3312119846951333
10,10,"OrderedDict([('layers.0.weight', tensor([[-3.6436],
        [-1.3921],
        [ 0.3032],
        [ 1.2955],
        [-3.4738],
        [-4.3099],
        [-1.5779],
        [-3.8410],
        [ 1.4978],
        [-5.7777],
        [-2.1127],
        [-0.5964],
        [-1.9709],
        [-3.7870],
        [-3.7161],
        [-1.7522],
        [ 1.1130],
        [ 0.8974],
        [-0.1006]])), ('layers.0.bias', tensor([ 0.1238,  1.1959, -0.9488, -1.1297,  0.1324,  0.1528,  0.0935,  0.4618,
        -0.2904,  0.2289,  0.5412, -0.9440,  0.8443,  0.1242,  0.1446,  0.6368,
        -0.2787, -0.3093, -0.5434])), ('layers.2.weight', tensor([[-0.9746, -0.6401,  0.0444,  0.2229, -1.9604, -2.7577, -0.1385, -3.0708,
          0.6510, -2.5869, -0.3004,  0.0551, -0.6477, -1.1629, -0.9969, -0.5279,
          0.5630,  0.3190, -0.1102]])), ('layers.2.bias', tensor([-0.3574]))])",0.34090143744681684,0.33120289872020303
11,11,"OrderedDict([('layers.0.weight', tensor([[-3.8978],
        [-1.4435],
        [ 0.3019],
        [ 1.3210],
        [-3.6641],
        [-4.8097],
        [-1.7171],
        [-3.8451],
        [ 1.5307],
        [-6.1261],
        [-2.1748],
        [-0.5964],
        [-1.9975],
        [-4.0418],
        [-3.9015],
        [-1.8477],
        [ 1.1425],
        [ 0.8795],
        [-0.1006]])), ('layers.0.bias', tensor([ 0.1356,  1.1827, -0.9494, -1.1093,  0.2294,  0.1476, -0.0548,  0.5233,
        -0.2957,  0.1847,  0.4884, -0.9440,  0.8669,  0.1198,  0.2385,  0.5685,
        -0.2533, -0.3006, -0.5434])), ('layers.2.weight', tensor([[-0.9315, -0.6523,  0.0443,  0.2393, -1.8782, -2.6975, -0.1507, -2.5415,
          0.6730, -2.9526, -0.2388,  0.0551, -0.6285, -1.2443, -0.7798, -0.4843,
          0.5475,  0.2898, -0.1102]])), ('layers.2.bias', tensor([-0.3944]))])",0.3408976741655305,0.3311941893115781
12,12,"OrderedDict([('layers.0.weight', tensor([[-4.5233],
        [-1.4523],
        [ 0.3019],
        [ 1.3159],
        [-3.6832],
        [-5.0381],
        [-1.7253],
        [-3.8418],
        [ 1.5619],
        [-6.7877],
        [-2.3157],
        [-0.5964],
        [-2.1145],
        [-4.7175],
        [-3.9186],
        [-1.9214],
        [ 1.1526],
        [ 0.8350],
        [-0.1006]])), ('layers.0.bias', tensor([ 0.0250,  1.2048, -0.9494, -1.0859,  0.2182,  0.1665, -0.0182,  0.5194,
        -0.2951,  0.2580,  0.4379, -0.9440,  0.8767,  0.0151,  0.2277,  0.5837,
        -0.2638, -0.3052, -0.5434])), ('layers.2.weight', tensor([[-1.1965, -0.6523,  0.0443,  0.2380, -1.9486, -3.0932, -0.1628, -2.3193,
          0.6950, -3.5148, -0.2364,  0.0551, -0.7231, -1.4633, -0.8758, -0.5068,
          0.5420,  0.2457, -0.1102]])), ('layers.2.bias', tensor([-0.4224]))])",0.340883444215907,0.33120145898435993
13,13,"OrderedDict([('layers.0.weight', tensor([[-5.0663],
        [-1.4334],
        [ 0.3019],
        [ 1.2364],
        [-3.7212],
        [-5.4482],
        [-1.7847],
        [-3.9048],
        [ 1.6225],
        [-7.5031],
        [-2.4022],
        [-0.5964],
        [-2.1609],
        [-5.2565],
        [-3.9533],
        [-2.0834],
        [ 1.1825],
        [ 0.7512],
        [-0.1006]])), ('layers.0.bias', tensor([ 0.1600,  1.1980, -0.9494, -1.1387,  0.1852,  0.1181,  0.0177,  0.4501,
        -0.2315,  0.1980,  0.4850, -0.9440,  0.9114,  0.1616,  0.1918,  0.5324,
        -0.2385, -0.3393, -0.5434])), ('layers.2.weight', tensor([[-1.5117, -0.5352,  0.0443,  0.1997, -1.8501, -3.6024, -0.0782, -2.1431,
          0.7248, -4.0747, -0.3520,  0.0551, -0.7152, -1.7571, -0.7919, -0.5520,
          0.5296,  0.1783, -0.1102]])), ('layers.2.bias', tensor([-0.4106]))])",0.34089686779654993,0.33127060428639415
14,14,"OrderedDict([('layers.0.weight', tensor([[-5.1668],
        [-1.4839],
        [ 0.3019],
        [ 1.2347],
        [-3.7909],
        [-5.8962],
        [-2.0112],
        [-4.0187],
        [ 1.6606],
        [-8.0519],
        [-2.5469],
        [-0.5964],
        [-2.2719],
        [-5.7894],
        [-4.0186],
        [-2.2935],
        [ 1.2179],
        [ 0.6329],
        [-0.1006]])), ('layers.0.bias', tensor([ 0.2402,  1.1941, -0.9494, -1.1113,  0.0983,  0.0831, -0.0283,  0.5044,
        -0.2832,  0.1715,  0.5151, -0.9440,  0.9150,  0.1344,  0.1081,  0.4834,
        -0.2181, -0.4495, -0.5434])), ('layers.2.weight', tensor([[-1.5744, -0.5658,  0.0443,  0.1882, -1.9857, -4.0590,  0.0938, -2.2549,
          0.7576, -4.5821, -0.4322,  0.0551, -0.7693, -1.9875, -0.9635, -0.6150,
          0.5359,  0.1147, -0.1102]])), ('layers.2.bias', tensor([-0.4604]))])",0.34088867732044587,0.33121608576926725
15,15,"OrderedDict([('layers.0.weight', tensor([[-5.3135],
        [-1.4955],
        [ 0.3019],
        [ 1.2111],
        [-3.8259],
        [-5.7615],
        [-2.0077],
        [-4.1083],
        [ 1.6964],
        [-8.4510],
        [-2.6224],
        [-0.5964],
        [-2.2996],
        [-6.1584],
        [-4.0555],
        [-2.3783],
        [ 1.2215],
        [ 0.5804],
        [-0.1006]])), ('layers.0.bias', tensor([ 0.0722,  1.1871, -0.9494, -1.0560,  0.0390,  0.3910, -0.0417,  0.4806,
        -0.2867,  0.0338,  0.5331, -0.9440,  0.9272,  0.0494,  0.0427,  0.4979,
        -0.2572, -0.4919, -0.5434])), ('layers.2.weight', tensor([[-1.6558, -0.5380,  0.0443,  0.1646, -2.0771, -4.3040,  0.0825, -2.1713,
          0.7818, -4.9863, -0.5080,  0.0551, -0.7110, -2.2041, -1.0675, -0.6375,
          0.5302,  0.1031, -0.1102]])), ('layers.2.bias', tensor([-0.4791]))])",0.3408790378093191,0.3312255180380624
16,16,"OrderedDict([('layers.0.weight', tensor([[-5.3276],
        [-1.4885],
        [ 0.3019],
        [ 1.1895],
        [-3.8715],
        [-6.1801],
        [-2.0050],
        [-4.2308],
        [ 1.7490],
        [-8.6070],
        [-2.7205],
        [-0.5964],
        [-2.3784],
        [-6.2636],
        [-4.1011],
        [-2.3124],
        [ 1.2038],
        [ 0.3633],
        [-0.1006]])), ('layers.0.bias', tensor([ 0.1210,  1.2251, -0.9494, -1.0438,  0.0977,  0.1314, -0.0506,  0.3937,
        -0.2860,  0.2092,  0.5824, -0.9440,  0.9004,  0.1419,  0.1203,  0.6714,
        -0.3885, -0.6762, -0.5434])), ('layers.2.weight', tensor([[-1.8072, -0.5765,  0.0443,  0.1256, -1.7200, -3.8535,  0.0749, -2.0538,
          0.8263, -4.7134, -0.5455,  0.0551, -0.6849, -2.0981, -0.7562, -0.6791,
          0.5369, -0.0112, -0.1102]])), ('layers.2.bias', tensor([-0.5372]))])",0.340895124052425,0.331204245815372
17,17,"OrderedDict([('layers.0.weight', tensor([[-5.5393],
        [-1.5940],
        [ 0.3019],
        [ 1.2271],
        [-3.9825],
        [-6.4458],
        [-2.0006],
        [-4.3535],
        [ 1.7752],
        [-8.9825],
        [-2.9841],
        [-0.5964],
        [-2.5213],
        [-6.4305],
        [-4.2057],
        [-2.5411],
        [ 1.2140],
        [ 0.2742],
        [-0.1006]])), ('layers.0.bias', tensor([ 0.0759,  1.1975, -0.9494, -0.8864,  0.1991,  0.1112, -0.0628,  0.3506,
        -0.2953,  0.1711,  0.4355, -0.9440,  0.8883,  0.1229,  0.1958,  0.5931,
        -0.3912, -0.7137, -0.5434])), ('layers.2.weight', tensor([[-2.0746, -0.6206,  0.0443,  0.1650, -1.7304, -4.1510,  0.0604, -2.1482,
          0.8482, -5.1593, -0.6285,  0.0551, -0.8014, -2.3433, -0.8173, -0.7408,
          0.5260,  0.1239, -0.1102]])), ('layers.2.bias', tensor([-0.6027]))])",0.3408786941448524,0.3312141272678437
18,18,"OrderedDict([('layers.0.weight', tensor([[-5.6668],
        [-1.4998],
        [ 0.3019],
        [ 1.0610],
        [-4.2348],
        [-6.5773],
        [-1.9990],
        [-4.5592],
        [ 1.8142],
        [-9.1249],
        [-3.0215],
        [-0.5964],
        [-2.4212],
        [-6.5590],
        [-4.4576],
        [-2.4357],
        [ 1.1833],
        [ 0.2397],
        [-0.1006]])), ('layers.0.bias', tensor([ 0.1345,  1.2848, -0.9494, -0.9305,  0.0071,  0.1479, -0.0673,  0.2921,
        -0.3261,  0.2170,  0.5056, -0.9440,  1.0405,  0.1563,  0.0017,  0.7813,
        -0.5010, -0.7277, -0.5434])), ('layers.2.weight', tensor([[-1.8215, -0.6144,  0.0443,  0.0783, -1.6100, -3.6977,  0.0558, -2.3111,
          0.8795, -4.8068, -0.6750,  0.0551, -0.8706, -1.9685, -0.7486, -0.8056,
          0.5121,  0.1220, -0.1102]])), ('layers.2.bias', tensor([-0.5944]))])",0.340882863385885,0.3314949110495641
19,19,"OrderedDict([('layers.0.weight', tensor([[-5.6115],
        [-1.6270],
        [ 0.3019],
        [ 0.7983],
        [-4.2635],
        [-6.5178],
        [-1.9964],
        [-4.7183],
        [ 1.8705],
        [-9.0622],
        [-3.0520],
        [-0.5964],
        [-2.8145],
        [-6.5027],
        [-4.4862],
        [-2.3347],
        [ 1.1577],
        [ 0.2322],
        [-0.1006]])), ('layers.0.bias', tensor([ 0.2661,  1.1398, -0.9494, -1.1511,  0.0572,  0.2884, -0.0742,  0.3675,
        -0.2857,  0.3643,  0.6677, -0.9440,  0.6987,  0.2903,  0.0481,  0.9190,
        -0.5784, -0.7306, -0.5434])), ('layers.2.weight', tensor([[-1.8765, -0.4169,  0.0443, -0.0369, -1.7077, -3.7643,  0.0450, -2.5881,
          0.9057, -5.0153, -0.9591,  0.0551, -0.7872, -2.0428, -0.8531, -0.6633,
          0.4647,  0.1219, -0.1102]])), ('layers.2.bias', tensor([-0.5575]))])",0.34088452825450666,0.3312382900462285
20,20,"OrderedDict([('layers.0.weight', tensor([[-5.8163],
        [-1.6365],
        [ 0.3019],
        [ 0.9144],
        [-4.3545],
        [-6.6510],
        [-1.9936],
        [-4.6355],
        [ 1.9104],
        [-9.2955],
        [-3.1392],
        [-0.5964],
        [-2.9128],
        [-6.7102],
        [-4.5693],
        [-2.3887],
        [ 1.1985],
        [ 0.2322],
        [-0.1006]])), ('layers.0.bias', tensor([ 0.0335,  1.1954, -0.9494, -1.1979,  0.1830,  0.1791, -0.0832,  0.4049,
        -0.3879,  0.1073,  0.6558, -0.9440,  0.6254,  0.0603,  0.2067,  0.9704,
        -0.5561, -0.7306, -0.5434])), ('layers.2.weight', tensor([[-1.8072, -0.5314,  0.0443, -0.2289, -1.7643, -3.7374,  0.0324, -2.0872,
          0.9665, -4.9894, -0.8690,  0.0551, -0.7985, -1.9863, -1.0197, -0.7719,
          0.4801,  0.1219, -0.1102]])), ('layers.2.bias', tensor([-0.6142]))])",0.34087788877718744,0.3312221295620336
21,21,"OrderedDict([('layers.0.weight', tensor([[-5.8288],
        [-1.6352],
        [ 0.3019],
        [ 0.8608],
        [-4.5089],
        [-6.8900],
        [-1.9915],
        [-4.6414],
        [ 1.9547],
        [-9.5712],
        [-3.2060],
        [-0.5964],
        [-2.8993],
        [-6.7227],
        [-4.3086],
        [-2.4912],
        [ 1.1803],
        [ 0.2322],
        [-0.1006]])), ('layers.0.bias', tensor([ 0.1724,  1.1938, -0.9494, -1.3381,  0.1417,  0.1390, -0.0912,  0.3810,
        -0.3741,  0.0321,  0.6694, -0.9440,  0.7027,  0.2057,  0.4141,  0.9737,
        -0.4909, -0.7306, -0.5434])), ('layers.2.weight', tensor([[-1.7281, -0.5302,  0.0443, -0.3468, -1.7766, -3.8868,  0.0165, -1.6452,
          0.9859, -5.4580, -0.8200,  0.0551, -0.6624, -2.0073, -0.6647, -0.7648,
          0.3762,  0.1219, -0.1102]])), ('layers.2.bias', tensor([-0.6423]))])",0.3408897831115769,0.33121257235321216
22,22,"OrderedDict([('layers.0.weight', tensor([[-5.9418],
        [-1.6716],
        [ 0.3019],
        [ 0.9699],
        [-4.6427],
        [-7.3191],
        [-1.9906],
        [-4.5990],
        [ 1.9782],
        [-9.6925],
        [-3.3169],
        [-0.5964],
        [-2.9812],
        [-6.8389],
        [-4.0261],
        [-2.5466],
        [ 1.1655],
        [ 0.2322],
        [-0.1006]])), ('layers.0.bias', tensor([ 0.1708,  1.1859, -0.9494, -1.1704,  0.1549, -0.0645, -0.0956,  0.4127,
        -0.3753,  0.1228,  0.6345, -0.9440,  0.6636,  0.2030,  0.6916,  0.9346,
        -0.4381, -0.7306, -0.5434])), ('layers.2.weight', tensor([[-1.5322e+00, -5.3648e-01,  4.4346e-02, -1.2580e-01, -1.6453e+00,
         -4.2000e+00,  2.0429e-03, -1.5648e+00,  9.9547e-01, -6.0559e+00,
         -7.3938e-01,  5.5138e-02, -6.5739e-01, -1.8374e+00, -4.3792e-01,
         -6.8705e-01,  3.1358e-01,  1.2189e-01, -1.1024e-01]])), ('layers.2.bias', tensor([-0.6409]))])",0.34087788399979363,0.3311935534202801
23,23,"OrderedDict([('layers.0.weight', tensor([[ -6.1767],
        [ -1.5033],
        [  0.3019],
        [  0.8559],
        [ -4.7846],
        [ -7.3920],
        [ -1.9910],
        [ -4.7669],
        [  2.0003],
        [-10.1410],
        [ -3.3466],
        [ -0.5964],
        [ -3.1031],
        [ -7.0790],
        [ -3.9502],
        [ -2.4917],
        [  1.1100],
        [  0.2322],
        [ -0.1006]])), ('layers.0.bias', tensor([ 0.1325,  1.2794, -0.9494, -1.3463,  0.1389,  0.2975, -0.0924,  0.4719,
        -0.3970,  0.2214,  0.6639, -0.9440,  0.5815,  0.1645,  0.7806,  1.0480,
        -0.4407, -0.7306, -0.5434])), ('layers.2.weight', tensor([[-1.5835, -0.5069,  0.0443, -0.1800, -1.6126, -4.8075, -0.0150, -1.7073,
          1.0035, -6.5751, -0.7056,  0.0551, -0.3929, -1.9262, -0.4259, -0.7538,
          0.2612,  0.1219, -0.1102]])), ('layers.2.bias', tensor([-0.6670]))])",0.34087839472671405,0.3313056445248666
24,24,"OrderedDict([('layers.0.weight', tensor([[ -6.2167],
        [ -1.6272],
        [  0.3019],
        [  0.9492],
        [ -4.7835],
        [ -7.4319],
        [ -1.9913],
        [ -4.9640],
        [  2.0372],
        [-10.2160],
        [ -3.3053],
        [ -0.5964],
        [ -3.0052],
        [ -7.1203],
        [ -3.8804],
        [ -2.5592],
        [  1.0061],
        [  0.2322],
        [ -0.1006]])), ('layers.0.bias', tensor([ 0.0655,  1.2339, -0.9494, -1.1803,  0.2069,  0.2888, -0.0895,  0.4395,
        -0.4398,  0.1210,  0.7217, -0.9440,  0.6750,  0.0957,  0.8411,  1.0448,
        -0.5122, -0.7306, -0.5434])), ('layers.2.weight', tensor([[-1.5726, -0.5435,  0.0443, -0.1664, -1.3380, -4.3108, -0.0185, -1.8860,
          1.0432, -6.5403, -0.5480,  0.0551, -0.3674, -1.9064, -0.2980, -0.7522,
          0.2254,  0.1219, -0.1102]])), ('layers.2.bias', tensor([-0.7027]))])",0.3408769049460225,0.3313455755169751
25,25,"OrderedDict([('layers.0.weight', tensor([[ -6.4714],
        [ -1.7134],
        [  0.3019],
        [  0.9887],
        [ -4.8679],
        [ -7.5173],
        [ -1.9930],
        [ -4.8951],
        [  2.0992],
        [-10.4964],
        [ -3.3373],
        [ -0.5964],
        [ -3.0751],
        [ -7.3790],
        [ -3.9498],
        [ -2.6736],
        [  0.8445],
        [  0.2322],
        [ -0.1006]])), ('layers.0.bias', tensor([ 0.0085,  1.1983, -0.9494, -1.2217,  0.1009,  0.2374, -0.0636,  0.5383,
        -0.4071,  0.1120,  0.7447, -0.9440,  0.6502,  0.0403,  0.8046,  0.9558,
        -0.6008, -0.7306, -0.5434])), ('layers.2.weight', tensor([[-1.5067, -0.5216,  0.0443, -0.1853, -1.3451, -4.3519, -0.0395, -1.7301,
          1.0815, -6.7682, -0.5777,  0.0551, -0.3832, -1.8907, -0.3455, -0.6129,
          0.1104,  0.1219, -0.1102]])), ('layers.2.bias', tensor([-0.6632]))])",0.34088342022409657,0.33119779033799734
26,26,"OrderedDict([('layers.0.weight', tensor([[ -6.5194],
        [ -1.5543],
        [  0.3019],
        [  0.9059],
        [ -4.9887],
        [ -7.5456],
        [ -2.1671],
        [ -4.9184],
        [  2.1180],
        [-10.6110],
        [ -3.7578],
        [ -0.5964],
        [ -3.0735],
        [ -7.4717],
        [ -4.1671],
        [ -2.6160],
        [  0.7209],
        [  0.2322],
        [ -0.1006]])), ('layers.0.bias', tensor([ 0.0493,  1.3121, -0.9494, -1.3911,  0.1003,  0.3562, -0.2071,  0.5490,
        -0.3893,  0.0538,  0.4222, -0.9440,  0.7294, -0.0047,  0.6800,  1.0549,
        -0.6446, -0.7306, -0.5434])), ('layers.2.weight', tensor([[-1.6371, -0.5284,  0.0443, -0.1591, -1.2079, -4.2131,  0.1880, -1.5857,
          1.0787, -7.0376, -0.5448,  0.0551, -0.4070, -2.0283, -0.3801, -0.6908,
          0.0508,  0.1219, -0.1102]])), ('layers.2.bias', tensor([-0.7047]))])",0.34087173624496636,0.3312550691465477
27,27,"OrderedDict([('layers.0.weight', tensor([[ -6.9164],
        [ -1.5855],
        [  0.3019],
        [  0.9124],
        [ -4.9884],
        [ -7.6890],
        [ -2.1671],
        [ -4.9580],
        [  2.1373],
        [-10.6298],
        [ -3.7914],
        [ -0.5964],
        [ -3.1703],
        [ -7.6269],
        [ -4.0371],
        [ -2.6803],
        [  0.5601],
        [  0.2322],
        [ -0.1006]])), ('layers.0.bias', tensor([-2.6514e-02,  1.2817e+00, -9.4936e-01, -1.3581e+00,  1.2279e-01,
         1.9426e-01, -2.0708e-01,  5.6025e-01, -4.0520e-01,  3.6449e-01,
         4.1263e-01, -9.4402e-01,  7.1403e-01,  8.9815e-04,  8.3852e-01,
         1.0599e+00, -7.4611e-01, -7.3059e-01, -5.4343e-01])), ('layers.2.weight', tensor([[-1.7607, -0.4727,  0.0443, -0.1856, -1.2970, -4.0589,  0.1880, -1.4594,
          1.0715, -7.7277, -0.5041,  0.0551, -0.3552, -2.2756, -0.4582, -0.7419,
         -0.0465,  0.1219, -0.1102]])), ('layers.2.bias', tensor([-0.7087]))])",0.3408830353748864,0.33122076268242323
28,28,"OrderedDict([('layers.0.weight', tensor([[ -6.9523],
        [ -1.7067],
        [  0.3019],
        [  0.9024],
        [ -5.0260],
        [ -7.8376],
        [ -2.1671],
        [ -5.1837],
        [  2.1564],
        [-10.9598],
        [ -3.9576],
        [ -0.5964],
        [ -3.2211],
        [ -8.0430],
        [ -3.9818],
        [ -2.7908],
        [  0.4929],
        [  0.2322],
        [ -0.1006]])), ('layers.0.bias', tensor([ 0.0225,  1.1957, -0.9494, -1.3862,  0.0559,  0.0752, -0.2071,  0.4671,
        -0.4201,  0.2057,  0.3093, -0.9440,  0.7561,  0.0633,  0.9757,  1.0001,
        -0.7655, -0.7306, -0.5434])), ('layers.2.weight', tensor([[-1.8434, -0.4452,  0.0443, -0.1368, -1.4243, -4.1566,  0.1880, -1.5951,
          1.0844, -7.5098, -0.6339,  0.0551, -0.5169, -2.5266, -0.5420, -0.6710,
         -0.0505,  0.1219, -0.1102]])), ('layers.2.bias', tensor([-0.7131]))])",0.34087531881921684,0.33119917371320057
29,29,"OrderedDict([('layers.0.weight', tensor([[ -7.0043],
        [ -1.6873],
        [  0.3019],
        [  0.9584],
        [ -5.0262],
        [ -7.8575],
        [ -2.1671],
        [ -4.9923],
        [  2.1741],
        [-10.9655],
        [ -4.1659],
        [ -0.5964],
        [ -3.4623],
        [ -8.0837],
        [ -4.2206],
        [ -2.6880],
        [  0.4733],
        [  0.2322],
        [ -0.1006]])), ('layers.0.bias', tensor([ 0.0433,  1.2385, -0.9494, -1.3723,  0.0918,  0.0730, -0.2071,  0.6852,
        -0.4149,  0.3205,  0.1589, -0.9440,  0.6896,  0.0600,  0.8586,  1.0652,
        -0.8960, -0.7306, -0.5434])), ('layers.2.weight', tensor([[-1.9190, -0.4951,  0.0443, -0.1818, -1.4848, -4.2199,  0.1880, -1.3234,
          1.0870, -7.7176, -0.5603,  0.0551, -0.6467, -2.5782, -0.6302, -0.5202,
         -0.0988,  0.1219, -0.1102]])), ('layers.2.bias', tensor([-0.7403]))])",0.3408724273966435,0.331207692236026
30,30,"OrderedDict([('layers.0.weight', tensor([[ -7.0812],
        [ -1.7259],
        [  0.3019],
        [  1.0799],
        [ -5.0364],
        [ -7.8831],
        [ -2.1671],
        [ -5.3181],
        [  2.1867],
        [-11.0906],
        [ -4.1319],
        [ -0.5964],
        [ -3.4943],
        [ -8.1349],
        [ -4.3030],
        [ -2.7941],
        [  0.3496],
        [  0.2322],
        [ -0.1006]])), ('layers.0.bias', tensor([-0.0046,  1.2042, -0.9494, -1.2792,  0.0458,  0.0491, -0.2071,  0.4740,
        -0.4204,  0.2376,  0.2990, -0.9440,  0.7312,  0.0255,  0.8707,  1.0504,
        -1.0114, -0.7306, -0.5434])), ('layers.2.weight', tensor([[-1.9542, -0.4347,  0.0443, -0.2104, -1.4341, -4.2705,  0.1880, -1.4285,
          1.0770, -7.4829, -0.5933,  0.0551, -0.6663, -2.6176, -0.6610, -0.5610,
         -0.1354,  0.1219, -0.1102]])), ('layers.2.bias', tensor([-0.7320]))])",0.3408830849489194,0.33118806082430224
31,31,"OrderedDict([('layers.0.weight', tensor([[ -7.1093],
        [ -1.6809],
        [  0.3019],
        [  0.9799],
        [ -5.0570],
        [ -7.9600],
        [ -2.1671],
        [ -5.2942],
        [  2.1993],
        [-11.1035],
        [ -4.2249],
        [ -0.5964],
        [ -3.5098],
        [ -8.2815],
        [ -4.2997],
        [ -2.8270],
        [  0.4408],
        [  0.2322],
        [ -0.1006]])), ('layers.0.bias', tensor([ 0.2955,  1.2573, -0.9494, -1.4005,  0.0304,  0.0312, -0.2071,  0.5337,
        -0.4260,  0.2031,  0.1764, -0.9440,  0.7668,  0.0081,  0.9156,  1.0682,
        -1.0866, -0.7306, -0.5434])), ('layers.2.weight', tensor([[-2.1434, -0.4892,  0.0443, -0.1992, -1.5585, -4.4182,  0.1880, -1.3949,
          1.0820, -7.5133, -0.4568,  0.0551, -0.6046, -2.7187, -0.6741, -0.6153,
         -0.0860,  0.1219, -0.1102]])), ('layers.2.bias', tensor([-0.7568]))])",0.3408656343462437,0.33122662444521805
32,32,"OrderedDict([('layers.0.weight', tensor([[ -6.9813],
        [ -1.8458],
        [  0.3019],
        [  0.8924],
        [ -5.1226],
        [ -8.1905],
        [ -2.1671],
        [ -5.0647],
        [  2.2307],
        [-11.1068],
        [ -4.2001],
        [ -0.5964],
        [ -3.6662],
        [ -8.7625],
        [ -4.4269],
        [ -2.9023],
        [  0.8215],
        [  0.2322],
        [ -0.1006]])), ('layers.0.bias', tensor([ 4.3071e-01,  1.1513e+00, -9.4936e-01, -1.5073e+00, -2.1802e-02,
         1.0917e-03, -2.0708e-01,  7.5422e-01, -4.3745e-01,  2.5814e-01,
         2.2013e-01, -9.4402e-01,  6.8914e-01, -3.5922e-03,  8.3396e-01,
         1.0091e+00, -8.8596e-01, -7.3059e-01, -5.4343e-01])), ('layers.2.weight', tensor([[-1.7406, -0.4612,  0.0443, -0.0839, -1.5368, -4.4489,  0.1880, -1.0296,
          1.0929, -7.7896, -0.1030,  0.0551, -0.5298, -3.1572, -0.5419, -0.4605,
         -0.3588,  0.1219, -0.1102]])), ('layers.2.bias', tensor([-0.7864]))])",0.3408863983184641,0.33118973426081044
33,33,"OrderedDict([('layers.0.weight', tensor([[ -7.0644],
        [ -1.8797],
        [  0.3019],
        [  0.9954],
        [ -5.2640],
        [ -8.6222],
        [ -2.1671],
        [ -4.9874],
        [  2.2436],
        [-11.1125],
        [ -4.3058],
        [ -0.5964],
        [ -3.6748],
        [ -8.9193],
        [ -4.4314],
        [ -2.9140],
        [  0.9022],
        [  0.2322],
        [ -0.1006]])), ('layers.0.bias', tensor([ 0.4095,  1.1377, -0.9494, -1.4612, -0.0117, -0.0838, -0.2071,  0.8393,
        -0.4583,  0.2891,  0.1064, -0.9440,  0.6996, -0.0039,  0.8507,  0.9920,
        -0.8704, -0.7306, -0.5434])), ('layers.2.weight', tensor([[-1.5732, -0.4672,  0.0443, -0.2366, -1.8161, -4.7677,  0.1880, -1.0352,
          1.0995, -7.7969, -0.1500,  0.0551, -0.4781, -3.4317, -0.5201, -0.4073,
         -0.2862,  0.1219, -0.1102]])), ('layers.2.bias', tensor([-0.7804]))])",0.34086752364190187,0.3311919536549637
34,34,"OrderedDict([('layers.0.weight', tensor([[ -7.1796],
        [ -1.8303],
        [  0.3019],
        [  0.6631],
        [ -5.6787],
        [ -8.7668],
        [ -2.1671],
        [ -5.1940],
        [  2.2549],
        [-11.1112],
        [ -4.3057],
        [ -0.5964],
        [ -3.3437],
        [ -9.1559],
        [ -4.2946],
        [ -3.0393],
        [  0.8512],
        [  0.2322],
        [ -0.1006]])), ('layers.0.bias', tensor([ 0.3626,  1.2205, -0.9494, -1.7131, -0.0497, -0.0946, -0.2071,  0.7204,
        -0.4290,  0.3280,  0.1123, -0.9440,  0.9443,  0.2577,  0.9677,  0.9408,
        -1.0075, -0.7306, -0.5434])), ('layers.2.weight', tensor([[-1.3335, -0.5016,  0.0443,  0.1499, -1.9926, -5.0551,  0.1880, -0.9396,
          1.0714, -7.7354, -0.1687,  0.0551, -0.3593, -3.7456, -0.3819, -0.4396,
         -0.2659,  0.1219, -0.1102]])), ('layers.2.bias', tensor([-0.7602]))])",0.34088570869228785,0.33119925026212377
35,35,"OrderedDict([('layers.0.weight', tensor([[ -7.0318],
        [ -1.7738],
        [  0.3019],
        [  0.6155],
        [ -5.7079],
        [ -9.1683],
        [ -2.1671],
        [ -5.1871],
        [  2.2574],
        [-11.4774],
        [ -4.3353],
        [ -0.5964],
        [ -3.6696],
        [ -9.1842],
        [ -4.4862],
        [ -2.9273],
        [  0.8765],
        [  0.2322],
        [ -0.1006]])), ('layers.0.bias', tensor([ 0.5030,  1.2505, -0.9494, -1.7359, -0.0074,  0.0263, -0.2071,  0.7589,
        -0.4067,  0.0468,  0.0345, -0.9440,  0.7467,  0.2296,  0.8874,  1.0933,
        -1.0446, -0.7306, -0.5434])), ('layers.2.weight', tensor([[-1.0830, -0.4605,  0.0443,  0.1378, -2.0240, -5.4199,  0.1880, -0.7695,
          1.0480, -7.6369, -0.1818,  0.0551, -0.4278, -3.5073, -0.5972, -0.5415,
         -0.2498,  0.1219, -0.1102]])), ('layers.2.bias', tensor([-0.7722]))])",0.34087642424661624,0.3311901843024718
36,36,"OrderedDict([('layers.0.weight', tensor([[ -7.0820],
        [ -1.8107],
        [  0.3019],
        [  0.5813],
        [ -5.7504],
        [ -9.3435],
        [ -2.1671],
        [ -5.2401],
        [  2.2795],
        [-11.5329],
        [ -4.4538],
        [ -0.5964],
        [ -3.6307],
        [ -9.2431],
        [ -4.4275],
        [ -2.9586],
        [  0.9385],
        [  0.2322],
        [ -0.1006]])), ('layers.0.bias', tensor([ 0.5152,  1.2123, -0.9494, -1.7516, -0.0336,  0.0395, -0.2071,  0.7783,
        -0.4353,  0.1924,  0.1055, -0.9440,  0.8110,  0.2250,  0.9696,  1.0576,
        -1.0855, -0.7306, -0.5434])), ('layers.2.weight', tensor([[-1.1368, -0.4464,  0.0443,  0.1332, -2.0587, -5.4027,  0.1880, -0.8447,
          1.0669, -7.4497,  0.1352,  0.0551, -0.3991, -3.4305, -0.5225, -0.4319,
         -0.2662,  0.1219, -0.1102]])), ('layers.2.bias', tensor([-0.7631]))])",0.3408710606645279,0.33119976759456465
37,37,"OrderedDict([('layers.0.weight', tensor([[ -6.9638],
        [ -1.7265],
        [  0.3019],
        [  0.5626],
        [ -5.8402],
        [ -9.6969],
        [ -2.1671],
        [ -5.2847],
        [  2.2724],
        [-11.5059],
        [ -4.4818],
        [ -0.5964],
        [ -3.6755],
        [ -9.1898],
        [ -4.4654],
        [ -2.8762],
        [  0.9177],
        [  0.2322],
        [ -0.1006]])), ('layers.0.bias', tensor([ 0.6702,  1.2960, -0.9494, -1.7600, -0.1184,  0.0615, -0.2071,  0.7187,
        -0.4185,  0.3522, -0.0438, -0.9440,  0.7921,  0.3785,  0.9642,  1.1619,
        -1.1499, -0.7306, -0.5434])), ('layers.2.weight', tensor([[-1.1106, -0.4940,  0.0443,  0.1322, -2.0833, -5.2239,  0.1880, -0.6101,
          1.0429, -7.5173, -0.0952,  0.0551, -0.3302, -3.6105, -0.4934, -0.5294,
         -0.1950,  0.1219, -0.1102]])), ('layers.2.bias', tensor([-0.7830]))])",0.3408691364501435,0.3312367490133176
38,38,"OrderedDict([('layers.0.weight', tensor([[ -7.0719],
        [ -1.7767],
        [  0.3019],
        [  0.5592],
        [ -5.9529],
        [-10.1190],
        [ -2.1671],
        [ -5.1497],
        [  2.2823],
        [-11.7078],
        [ -4.4985],
        [ -0.5964],
        [ -3.8503],
        [ -9.3781],
        [ -4.6079],
        [ -2.9845],
        [  0.9452],
        [  0.2322],
        [ -0.1006]])), ('layers.0.bias', tensor([ 0.6685,  1.2538, -0.9494, -1.7615,  0.0198, -0.0217, -0.2071,  0.8670,
        -0.4369,  0.2525, -0.0973, -0.9440,  0.6657,  0.2747,  0.8786,  1.1130,
        -1.1982, -0.7306, -0.5434])), ('layers.2.weight', tensor([[-0.9959, -0.4668,  0.0443,  0.1321, -2.1795, -5.2861,  0.1880, -0.6629,
          1.0426, -7.1100, -0.1738,  0.0551, -0.3649, -3.4276, -0.5384, -0.5201,
         -0.2146,  0.1219, -0.1102]])), ('layers.2.bias', tensor([-0.7648]))])",0.34087291053482927,0.3311945636810321
39,39,"OrderedDict([('layers.0.weight', tensor([[ -7.2166],
        [ -1.7780],
        [  0.3019],
        [  0.5592],
        [ -6.1490],
        [-10.4387],
        [ -2.1671],
        [ -5.0547],
        [  2.2944],
        [-11.7757],
        [ -4.5024],
        [ -0.5964],
        [ -3.7995],
        [ -9.4782],
        [ -4.6217],
        [ -2.9923],
        [  0.9625],
        [  0.2322],
        [ -0.1006]])), ('layers.0.bias', tensor([ 0.7138,  1.2445, -0.9494, -1.7615, -0.1420, -0.0265, -0.2071,  0.9756,
        -0.4551,  0.1362, -0.0882, -0.9440,  0.7298,  0.1609,  0.9106,  1.1140,
        -1.2021, -0.7306, -0.5434])), ('layers.2.weight', tensor([[-1.3579, -0.4450,  0.0443,  0.1321, -2.1290, -5.2881,  0.1880, -0.6617,
          1.0493, -6.9255, -0.1762,  0.0551, -0.3759, -3.0983, -0.5948, -0.4500,
         -0.1893,  0.1219, -0.1102]])), ('layers.2.bias', tensor([-0.7264]))])",0.3408715088408102,0.3312059527681393
40,40,"OrderedDict([('layers.0.weight', tensor([[ -7.3032],
        [ -1.8999],
        [  0.3019],
        [  0.5592],
        [ -6.4071],
        [-10.5823],
        [ -2.1671],
        [ -4.9415],
        [  2.3013],
        [-11.9135],
        [ -4.5156],
        [ -0.5964],
        [ -3.9107],
        [ -9.4969],
        [ -4.5309],
        [ -3.1149],
        [  1.0476],
        [  0.2322],
        [ -0.1006]])), ('layers.0.bias', tensor([ 0.7439,  1.1900, -0.9494, -1.7615, -0.2003,  0.2721, -0.2071,  1.0221,
        -0.4605,  0.0662, -0.0471, -0.9440,  0.5651,  0.1360,  0.9491,  1.0111,
        -1.1861, -0.7306, -0.5434])), ('layers.2.weight', tensor([[-1.0986, -0.4915,  0.0443,  0.1321, -2.0603, -5.0900,  0.1880, -0.4610,
          1.0494, -6.8343, -0.1936,  0.0551, -0.1695, -3.1004, -0.4123, -0.4173,
         -0.3241,  0.1219, -0.1102]])), ('layers.2.bias', tensor([-0.7449]))])",0.34087335988869805,0.3311983743090692
41,41,"OrderedDict([('layers.0.weight', tensor([[ -7.4523],
        [ -1.8189],
        [  0.3019],
        [  0.5592],
        [ -6.4683],
        [-10.6006],
        [ -2.1671],
        [ -4.8185],
        [  2.3216],
        [-12.0900],
        [ -4.8257],
        [ -0.5964],
        [ -3.9908],
        [ -9.5325],
        [ -4.8150],
        [ -3.0277],
        [  1.0555],
        [  0.2322],
        [ -0.1006]])), ('layers.0.bias', tensor([ 0.6753,  1.2363, -0.9494, -1.7615, -0.1724,  0.2439, -0.2071,  1.1989,
        -0.4352,  0.0109, -0.0631, -0.9440,  0.5733,  0.1165,  0.7932,  1.1088,
        -1.2721, -0.7306, -0.5434])), ('layers.2.weight', tensor([[-1.1777, -0.4444,  0.0443,  0.1321, -2.0680, -5.1129,  0.1880, -0.6138,
          1.0459, -7.0123, -0.1492,  0.0551, -0.2780, -3.1408, -0.5499, -0.4007,
         -0.2321,  0.1219, -0.1102]])), ('layers.2.bias', tensor([-0.7622]))])",0.3408741313209389,0.33120485293666274
42,42,"OrderedDict([('layers.0.weight', tensor([[ -7.1468],
        [ -2.0045],
        [  0.3019],
        [  0.5592],
        [ -6.5737],
        [-10.7254],
        [ -2.1671],
        [ -5.1956],
        [  2.3342],
        [-12.2946],
        [ -4.8334],
        [ -0.5964],
        [ -4.0532],
        [ -9.3665],
        [ -4.9453],
        [ -3.1292],
        [  1.1500],
        [  0.2322],
        [ -0.1006]])), ('layers.0.bias', tensor([ 1.0135,  1.1102, -0.9494, -1.7615, -0.0078,  0.0678, -0.2071,  0.9105,
        -0.4436,  0.0853, -0.0510, -0.9440,  0.5760,  0.3996,  0.7624,  1.0102,
        -1.2347, -0.7306, -0.5434])), ('layers.2.weight', tensor([[-0.9954, -0.4841,  0.0443,  0.1321, -2.1443, -5.2130,  0.1880, -0.5350,
          1.0479, -7.2561, -0.1652,  0.0551, -0.1724, -3.4444, -0.5909, -0.3589,
         -0.2688,  0.1219, -0.1102]])), ('layers.2.bias', tensor([-0.7838]))])",0.3408723038168826,0.33123203194611706
43,43,"OrderedDict([('layers.0.weight', tensor([[ -7.2627],
        [ -1.9618],
        [  0.3019],
        [  0.5592],
        [ -6.9598],
        [-10.6848],
        [ -2.1671],
        [ -5.0632],
        [  2.3392],
        [-12.5562],
        [ -4.8474],
        [ -0.5964],
        [ -4.1017],
        [ -9.8749],
        [ -4.9152],
        [ -3.1878],
        [  1.1702],
        [  0.2322],
        [ -0.1006]])), ('layers.0.bias', tensor([ 0.9351,  1.1676, -0.9494, -1.7615,  0.2702,  0.3297, -0.2071,  1.0392,
        -0.4416,  0.2421, -0.0179, -0.9440,  0.5182,  0.2233,  0.7947,  1.0203,
        -1.2607, -0.7306, -0.5434])), ('layers.2.weight', tensor([[-0.9985, -0.4660,  0.0443,  0.1321, -2.3095, -5.4358,  0.1880, -0.5108,
          1.0412, -7.3697, -0.2066,  0.0551, -0.2181, -3.1608, -0.5203, -0.4316,
         -0.3079,  0.1219, -0.1102]])), ('layers.2.bias', tensor([-0.7785]))])",0.34087143128528646,0.3312092650575998
44,44,"OrderedDict([('layers.0.weight', tensor([[ -7.3032],
        [ -2.0896],
        [  0.3019],
        [  0.5592],
        [ -7.1070],
        [-10.7739],
        [ -2.1671],
        [ -5.0278],
        [  2.3388],
        [-12.6006],
        [ -4.8534],
        [ -0.5964],
        [ -4.2395],
        [ -9.9149],
        [ -5.0655],
        [ -3.3217],
        [  1.1129],
        [  0.2322],
        [ -0.1006]])), ('layers.0.bias', tensor([ 0.9529,  1.1167, -0.9494, -1.7615,  0.1333,  0.2087, -0.2071,  1.0609,
        -0.4565,  0.1385,  0.0201, -0.9440,  0.3538,  0.1400,  0.6962,  0.9592,
        -1.3755, -0.7306, -0.5434])), ('layers.2.weight', tensor([[-0.9701, -0.5010,  0.0443,  0.1321, -2.1049, -5.0627,  0.1880, -0.4367,
          1.0286, -7.1691, -0.2365,  0.0551, -0.2018, -3.0421, -0.5076, -0.4766,
         -0.2863,  0.1219, -0.1102]])), ('layers.2.bias', tensor([-0.7912]))])",0.34087700614336625,0.33120903907203186
45,45,"OrderedDict([('layers.0.weight', tensor([[ -7.3317],
        [ -2.0973],
        [  0.3019],
        [  0.5592],
        [ -7.0961],
        [-10.7564],
        [ -2.1671],
        [ -5.0008],
        [  2.3484],
        [-12.6477],
        [ -4.8920],
        [ -0.5964],
        [ -4.2709],
        [ -9.8376],
        [ -5.2115],
        [ -3.3728],
        [  1.1348],
        [  0.2322],
        [ -0.1006]])), ('layers.0.bias', tensor([ 0.9984,  1.1264, -0.9494, -1.7615,  0.2009,  0.2936, -0.2071,  1.0784,
        -0.4594,  0.1057,  0.0214, -0.9440,  0.3648,  0.2926,  0.6367,  0.9724,
        -1.3992, -0.7306, -0.5434])), ('layers.2.weight', tensor([[-1.0277, -0.4976,  0.0443,  0.1321, -2.1613, -5.1872,  0.1880, -0.4029,
          1.0258, -7.2694, -0.3046,  0.0551, -0.3221, -3.1272, -0.4622, -0.5011,
         -0.2876,  0.1219, -0.1102]])), ('layers.2.bias', tensor([-0.7909]))])",0.3408747363378086,0.3312052237405403
46,46,"OrderedDict([('layers.0.weight', tensor([[ -7.3796],
        [ -2.0019],
        [  0.3019],
        [  0.5592],
        [ -7.2218],
        [-10.8432],
        [ -2.1671],
        [ -4.9498],
        [  2.3656],
        [-12.7017],
        [ -4.6081],
        [ -0.5964],
        [ -4.3578],
        [ -9.8882],
        [ -5.2612],
        [ -3.3574],
        [  1.2263],
        [  0.2322],
        [ -0.1006]])), ('layers.0.bias', tensor([ 1.0192,  1.1938, -0.9494, -1.7615,  0.1450,  0.2277, -0.2071,  1.1037,
        -0.4616,  0.0021,  0.4417, -0.9440,  0.3080,  0.2256,  0.6387,  1.0143,
        -1.3326, -0.7306, -0.5434])), ('layers.2.weight', tensor([[-1.1012, -0.4535,  0.0443,  0.1321, -1.8670, -4.9392,  0.1880, -0.3625,
          1.0330, -7.3070, -0.4249,  0.0551, -0.2436, -2.8141, -0.4331, -0.4686,
         -0.2951,  0.1219, -0.1102]])), ('layers.2.bias', tensor([-0.7713]))])",0.340873611645847,0.33120894811749446
47,47,"OrderedDict([('layers.0.weight', tensor([[ -7.3709],
        [ -2.0265],
        [  0.3019],
        [  0.5592],
        [ -7.2237],
        [-10.8453],
        [ -2.1671],
        [ -4.9935],
        [  2.3668],
        [-12.8275],
        [ -5.0518],
        [ -0.5964],
        [ -4.5860],
        [ -9.8901],
        [ -5.3670],
        [ -3.3646],
        [  1.2373],
        [  0.2322],
        [ -0.1006]])), ('layers.0.bias', tensor([ 1.0916,  1.1881, -0.9494, -1.7615,  0.1458,  0.2283, -0.2071,  1.0636,
        -0.4699,  0.0145,  0.1130, -0.9440,  0.1545,  0.2263,  0.5798,  1.0324,
        -1.3516, -0.7306, -0.5434])), ('layers.2.weight', tensor([[-1.2083, -0.4404,  0.0443,  0.1321, -1.8739, -4.9807,  0.1880, -0.3195,
          1.0211, -7.5120, -0.2166,  0.0551, -0.2169, -2.8246, -0.3855, -0.4445,
         -0.2281,  0.1219, -0.1102]])), ('layers.2.bias', tensor([-0.7530]))])",0.3408722655253154,0.33121952228764645
48,48,"OrderedDict([('layers.0.weight', tensor([[ -7.5268],
        [ -2.0241],
        [  0.3019],
        [  0.5592],
        [ -7.2398],
        [-10.8638],
        [ -2.1671],
        [ -4.8423],
        [  2.3756],
        [-13.1237],
        [ -5.0548],
        [ -0.5964],
        [ -4.6750],
        [ -9.9063],
        [ -5.3211],
        [ -3.4563],
        [  1.2541],
        [  0.2322],
        [ -0.1006]])), ('layers.0.bias', tensor([ 1.0351,  1.2155, -0.9494, -1.7615,  0.0880,  0.1630, -0.2071,  1.1664,
        -0.4962, -0.0174,  0.1006, -0.9440,  0.1047,  0.1722,  0.6781,  1.0139,
        -1.3984, -0.7306, -0.5434])), ('layers.2.weight', tensor([[-1.2335, -0.4639,  0.0443,  0.1321, -1.8321, -4.8664,  0.1880, -0.3241,
          1.0267, -7.3953, -0.2048,  0.0551, -0.2001, -2.7621, -0.3796, -0.5097,
         -0.2873,  0.1219, -0.1102]])), ('layers.2.bias', tensor([-0.7406]))])",0.34087669110117835,0.33120269695296006
49,49,"OrderedDict([('layers.0.weight', tensor([[ -7.4031],
        [ -2.1663],
        [  0.3019],
        [  0.5592],
        [ -7.5053],
        [-11.1450],
        [ -2.1671],
        [ -5.0961],
        [  2.3789],
        [-13.3273],
        [ -5.1415],
        [ -0.5964],
        [ -4.7287],
        [ -9.9488],
        [ -5.5547],
        [ -3.5607],
        [  1.1705],
        [  0.2322],
        [ -0.1006]])), ('layers.0.bias', tensor([ 1.1758,  1.1708, -0.9494, -1.7615, -0.0865, -0.0031, -0.2071,  0.9799,
        -0.4897,  0.3293, -0.0420, -0.9440,  0.0099,  0.3143,  0.4516,  0.9693,
        -1.5028, -0.7306, -0.5434])), ('layers.2.weight', tensor([[-1.1384, -0.5512,  0.0443,  0.1321, -1.8606, -5.1558,  0.1880, -0.3567,
          1.0082, -7.7512, -0.2829,  0.0551, -0.2243, -2.7780, -0.3420, -0.5212,
         -0.2490,  0.1219, -0.1102]])), ('layers.2.bias', tensor([-0.7678]))])",0.34087857383704157,0.3311981890189969
50,50,"OrderedDict([('layers.0.weight', tensor([[ -7.5835],
        [ -2.0418],
        [  0.3019],
        [  0.5592],
        [ -7.5108],
        [-11.1519],
        [ -2.1671],
        [ -5.0638],
        [  2.3934],
        [-13.6333],
        [ -5.1435],
        [ -0.5964],
        [ -4.7310],
        [-10.0577],
        [ -5.5354],
        [ -3.4568],
        [  1.2794],
        [  0.2322],
        [ -0.1006]])), ('layers.0.bias', tensor([ 1.0719,  1.2356, -0.9494, -1.7615, -0.0791,  0.0121, -0.2071,  1.0108,
        -0.4926,  0.2220, -0.0374, -0.9440,  0.0178,  0.2259,  0.5426,  1.0734,
        -1.4169, -0.7306, -0.5434])), ('layers.2.weight', tensor([[-1.2298, -0.4358,  0.0443,  0.1321, -1.8784, -5.2205,  0.1880, -0.3204,
          1.0182, -7.5730, -0.2902,  0.0551, -0.2304, -2.5362, -0.5414, -0.4773,
         -0.2901,  0.1219, -0.1102]])), ('layers.2.bias', tensor([-0.7490]))])",0.34087156832896964,0.3312074670294431
51,51,"OrderedDict([('layers.0.weight', tensor([[ -7.7248],
        [ -2.1379],
        [  0.3019],
        [  0.5592],
        [ -7.5268],
        [-11.1324],
        [ -2.1671],
        [ -4.7537],
        [  2.3911],
        [-14.1734],
        [ -5.1491],
        [ -0.5964],
        [ -4.7032],
        [-10.0922],
        [ -5.6850],
        [ -3.5738],
        [  1.1914],
        [  0.2322],
        [ -0.1006]])), ('layers.0.bias', tensor([ 1.0231,  1.2141, -0.9494, -1.7615, -0.0576,  0.2694, -0.2071,  1.2363,
        -0.5105,  0.1258, -0.0234, -0.9440,  0.2314,  0.2344,  0.4570,  1.0217,
        -1.5427, -0.7306, -0.5434])), ('layers.2.weight', tensor([[-1.2342, -0.5069,  0.0443,  0.1321, -1.9337, -5.3940,  0.1880, -0.3328,
          1.0017, -7.6080, -0.3128,  0.0551, -0.1361, -2.6042, -0.5511, -0.5297,
         -0.2334,  0.1219, -0.1102]])), ('layers.2.bias', tensor([-0.7502]))])",0.3408854731145278,0.33119059517558536
52,52,"OrderedDict([('layers.0.weight', tensor([[ -7.7213],
        [ -2.1845],
        [  0.3019],
        [  0.5592],
        [ -7.5405],
        [-11.0213],
        [ -2.1671],
        [ -5.0469],
        [  2.4044],
        [-14.2449],
        [ -5.1544],
        [ -0.5964],
        [ -4.8763],
        [-10.0156],
        [ -5.7990],
        [ -3.6004],
        [  1.2901],
        [  0.2322],
        [ -0.1006]])), ('layers.0.bias', tensor([ 1.0705,  1.1769, -0.9494, -1.7615, -0.0379,  0.3752, -0.2071,  1.0097,
        -0.5110,  0.1202,  0.0020, -0.9440,  0.1054,  0.3827,  0.4667,  1.0489,
        -1.4541, -0.7306, -0.5434])), ('layers.2.weight', tensor([[-1.2530, -0.4728,  0.0443,  0.1321, -1.9886, -5.3346,  0.1880, -0.3143,
          1.0096, -7.6537, -0.3362,  0.0551, -0.0745, -2.7227, -0.6321, -0.5416,
         -0.2344,  0.1219, -0.1102]])), ('layers.2.bias', tensor([-0.7517]))])",0.3408714796016327,0.3312102362241519
53,53,"OrderedDict([('layers.0.weight', tensor([[ -7.8635],
        [ -2.1808],
        [  0.3019],
        [  0.5592],
        [ -7.6218],
        [-11.2090],
        [ -2.1671],
        [ -4.8173],
        [  2.4081],
        [-14.3913],
        [ -4.8015],
        [ -0.5964],
        [ -4.8694],
        [-10.2217],
        [ -6.0896],
        [ -3.6516],
        [  1.2552],
        [  0.2322],
        [ -0.1006]])), ('layers.0.bias', tensor([ 1.0187,  1.2122, -0.9494, -1.7615, -0.1553,  0.2872, -0.2071,  1.1824,
        -0.5258,  0.0952,  0.5755, -0.9440,  0.1431,  0.2866,  0.2035,  1.0401,
        -1.5256, -0.7306, -0.5434])), ('layers.2.weight', tensor([[-1.3526, -0.4993,  0.0443,  0.1321, -2.0151, -4.9696,  0.1880, -0.3022,
          1.0029, -7.7310, -0.7493,  0.0551, -0.1320, -2.4777, -0.5611, -0.5357,
         -0.2214,  0.1219, -0.1102]])), ('layers.2.bias', tensor([-0.7459]))])",0.340880156365388,0.3311947596605273
54,54,"OrderedDict([('layers.0.weight', tensor([[ -7.8529],
        [ -2.2692],
        [  0.3019],
        [  0.5592],
        [ -7.6548],
        [-11.2704],
        [ -2.1671],
        [ -4.9567],
        [  2.4245],
        [-14.5738],
        [ -5.4069],
        [ -0.5964],
        [ -5.0034],
        [-10.2841],
        [ -6.1556],
        [ -3.7139],
        [  1.3418],
        [  0.2322],
        [ -0.1006]])), ('layers.0.bias', tensor([ 1.0774,  1.1452, -0.9494, -1.7615, -0.1216,  0.2966, -0.2071,  1.1146,
        -0.5135,  0.1107,  0.0467, -0.9440, -0.0162,  0.3480,  0.1595,  1.0175,
        -1.4518, -0.7306, -0.5434])), ('layers.2.weight', tensor([[-1.3263, -0.4564,  0.0443,  0.1321, -2.0330, -4.7321,  0.1880, -0.3496,
          1.0071, -7.6621, -0.5924,  0.0551,  0.0449, -2.6228, -0.5244, -0.5191,
         -0.1734,  0.1219, -0.1102]])), ('layers.2.bias', tensor([-0.7309]))])",0.34087312929874247,0.3312566111135214
55,55,"OrderedDict([('layers.0.weight', tensor([[ -7.9368],
        [ -2.2876],
        [  0.3019],
        [  0.5592],
        [ -7.6977],
        [-11.3560],
        [ -2.1671],
        [ -5.0217],
        [  2.4245],
        [-14.8395],
        [ -5.4089],
        [ -0.5964],
        [ -5.0032],
        [-10.4711],
        [ -6.1925],
        [ -3.7290],
        [  1.3418],
        [  0.2322],
        [ -0.1006]])), ('layers.0.bias', tensor([ 1.0559,  1.1582, -0.9494, -1.7615, -0.0422,  0.2938, -0.2071,  1.0684,
        -0.5251,  0.0445,  0.0397, -0.9440, -0.0167,  0.2525,  0.1532,  1.0231,
        -1.4822, -0.7306, -0.5434])), ('layers.2.weight', tensor([[-1.3936, -0.4579,  0.0443,  0.1321, -2.1177, -4.7910,  0.1880, -0.3498,
          1.0024, -7.5862, -0.5937,  0.0551,  0.0421, -2.7243, -0.5298, -0.5202,
         -0.1716,  0.1219, -0.1102]])), ('layers.2.bias', tensor([-0.7220]))])",0.3408738183111152,0.33125344370925297
56,56,"OrderedDict([('layers.0.weight', tensor([[ -8.0195],
        [ -2.2587],
        [  0.3019],
        [  0.5592],
        [ -8.0334],
        [-11.1192],
        [ -2.1671],
        [ -5.0151],
        [  2.4323],
        [-15.0576],
        [ -5.4116],
        [ -0.5964],
        [ -5.0028],
        [-10.4932],
        [ -6.2053],
        [ -3.7079],
        [  1.3334],
        [  0.2322],
        [ -0.1006]])), ('layers.0.bias', tensor([ 1.0340,  1.2071, -0.9494, -1.7615, -0.0022,  0.5097, -0.2071,  1.0999,
        -0.5370,  0.0030,  0.0303, -0.9440, -0.0176,  0.1722,  0.0896,  1.0807,
        -1.5321, -0.7306, -0.5434])), ('layers.2.weight', tensor([[-1.4567, -0.4852,  0.0443,  0.1321, -2.0163, -4.4924,  0.1880, -0.2398,
          1.0012, -7.5920, -0.5962,  0.0551,  0.0371, -2.5285, -0.4530, -0.5003,
         -0.2466,  0.1219, -0.1102]])), ('layers.2.bias', tensor([-0.7491]))])",0.34088158641676275,0.3312042460349227
57,57,"OrderedDict([('layers.0.weight', tensor([[ -7.9664],
        [ -2.2937],
        [  0.3019],
        [  0.5592],
        [ -8.0627],
        [-11.3821],
        [ -2.1671],
        [ -5.1482],
        [  2.4486],
        [-14.8623],
        [ -5.4160],
        [ -0.5964],
        [ -5.0019],
        [-10.5195],
        [ -6.2195],
        [ -3.8086],
        [  1.3786],
        [  0.2322],
        [ -0.1006]])), ('layers.0.bias', tensor([ 1.0791,  1.1776, -0.9494, -1.7615,  0.2120,  0.2430, -0.2071,  0.9891,
        -0.5145,  0.6945,  0.0868, -0.9440, -0.0205,  0.1403,  0.0660,  1.0166,
        -1.4990, -0.7306, -0.5434])), ('layers.2.weight', tensor([[-1.1813, -0.4497,  0.0443,  0.1321, -2.0155, -4.0007,  0.1880, -0.2792,
          1.0026, -8.0163, -0.6108,  0.0551,  0.0175, -2.5289, -0.4498, -0.4796,
         -0.1842,  0.1219, -0.1102]])), ('layers.2.bias', tensor([-0.7349]))])",0.3408715522456905,0.33128364043544856
58,58,"OrderedDict([('layers.0.weight', tensor([[ -7.9613],
        [ -2.2510],
        [  0.3019],
        [  0.5592],
        [ -8.0083],
        [-11.3909],
        [ -2.1671],
        [ -5.1568],
        [  2.4361],
        [-14.9317],
        [ -5.4267],
        [ -0.5964],
        [ -5.0018],
        [-10.5355],
        [ -6.2227],
        [ -3.7233],
        [  1.2939],
        [  0.2322],
        [ -0.1006]])), ('layers.0.bias', tensor([ 1.1307,  1.2181, -0.9494, -1.7615,  0.3136,  0.2180, -0.2071,  1.0216,
        -0.5241,  0.6260,  0.0153, -0.9440, -0.0208,  0.0765,  0.0449,  1.1059,
        -1.6073, -0.7306, -0.5434])), ('layers.2.weight', tensor([[-1.2881, -0.4270,  0.0443,  0.1321, -2.0159, -3.9743,  0.1880, -0.3455,
          0.9818, -7.5443, -0.6034,  0.0551,  0.0126, -2.5089, -0.4479, -0.4553,
         -0.2454,  0.1219, -0.1102]])), ('layers.2.bias', tensor([-0.7356]))])",0.340875202485322,0.3312238424558739
59,59,"OrderedDict([('layers.0.weight', tensor([[ -8.0230],
        [ -2.2600],
        [  0.3019],
        [  0.5592],
        [ -8.1373],
        [-11.5014],
        [ -2.1671],
        [ -5.0892],
        [  2.4442],
        [-15.2336],
        [ -5.4555],
        [ -0.5964],
        [ -5.0018],
        [-10.5862],
        [ -6.2432],
        [ -3.8018],
        [  1.2733],
        [  0.2322],
        [ -0.1006]])), ('layers.0.bias', tensor([ 1.1415,  1.2514, -0.9494, -1.7615,  0.0789, -0.0411, -0.2071,  1.0776,
        -0.5331,  0.2740, -0.1493, -0.9440, -0.0207, -0.1228, -0.1114,  1.0727,
        -1.6461, -0.7306, -0.5434])), ('layers.2.weight', tensor([[-1.3459, -0.4921,  0.0443,  0.1321, -1.8334, -3.8754,  0.1880, -0.3154,
          0.9806, -7.1592, -0.5902,  0.0551, -0.0171, -2.5571, -0.4481, -0.4907,
         -0.2362,  0.1219, -0.1102]])), ('layers.2.bias', tensor([-0.7382]))])",0.340879971058208,0.3311989802220086
60,60,"OrderedDict([('layers.0.weight', tensor([[ -8.1062],
        [ -2.2743],
        [  0.3019],
        [  0.5592],
        [ -8.1612],
        [-11.6025],
        [ -2.1671],
        [ -5.1261],
        [  2.4504],
        [-15.2490],
        [ -5.4615],
        [ -0.5964],
        [ -5.3212],
        [-10.8166],
        [ -6.0353],
        [ -3.7727],
        [  1.3113],
        [  0.2322],
        [ -0.1006]])), ('layers.0.bias', tensor([ 1.0976,  1.2339, -0.9494, -1.7615,  0.0589, -0.0418, -0.2071,  1.0577,
        -0.5312,  0.3414, -0.1458, -0.9440,  0.1355,  0.0064,  0.4383,  1.1150,
        -1.6384, -0.7306, -0.5434])), ('layers.2.weight', tensor([[-1.3104, -0.4354,  0.0443,  0.1321, -1.8775, -3.9980,  0.1880, -0.3075,
          0.9785, -7.2605, -0.5926,  0.0551, -0.3090, -2.9266, -0.7569, -0.4515,
         -0.2528,  0.1219, -0.1102]])), ('layers.2.bias', tensor([-0.7355]))])",0.3408720142234087,0.33121844468439765
61,61,"OrderedDict([('layers.0.weight', tensor([[ -8.1132],
        [ -2.2112],
        [  0.3019],
        [  0.5592],
        [ -8.1752],
        [-11.6423],
        [ -2.1671],
        [ -5.2104],
        [  2.4686],
        [-15.2874],
        [ -5.4651],
        [ -0.5964],
        [ -5.2829],
        [-10.8669],
        [ -6.4759],
        [ -3.7220],
        [  1.4162],
        [  0.2322],
        [ -0.1006]])), ('layers.0.bias', tensor([ 1.0922,  1.2660, -0.9494, -1.7615,  0.0329,  0.0342, -0.2071,  0.9844,
        -0.5172,  0.2852, -0.1334, -0.9440,  0.2059,  0.2768,  0.1734,  1.1619,
        -1.5180, -0.7306, -0.5434])), ('layers.2.weight', tensor([[-1.2000, -0.3658,  0.0443,  0.1321, -1.8770, -4.0885,  0.1880, -0.2914,
          0.9861, -7.1614, -0.5954,  0.0551, -0.3053, -2.8819, -0.5758, -0.4010,
         -0.2086,  0.1219, -0.1102]])), ('layers.2.bias', tensor([-0.7126]))])",0.3408717100316453,0.3312910461021307
62,62,"OrderedDict([('layers.0.weight', tensor([[ -8.1890],
        [ -2.2635],
        [  0.3019],
        [  0.5592],
        [ -8.2546],
        [-12.0027],
        [ -2.1671],
        [ -5.1690],
        [  2.4622],
        [-15.3916],
        [ -5.4836],
        [ -0.5964],
        [ -5.2987],
        [-10.8553],
        [ -6.4689],
        [ -3.8471],
        [  1.3247],
        [  0.2322],
        [ -0.1006]])), ('layers.0.bias', tensor([ 1.0825,  1.2634, -0.9494, -1.7615,  0.2154,  0.0503, -0.2071,  1.0341,
        -0.5432,  0.2426, -0.0129, -0.9440,  0.2926,  0.3053,  0.1904,  1.1147,
        -1.6374, -0.7306, -0.5434])), ('layers.2.weight', tensor([[-1.2231, -0.4587,  0.0443,  0.1321, -1.7857, -4.2183,  0.1880, -0.3457,
          0.9776, -7.0310, -0.6238,  0.0551, -0.2586, -2.9037, -0.5816, -0.4889,
         -0.2329,  0.1219, -0.1102]])), ('layers.2.bias', tensor([-0.7340]))])",0.3408786604099253,0.3312047554843726
63,63,"OrderedDict([('layers.0.weight', tensor([[ -8.0471],
        [ -2.3126],
        [  0.3019],
        [  0.5592],
        [ -8.2582],
        [-12.0300],
        [ -2.1671],
        [ -5.2702],
        [  2.4694],
        [-15.6226],
        [ -5.8241],
        [ -0.5964],
        [ -5.4255],
        [-10.8103],
        [ -6.5835],
        [ -3.7702],
        [  1.3211],
        [  0.2322],
        [ -0.1006]])), ('layers.0.bias', tensor([ 1.2330,  1.2212, -0.9494, -1.7615,  0.2405,  0.0681, -0.2071,  0.9616,
        -0.5261,  0.0896,  0.2704, -0.9440,  0.2229,  0.4233,  0.1173,  1.1889,
        -1.6720, -0.7306, -0.5434])), ('layers.2.weight', tensor([[-1.1391, -0.4162,  0.0443,  0.1321, -1.5979, -4.2944,  0.1880, -0.3517,
          0.9668, -6.8455, -0.7362,  0.0551, -0.1950, -2.4995, -0.3130, -0.3845,
         -0.2422,  0.1219, -0.1102]])), ('layers.2.bias', tensor([-0.7356]))])",0.3408728221509443,0.33123118675960095
64,64,"OrderedDict([('layers.0.weight', tensor([[ -7.8482],
        [ -2.1625],
        [  0.3019],
        [  0.5592],
        [ -8.3028],
        [-12.0720],
        [ -2.1671],
        [ -5.0792],
        [  2.4814],
        [-15.7586],
        [ -5.9472],
        [ -0.5964],
        [ -5.5894],
        [-10.8475],
        [ -6.5874],
        [ -3.7918],
        [  1.3443],
        [  0.2322],
        [ -0.1006]])), ('layers.0.bias', tensor([ 1.3603,  1.3232, -0.9494, -1.7615,  0.2698,  0.1020, -0.2071,  1.0944,
        -0.4892,  0.1491,  0.2845, -0.9440,  0.1107,  0.5091,  0.1070,  1.1895,
        -1.6173, -0.7306, -0.5434])), ('layers.2.weight', tensor([[-0.8156, -0.4289,  0.0443,  0.1321, -1.2318, -4.4794,  0.1880, -0.2501,
          0.9615, -6.9656, -0.6014,  0.0551, -0.2097, -2.5974, -0.3099, -0.4514,
         -0.2508,  0.1219, -0.1102]])), ('layers.2.bias', tensor([-0.7581]))])",0.34087600334329715,0.3311918331198837
65,65,"OrderedDict([('layers.0.weight', tensor([[ -7.8025],
        [ -2.1506],
        [  0.3019],
        [  0.5592],
        [ -8.5244],
        [-12.1777],
        [ -2.1671],
        [ -5.0044],
        [  2.4874],
        [-16.2501],
        [ -5.9039],
        [ -0.5964],
        [ -5.5909],
        [-10.7653],
        [ -6.5918],
        [ -3.8761],
        [  1.3489],
        [  0.2322],
        [ -0.1006]])), ('layers.0.bias', tensor([ 1.4151,  1.3406, -0.9494, -1.7615,  0.0520,  0.1066, -0.2071,  1.1357,
        -0.4836, -0.0454,  0.3527, -0.9440,  0.1104,  0.6050,  0.1059,  1.1755,
        -1.6440, -0.7306, -0.5434])), ('layers.2.weight', tensor([[-0.7930, -0.4421,  0.0443,  0.1321, -1.1456, -4.6788,  0.1880, -0.3071,
          0.9602, -7.1147, -0.4263,  0.0551, -0.2128, -2.4873, -0.3112, -0.5273,
         -0.2387,  0.1219, -0.1102]])), ('layers.2.bias', tensor([-0.7662]))])",0.3408742689472172,0.331191572082382
66,66,"OrderedDict([('layers.0.weight', tensor([[ -7.8622],
        [ -2.1461],
        [  0.3019],
        [  0.5592],
        [ -8.5699],
        [-12.7760],
        [ -2.1671],
        [ -4.9103],
        [  2.4935],
        [-16.5934],
        [ -6.0373],
        [ -0.5964],
        [ -5.6073],
        [-10.7720],
        [ -6.6374],
        [ -3.9061],
        [  1.3608],
        [  0.2322],
        [ -0.1006]])), ('layers.0.bias', tensor([ 1.3916,  1.3420, -0.9494, -1.7615,  0.0731,  0.0652, -0.2071,  1.1794,
        -0.4895,  0.0116,  0.2683, -0.9440,  0.0819,  0.6392,  0.0424,  1.1831,
        -1.6461, -0.7306, -0.5434])), ('layers.2.weight', tensor([[-0.8113, -0.4378,  0.0443,  0.1321, -1.2132, -5.0211,  0.1880, -0.3312,
          0.9614, -7.6244, -0.3444,  0.0551, -0.2263, -2.4551, -0.3402, -0.5346,
         -0.2342,  0.1219, -0.1102]])), ('layers.2.bias', tensor([-0.7653]))])",0.3408741363997004,0.33119295266610493
67,67,"OrderedDict([('layers.0.weight', tensor([[ -8.0312],
        [ -2.3102],
        [  0.3019],
        [  0.5592],
        [ -8.8357],
        [-13.0630],
        [ -2.1671],
        [ -5.1435],
        [  2.4878],
        [-16.8612],
        [ -5.9221],
        [ -0.5964],
        [ -5.7008],
        [-11.0222],
        [ -6.6490],
        [ -4.0431],
        [  1.3067],
        [  0.2322],
        [ -0.1006]])), ('layers.0.bias', tensor([ 1.2924,  1.2380, -0.9494, -1.7615,  0.0572,  0.1116, -0.2071,  1.0081,
        -0.5032, -0.0921,  0.4802, -0.9440,  0.0495,  0.4716,  0.0307,  1.1207,
        -1.7108, -0.7306, -0.5434])), ('layers.2.weight', tensor([[-0.8782, -0.4665,  0.0443,  0.1321, -1.0804, -4.9263,  0.1880, -0.3147,
          0.9523, -7.6973, -0.4357,  0.0551, -0.1944, -2.4318, -0.3443, -0.6351,
         -0.2131,  0.1219, -0.1102]])), ('layers.2.bias', tensor([-0.7638]))])",0.340872780666993,0.3312024108227954
68,68,"OrderedDict([('layers.0.weight', tensor([[ -8.0179],
        [ -2.3922],
        [  0.3019],
        [  0.5592],
        [ -9.0771],
        [-13.3051],
        [ -2.1671],
        [ -5.1758],
        [  2.4944],
        [-17.2605],
        [ -5.5766],
        [ -0.5964],
        [ -5.6880],
        [-11.0941],
        [ -6.6461],
        [ -4.1342],
        [  1.3264],
        [  0.2322],
        [ -0.1006]])), ('layers.0.bias', tensor([ 1.3177,  1.1900, -0.9494, -1.7615,  0.0447,  0.1522, -0.2071,  0.9645,
        -0.5007,  0.0159,  0.7033, -0.9440,  0.2253,  0.4443,  0.3170,  1.0766,
        -1.7107, -0.7306, -0.5434])), ('layers.2.weight', tensor([[-0.7702, -0.4498,  0.0443,  0.1321, -1.2284, -5.0186,  0.1880, -0.2619,
          0.9518, -7.8132, -0.3370,  0.0551, -0.2666, -2.2850, -0.4387, -0.6133,
         -0.1727,  0.1219, -0.1102]])), ('layers.2.bias', tensor([-0.7549]))])",0.34087412152129865,0.33123932156884506
69,69,"OrderedDict([('layers.0.weight', tensor([[ -8.0898],
        [ -2.1906],
        [  0.3019],
        [  0.5592],
        [ -9.2211],
        [-13.5996],
        [ -2.1671],
        [ -5.3903],
        [  2.4992],
        [-17.5295],
        [ -5.6896],
        [ -0.5964],
        [ -5.7794],
        [-11.1935],
        [ -6.3093],
        [ -3.9143],
        [  1.3983],
        [  0.2322],
        [ -0.1006]])), ('layers.0.bias', tensor([ 1.2716,  1.3348, -0.9494, -1.7615,  0.0251,  0.0866, -0.2071,  0.7700,
        -0.5285,  0.0470,  0.6749, -0.9440,  0.1157,  0.3372,  0.6502,  1.2319,
        -1.6632, -0.7306, -0.5434])), ('layers.2.weight', tensor([[-0.7926, -0.3996,  0.0443,  0.1321, -1.0107, -4.8679,  0.1880, -0.2530,
          0.9639, -7.5536, -0.4275,  0.0551, -0.2236, -2.1743, -0.4533, -0.4375,
         -0.2618,  0.1219, -0.1102]])), ('layers.2.bias', tensor([-0.7368]))])",0.3408790819631336,0.3312088128140599
