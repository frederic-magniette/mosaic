,Epochs,Params,Train loss,Test loss
0,0,"OrderedDict([('layers.0.weight', tensor([[ 0.8070],
        [-0.2196],
        [-0.3750],
        [ 0.9408],
        [-0.2397],
        [ 0.5670],
        [-0.4392],
        [ 0.3380],
        [-0.3082],
        [ 0.7287],
        [ 0.1338],
        [-0.3848],
        [-0.8184],
        [-0.6827],
        [-0.8223],
        [-0.5206],
        [ 0.1597],
        [ 0.1141],
        [-0.3996]])), ('layers.0.bias', tensor([ 0.6903, -0.9493,  0.8107,  0.3271,  0.5911,  0.0297,  0.2279,  0.3190,
        -0.8857,  0.2851, -0.3698, -0.7133, -0.1568, -0.8344, -0.8252,  0.5387,
        -0.8327, -0.0954,  0.5723])), ('layers.2.weight', tensor([[ 0.2934,  0.0472,  0.0023,  0.2673,  0.1660,  0.1920, -0.0177,  0.2568,
          0.0345, -0.0886, -0.1002,  0.0561, -0.2396,  0.0222,  0.0370, -0.0976,
          0.2129, -0.0867, -0.0993]])), ('layers.2.bias', tensor([-0.2292]))])",0.7197217337633144,0.959995354572311
1,1,"OrderedDict([('layers.0.weight', tensor([[ 0.8845],
        [-0.2196],
        [-0.3605],
        [ 1.0112],
        [-0.1806],
        [ 0.6384],
        [-0.4524],
        [ 0.4159],
        [-0.2780],
        [ 0.6890],
        [ 0.1213],
        [-0.3462],
        [-0.8920],
        [-0.6528],
        [-0.7860],
        [-0.6084],
        [ 0.1597],
        [ 0.0766],
        [-0.4894]])), ('layers.0.bias', tensor([ 0.6510, -0.9493,  0.8008,  0.3092,  0.5270,  0.0473,  0.2549,  0.2795,
        -0.9161,  0.2911, -0.3828, -0.7523, -0.0686, -0.8660, -0.8636,  0.6507,
        -0.8327, -0.1382,  0.6804])), ('layers.2.weight', tensor([[ 0.3129,  0.0472, -0.0701,  0.3133,  0.0961,  0.2512, -0.0840,  0.2711,
          0.0144, -0.0483, -0.0912,  0.0117, -0.3069, -0.0297, -0.0175, -0.1759,
          0.2129, -0.0583, -0.1802]])), ('layers.2.bias', tensor([-0.3048]))])",0.4786276576962943,0.7196202813570077
2,2,"OrderedDict([('layers.0.weight', tensor([[ 0.9480],
        [-0.2196],
        [-0.3939],
        [ 1.0705],
        [-0.1512],
        [ 0.7009],
        [-0.5076],
        [ 0.4793],
        [-0.2700],
        [ 0.6701],
        [ 0.1183],
        [-0.3333],
        [-0.9485],
        [-0.6570],
        [-0.7823],
        [-0.6869],
        [ 0.1597],
        [ 0.0629],
        [-0.5705]])), ('layers.0.bias', tensor([ 0.6075, -0.9493,  0.8527,  0.2808,  0.4911,  0.0488,  0.3459,  0.2363,
        -0.9241,  0.3015, -0.3860, -0.7654,  0.0080, -0.8598, -0.8667,  0.7577,
        -0.8327, -0.1533,  0.7837])), ('layers.2.weight', tensor([[ 0.3205,  0.0472, -0.1217,  0.3450,  0.0505,  0.2973, -0.1310,  0.2805,
          0.0093, -0.0252, -0.0890, -0.0095, -0.3555, -0.0593, -0.0496, -0.2368,
          0.2129, -0.0502, -0.2444]])), ('layers.2.bias', tensor([-0.3630]))])",0.3710133338793336,0.6030555319778311
3,3,"OrderedDict([('layers.0.weight', tensor([[ 0.9996],
        [-0.2196],
        [-0.4373],
        [ 1.1214],
        [-0.1397],
        [ 0.7567],
        [-0.5616],
        [ 0.5252],
        [-0.2680],
        [ 0.6617],
        [ 0.1175],
        [-0.3310],
        [-0.9861],
        [-0.6703],
        [-0.7898],
        [-0.7463],
        [ 0.1597],
        [ 0.0596],
        [-0.6331]])), ('layers.0.bias', tensor([ 0.5684, -0.9493,  0.9204,  0.2518,  0.4750,  0.0448,  0.4409,  0.2037,
        -0.9261,  0.3081, -0.3867, -0.7677,  0.0672, -0.8428, -0.8568,  0.8488,
        -0.8327, -0.1570,  0.8709])), ('layers.2.weight', tensor([[ 0.3262,  0.0472, -0.1568,  0.3700,  0.0231,  0.3354, -0.1635,  0.2925,
          0.0081, -0.0109, -0.0885, -0.0183, -0.3867, -0.0741, -0.0659, -0.2803,
          0.2129, -0.0483, -0.2912]])), ('layers.2.bias', tensor([-0.4038]))])",0.3258916842530501,0.5468534289451782
4,4,"OrderedDict([('layers.0.weight', tensor([[ 1.0414],
        [-0.2196],
        [-0.4759],
        [ 1.1647],
        [-0.1358],
        [ 0.8058],
        [-0.6045],
        [ 0.5560],
        [-0.2676],
        [ 0.6585],
        [ 0.1174],
        [-0.3314],
        [-1.0106],
        [-0.6822],
        [-0.7979],
        [-0.7899],
        [ 0.1597],
        [ 0.0588],
        [-0.6795]])), ('layers.0.bias', tensor([ 0.5354, -0.9493,  0.9838,  0.2256,  0.4688,  0.0393,  0.5244,  0.1835,
        -0.9265,  0.3108, -0.3869, -0.7673,  0.1150, -0.8270, -0.8459,  0.9225,
        -0.8327, -0.1578,  0.9421])), ('layers.2.weight', tensor([[ 0.3324,  0.0472, -0.1820,  0.3910,  0.0058,  0.3676, -0.1876,  0.3056,
          0.0078, -0.0011, -0.0884, -0.0220, -0.4069, -0.0819, -0.0743, -0.3118,
          0.2129, -0.0478, -0.3256]])), ('layers.2.bias', tensor([-0.4327]))])",0.30469182479040074,0.5171332625883224
5,5,"OrderedDict([('layers.0.weight', tensor([[ 1.0713],
        [-0.2196],
        [-0.5079],
        [ 1.1985],
        [-0.1346],
        [ 0.8480],
        [-0.6381],
        [ 0.5798],
        [-0.2675],
        [ 0.6577],
        [ 0.1173],
        [-0.3321],
        [-1.0273],
        [-0.6912],
        [-0.8044],
        [-0.8231],
        [ 0.1597],
        [ 0.0586],
        [-0.7149]])), ('layers.0.bias', tensor([ 0.5124, -0.9493,  1.0391,  0.2107,  0.4669,  0.0339,  0.5950,  0.1679,
        -0.9266,  0.3111, -0.3870, -0.7665,  0.1569, -0.8146, -0.8368,  0.9822,
        -0.8327, -0.1580,  1.0005])), ('layers.2.weight', tensor([[ 0.3387,  0.0472, -0.2015,  0.4087, -0.0062,  0.3945, -0.2067,  0.3180,
          0.0077,  0.0059, -0.0883, -0.0238, -0.4211, -0.0863, -0.0792, -0.3358,
          0.2129, -0.0477, -0.3522]])), ('layers.2.bias', tensor([-0.4543]))])",0.29324710771325047,0.4996639958699234
6,6,"OrderedDict([('layers.0.weight', tensor([[ 1.0906],
        [-0.2196],
        [-0.5343],
        [ 1.2239],
        [-0.1346],
        [ 0.8836],
        [-0.6660],
        [ 0.5991],
        [-0.2675],
        [ 0.6581],
        [ 0.1173],
        [-0.3327],
        [-1.0396],
        [-0.6978],
        [-0.8094],
        [-0.8495],
        [ 0.1597],
        [ 0.0586],
        [-0.7432]])), ('layers.0.bias', tensor([ 0.4984, -0.9493,  1.0870,  0.2055,  0.4669,  0.0293,  0.6539,  0.1546,
        -0.9267,  0.3101, -0.3870, -0.7659,  0.1922, -0.8050, -0.8297,  1.0318,
        -0.8327, -0.1581,  1.0492])), ('layers.2.weight', tensor([[ 0.3442,  0.0472, -0.2173,  0.4234, -0.0153,  0.4168, -0.2226,  0.3289,
          0.0077,  0.0110, -0.0883, -0.0248, -0.4320, -0.0892, -0.0822, -0.3552,
          0.2129, -0.0477, -0.3736]])), ('layers.2.bias', tensor([-0.4713]))])",0.28645881050227523,0.48862215767464173
7,7,"OrderedDict([('layers.0.weight', tensor([[ 1.1055],
        [-0.2196],
        [-0.5566],
        [ 1.2445],
        [-0.1349],
        [ 0.9138],
        [-0.6897],
        [ 0.6154],
        [-0.2675],
        [ 0.6591],
        [ 0.1173],
        [-0.3332],
        [-1.0491],
        [-0.7028],
        [-0.8131],
        [-0.8715],
        [ 0.1597],
        [ 0.0585],
        [-0.7668]])), ('layers.0.bias', tensor([ 0.4877, -0.9493,  1.1288,  0.2031,  0.4678,  0.0258,  0.7041,  0.1431,
        -0.9267,  0.3083, -0.3870, -0.7654,  0.2224, -0.7976, -0.8240,  1.0737,
        -0.8327, -0.1581,  1.0907])), ('layers.2.weight', tensor([[ 0.3489,  0.0472, -0.2306,  0.4356, -0.0226,  0.4356, -0.2363,  0.3385,
          0.0077,  0.0149, -0.0883, -0.0255, -0.4408, -0.0912, -0.0844, -0.3713,
          0.2129, -0.0477, -0.3916]])), ('layers.2.bias', tensor([-0.4852]))])",0.2820353168101671,0.4811258047678469
8,8,"OrderedDict([('layers.0.weight', tensor([[ 1.1178],
        [-0.2196],
        [-0.5757],
        [ 1.2619],
        [-0.1354],
        [ 0.9397],
        [-0.7107],
        [ 0.6293],
        [-0.2675],
        [ 0.6602],
        [ 0.1173],
        [-0.3335],
        [-1.0568],
        [-0.7067],
        [-0.8161],
        [-0.8905],
        [ 0.1597],
        [ 0.0585],
        [-0.7870]])), ('layers.0.bias', tensor([ 0.4788, -0.9493,  1.1657,  0.2019,  0.4691,  0.0239,  0.7473,  0.1332,
        -0.9267,  0.3064, -0.3870, -0.7651,  0.2485, -0.7916, -0.8194,  1.1094,
        -0.8327, -0.1581,  1.1264])), ('layers.2.weight', tensor([[ 0.3531,  0.0472, -0.2421,  0.4459, -0.0287,  0.4516, -0.2483,  0.3472,
          0.0077,  0.0181, -0.0883, -0.0259, -0.4482, -0.0927, -0.0859, -0.3851,
          0.2129, -0.0477, -0.4070]])), ('layers.2.bias', tensor([-0.4968]))])",0.27899152881630773,0.4758117849138216
9,9,"OrderedDict([('layers.0.weight', tensor([[ 1.1284],
        [-0.2196],
        [-0.5924],
        [ 1.2768],
        [-0.1359],
        [ 0.9623],
        [-0.7298],
        [ 0.6415],
        [-0.2675],
        [ 0.6614],
        [ 0.1173],
        [-0.3337],
        [-1.0633],
        [-0.7098],
        [-0.8185],
        [-0.9075],
        [ 0.1597],
        [ 0.0585],
        [-0.8048]])), ('layers.0.bias', tensor([ 0.4713, -0.9493,  1.1982,  0.2017,  0.4705,  0.0236,  0.7846,  0.1247,
        -0.9267,  0.3044, -0.3870, -0.7649,  0.2714, -0.7866, -0.8157,  1.1402,
        -0.8327, -0.1581,  1.1574])), ('layers.2.weight', tensor([[ 0.3568,  0.0472, -0.2521,  0.4548, -0.0338,  0.4655, -0.2590,  0.3550,
          0.0077,  0.0208, -0.0883, -0.0263, -0.4547, -0.0939, -0.0872, -0.3971,
          0.2129, -0.0477, -0.4205]])), ('layers.2.bias', tensor([-0.5067]))])",0.27681353974827894,0.47192036336030774
10,10,"OrderedDict([('layers.0.weight', tensor([[ 1.1375],
        [-0.2196],
        [-0.6072],
        [ 1.2896],
        [-0.1365],
        [ 0.9819],
        [-0.7475],
        [ 0.6521],
        [-0.2675],
        [ 0.6626],
        [ 0.1173],
        [-0.3339],
        [-1.0688],
        [-0.7124],
        [-0.8205],
        [-0.9229],
        [ 0.1597],
        [ 0.0585],
        [-0.8208]])), ('layers.0.bias', tensor([ 0.4649, -0.9493,  1.2273,  0.2023,  0.4720,  0.0247,  0.8169,  0.1173,
        -0.9267,  0.3024, -0.3870, -0.7647,  0.2917, -0.7825, -0.8125,  1.1668,
        -0.8327, -0.1581,  1.1845])), ('layers.2.weight', tensor([[ 0.3602,  0.0472, -0.2609,  0.4626, -0.0383,  0.4775, -0.2686,  0.3622,
          0.0077,  0.0233, -0.0883, -0.0265, -0.4604, -0.0948, -0.0882, -0.4077,
          0.2129, -0.0477, -0.4323]])), ('layers.2.bias', tensor([-0.5153]))])",0.27520722268037995,0.468995429133876
11,11,"OrderedDict([('layers.0.weight', tensor([[ 1.1455],
        [-0.2196],
        [-0.6205],
        [ 1.3007],
        [-0.1371],
        [ 0.9989],
        [-0.7643],
        [ 0.6605],
        [-0.2675],
        [ 0.6637],
        [ 0.1173],
        [-0.3341],
        [-1.0737],
        [-0.7146],
        [-0.8221],
        [-0.9371],
        [ 0.1597],
        [ 0.0585],
        [-0.8354]])), ('layers.0.bias', tensor([ 0.4594, -0.9493,  1.2534,  0.2035,  0.4736,  0.0271,  0.8450,  0.1140,
        -0.9267,  0.3005, -0.3870, -0.7645,  0.3100, -0.7789, -0.8098,  1.1901,
        -0.8327, -0.1581,  1.2086])), ('layers.2.weight', tensor([[ 0.3633,  0.0472, -0.2689,  0.4694, -0.0422,  0.4880, -0.2773,  0.3686,
          0.0077,  0.0255, -0.0883, -0.0267, -0.4655, -0.0956, -0.0890, -0.4171,
          0.2129, -0.0477, -0.4428]])), ('layers.2.bias', tensor([-0.5228]))])",0.2739985386112307,0.4667515988525338
12,12,"OrderedDict([('layers.0.weight', tensor([[ 1.1524],
        [-0.2196],
        [-0.6324],
        [ 1.3101],
        [-0.1376],
        [ 1.0134],
        [-0.7803],
        [ 0.6668],
        [-0.2675],
        [ 0.6648],
        [ 0.1173],
        [-0.3342],
        [-1.0781],
        [-0.7165],
        [-0.8236],
        [-0.9499],
        [ 0.1597],
        [ 0.0585],
        [-0.8486]])), ('layers.0.bias', tensor([ 0.4546, -0.9493,  1.2772,  0.2054,  0.4751,  0.0305,  0.8696,  0.1143,
        -0.9267,  0.2987, -0.3870, -0.7644,  0.3266, -0.7759, -0.8074,  1.2110,
        -0.8327, -0.1581,  1.2301])), ('layers.2.weight', tensor([[ 0.3660,  0.0472, -0.2760,  0.4753, -0.0456,  0.4970, -0.2852,  0.3743,
          0.0077,  0.0274, -0.0883, -0.0268, -0.4702, -0.0962, -0.0897, -0.4256,
          0.2129, -0.0477, -0.4523]])), ('layers.2.bias', tensor([-0.5294]))])",0.273066360028209,0.4649878512240927
13,13,"OrderedDict([('layers.0.weight', tensor([[ 1.1584],
        [-0.2196],
        [-0.6432],
        [ 1.3181],
        [-0.1382],
        [ 1.0258],
        [-0.7957],
        [ 0.6720],
        [-0.2675],
        [ 0.6658],
        [ 0.1173],
        [-0.3343],
        [-1.0820],
        [-0.7181],
        [-0.8248],
        [-0.9617],
        [ 0.1597],
        [ 0.0585],
        [-0.8609]])), ('layers.0.bias', tensor([ 0.4504, -0.9493,  1.2989,  0.2076,  0.4765,  0.0347,  0.8911,  0.1156,
        -0.9267,  0.2970, -0.3870, -0.7643,  0.3418, -0.7732, -0.8053,  1.2298,
        -0.8327, -0.1581,  1.2494])), ('layers.2.weight', tensor([[ 0.3684,  0.0472, -0.2825,  0.4803, -0.0487,  0.5046, -0.2925,  0.3792,
          0.0077,  0.0291, -0.0883, -0.0270, -0.4745, -0.0968, -0.0902, -0.4333,
          0.2129, -0.0477, -0.4610]])), ('layers.2.bias', tensor([-0.5354]))])",0.2723315135991129,0.4635777609126914
14,14,"OrderedDict([('layers.0.weight', tensor([[ 1.1637],
        [-0.2196],
        [-0.6530],
        [ 1.3249],
        [-0.1387],
        [ 1.0363],
        [-0.8108],
        [ 0.6764],
        [-0.2675],
        [ 0.6667],
        [ 0.1173],
        [-0.3344],
        [-1.0856],
        [-0.7196],
        [-0.8259],
        [-0.9727],
        [ 0.1597],
        [ 0.0585],
        [-0.8722]])), ('layers.0.bias', tensor([ 0.4468, -0.9493,  1.3189,  0.2102,  0.4780,  0.0397,  0.9098,  0.1172,
        -0.9267,  0.2955, -0.3870, -0.7642,  0.3559, -0.7707, -0.8035,  1.2468,
        -0.8327, -0.1581,  1.2669])), ('layers.2.weight', tensor([[ 0.3705,  0.0472, -0.2885,  0.4848, -0.0515,  0.5112, -0.2992,  0.3835,
          0.0077,  0.0305, -0.0883, -0.0271, -0.4785, -0.0973, -0.0907, -0.4403,
          0.2129, -0.0477, -0.4688]])), ('layers.2.bias', tensor([-0.5407]))])",0.2717430114985897,0.4624341505841585
15,15,"OrderedDict([('layers.0.weight', tensor([[ 1.1684],
        [-0.2196],
        [-0.6621],
        [ 1.3307],
        [-0.1391],
        [ 1.0452],
        [-0.8250],
        [ 0.6802],
        [-0.2675],
        [ 0.6676],
        [ 0.1173],
        [-0.3344],
        [-1.0888],
        [-0.7208],
        [-0.8269],
        [-0.9829],
        [ 0.1597],
        [ 0.0585],
        [-0.8829]])), ('layers.0.bias', tensor([ 0.4436, -0.9493,  1.3372,  0.2133,  0.4793,  0.0453,  0.9267,  0.1192,
        -0.9267,  0.2941, -0.3870, -0.7642,  0.3689, -0.7686, -0.8018,  1.2623,
        -0.8327, -0.1581,  1.2828])), ('layers.2.weight', tensor([[ 0.3724,  0.0472, -0.2939,  0.4887, -0.0540,  0.5169, -0.3054,  0.3873,
          0.0077,  0.0318, -0.0883, -0.0272, -0.4822, -0.0977, -0.0912, -0.4467,
          0.2129, -0.0477, -0.4761]])), ('layers.2.bias', tensor([-0.5456]))])",0.2712648329532385,0.4614947522233706
16,16,"OrderedDict([('layers.0.weight', tensor([[ 1.1725],
        [-0.2196],
        [-0.6704],
        [ 1.3356],
        [-0.1396],
        [ 1.0527],
        [-0.8384],
        [ 0.6834],
        [-0.2675],
        [ 0.6684],
        [ 0.1173],
        [-0.3345],
        [-1.0919],
        [-0.7220],
        [-0.8278],
        [-0.9926],
        [ 0.1597],
        [ 0.0585],
        [-0.8929]])), ('layers.0.bias', tensor([ 0.4408, -0.9493,  1.3542,  0.2167,  0.4806,  0.0517,  0.9422,  0.1214,
        -0.9267,  0.2928, -0.3870, -0.7641,  0.3811, -0.7666, -0.8003,  1.2763,
        -0.8327, -0.1581,  1.2972])), ('layers.2.weight', tensor([[ 0.3742,  0.0472, -0.2989,  0.4921, -0.0563,  0.5218, -0.3111,  0.3907,
          0.0077,  0.0330, -0.0883, -0.0272, -0.4856, -0.0981, -0.0916, -0.4527,
          0.2129, -0.0477, -0.4827]])), ('layers.2.bias', tensor([-0.5500]))])",0.2708714180776951,0.46071417895533767
17,17,"OrderedDict([('layers.0.weight', tensor([[ 1.1761],
        [-0.2196],
        [-0.6782],
        [ 1.3397],
        [-0.1400],
        [ 1.0590],
        [-0.8514],
        [ 0.6861],
        [-0.2675],
        [ 0.6691],
        [ 0.1173],
        [-0.3345],
        [-1.0947],
        [-0.7230],
        [-0.8285],
        [-1.0016],
        [ 0.1597],
        [ 0.0585],
        [-0.9023]])), ('layers.0.bias', tensor([ 0.4384, -0.9493,  1.3699,  0.2204,  0.4819,  0.0585,  0.9560,  0.1239,
        -0.9267,  0.2916, -0.3870, -0.7640,  0.3926, -0.7648, -0.7989,  1.2891,
        -0.8327, -0.1581,  1.3103])), ('layers.2.weight', tensor([[ 0.3757,  0.0472, -0.3036,  0.4952, -0.0585,  0.5259, -0.3165,  0.3936,
          0.0077,  0.0341, -0.0883, -0.0273, -0.4889, -0.0984, -0.0919, -0.4581,
          0.2129, -0.0477, -0.4889]])), ('layers.2.bias', tensor([-0.5541]))])",0.2705443206379035,0.4600587172608357
18,18,"OrderedDict([('layers.0.weight', tensor([[ 1.1793],
        [-0.2196],
        [-0.6854],
        [ 1.3431],
        [-0.1404],
        [ 1.0641],
        [-0.8650],
        [ 0.6883],
        [-0.2675],
        [ 0.6697],
        [ 0.1173],
        [-0.3346],
        [-1.0974],
        [-0.7239],
        [-0.8293],
        [-1.0103],
        [ 0.1597],
        [ 0.0585],
        [-0.9113]])), ('layers.0.bias', tensor([ 0.4363, -0.9493,  1.3845,  0.2244,  0.4831,  0.0659,  0.9671,  0.1265,
        -0.9267,  0.2905, -0.3870, -0.7640,  0.4034, -0.7632, -0.7977,  1.3007,
        -0.8327, -0.1581,  1.3224])), ('layers.2.weight', tensor([[ 0.3771,  0.0472, -0.3079,  0.4978, -0.0604,  0.5295, -0.3216,  0.3963,
          0.0077,  0.0351, -0.0883, -0.0273, -0.4920, -0.0987, -0.0922, -0.4632,
          0.2129, -0.0477, -0.4946]])), ('layers.2.bias', tensor([-0.5578]))])",0.2702695209467493,0.45950204990028093
19,19,"OrderedDict([('layers.0.weight', tensor([[ 1.1820],
        [-0.2196],
        [-0.6920],
        [ 1.3458],
        [-0.1408],
        [ 1.0681],
        [-0.8792],
        [ 0.6908],
        [-0.2675],
        [ 0.6703],
        [ 0.1173],
        [-0.3346],
        [-1.0999],
        [-0.7248],
        [-0.8299],
        [-1.0185],
        [ 0.1597],
        [ 0.0585],
        [-0.9198]])), ('layers.0.bias', tensor([ 0.4345, -0.9493,  1.3982,  0.2286,  0.4842,  0.0736,  0.9758,  0.1270,
        -0.9267,  0.2895, -0.3870, -0.7640,  0.4137, -0.7617, -0.7965,  1.3115,
        -0.8327, -0.1581,  1.3335])), ('layers.2.weight', tensor([[ 0.3783,  0.0472, -0.3119,  0.5001, -0.0622,  0.5324, -0.3263,  0.3986,
          0.0077,  0.0359, -0.0883, -0.0274, -0.4950, -0.0990, -0.0925, -0.4680,
          0.2129, -0.0477, -0.4999]])), ('layers.2.bias', tensor([-0.5612]))])",0.2700363801731631,0.4590279298000193
20,20,"OrderedDict([('layers.0.weight', tensor([[ 1.1844],
        [-0.2196],
        [-0.6983],
        [ 1.3479],
        [-0.1412],
        [ 1.0712],
        [-0.8934],
        [ 0.6936],
        [-0.2675],
        [ 0.6707],
        [ 0.1173],
        [-0.3346],
        [-1.1022],
        [-0.7256],
        [-0.8305],
        [-1.0263],
        [ 0.1597],
        [ 0.0585],
        [-0.9280]])), ('layers.0.bias', tensor([ 0.4329, -0.9493,  1.4109,  0.2330,  0.4853,  0.0816,  0.9828,  0.1256,
        -0.9267,  0.2887, -0.3870, -0.7639,  0.4234, -0.7603, -0.7954,  1.3214,
        -0.8327, -0.1581,  1.3436])), ('layers.2.weight', tensor([[ 0.3794,  0.0472, -0.3157,  0.5021, -0.0639,  0.5349, -0.3308,  0.4005,
          0.0077,  0.0366, -0.0883, -0.0274, -0.4978, -0.0993, -0.0928, -0.4725,
          0.2129, -0.0477, -0.5049]])), ('layers.2.bias', tensor([-0.5644]))])",0.2698350331411348,0.45862066133122426
21,21,"OrderedDict([('layers.0.weight', tensor([[ 1.1865],
        [-0.2196],
        [-0.7041],
        [ 1.3495],
        [-0.1415],
        [ 1.0736],
        [-0.9077],
        [ 0.6954],
        [-0.2675],
        [ 0.6712],
        [ 0.1173],
        [-0.3347],
        [-1.1045],
        [-0.7263],
        [-0.8311],
        [-1.0337],
        [ 0.1597],
        [ 0.0585],
        [-0.9358]])), ('layers.0.bias', tensor([ 0.4316, -0.9493,  1.4229,  0.2376,  0.4863,  0.0900,  0.9883,  0.1263,
        -0.9267,  0.2879, -0.3870, -0.7639,  0.4327, -0.7590, -0.7944,  1.3305,
        -0.8327, -0.1581,  1.3530])), ('layers.2.weight', tensor([[ 0.3804,  0.0472, -0.3192,  0.5039, -0.0655,  0.5369, -0.3350,  0.4023,
          0.0077,  0.0373, -0.0883, -0.0275, -0.5005, -0.0995, -0.0930, -0.4766,
          0.2129, -0.0477, -0.5096]])), ('layers.2.bias', tensor([-0.5674]))])",0.26966103381394835,0.45826317622316615
22,22,"OrderedDict([('layers.0.weight', tensor([[ 1.1883],
        [-0.2196],
        [-0.7096],
        [ 1.3505],
        [-0.1419],
        [ 1.0750],
        [-0.9220],
        [ 0.6969],
        [-0.2675],
        [ 0.6715],
        [ 0.1173],
        [-0.3347],
        [-1.1067],
        [-0.7270],
        [-0.8316],
        [-1.0409],
        [ 0.1597],
        [ 0.0585],
        [-0.9432]])), ('layers.0.bias', tensor([ 0.4305, -0.9493,  1.4341,  0.2424,  0.4873,  0.0986,  0.9926,  0.1269,
        -0.9267,  0.2872, -0.3870, -0.7639,  0.4416, -0.7578, -0.7935,  1.3389,
        -0.8327, -0.1581,  1.3617])), ('layers.2.weight', tensor([[ 0.3812,  0.0472, -0.3225,  0.5053, -0.0669,  0.5385, -0.3391,  0.4037,
          0.0077,  0.0379, -0.0883, -0.0275, -0.5031, -0.0997, -0.0933, -0.4805,
          0.2129, -0.0477, -0.5139]])), ('layers.2.bias', tensor([-0.5702]))])",0.2695081348577029,0.4579549250566439
23,23,"OrderedDict([('layers.0.weight', tensor([[ 1.1897],
        [-0.2196],
        [-0.7147],
        [ 1.3510],
        [-0.1422],
        [ 1.0758],
        [-0.9363],
        [ 0.6979],
        [-0.2675],
        [ 0.6718],
        [ 0.1173],
        [-0.3347],
        [-1.1087],
        [-0.7276],
        [-0.8321],
        [-1.0478],
        [ 0.1597],
        [ 0.0585],
        [-0.9504]])), ('layers.0.bias', tensor([ 0.4295, -0.9493,  1.4447,  0.2473,  0.4883,  0.1073,  0.9957,  0.1281,
        -0.9267,  0.2866, -0.3870, -0.7639,  0.4502, -0.7567, -0.7926,  1.3467,
        -0.8327, -0.1581,  1.3697])), ('layers.2.weight', tensor([[ 0.3818,  0.0472, -0.3257,  0.5066, -0.0683,  0.5397, -0.3429,  0.4049,
          0.0077,  0.0383, -0.0883, -0.0275, -0.5056, -0.0999, -0.0935, -0.4842,
          0.2129, -0.0477, -0.5181]])), ('layers.2.bias', tensor([-0.5728]))])",0.269373305090024,0.4576831239001573
24,24,"OrderedDict([('layers.0.weight', tensor([[ 1.1909],
        [-0.2196],
        [-0.7195],
        [ 1.3521],
        [-0.1425],
        [ 1.0759],
        [-0.9507],
        [ 0.6988],
        [-0.2675],
        [ 0.6720],
        [ 0.1173],
        [-0.3347],
        [-1.1107],
        [-0.7282],
        [-0.8325],
        [-1.0544],
        [ 0.1597],
        [ 0.0585],
        [-0.9573]])), ('layers.0.bias', tensor([ 0.4287, -0.9493,  1.4547,  0.2493,  0.4892,  0.1162,  0.9977,  0.1291,
        -0.9267,  0.2861, -0.3870, -0.7638,  0.4585, -0.7556, -0.7918,  1.3539,
        -0.8327, -0.1581,  1.3771])), ('layers.2.weight', tensor([[ 0.3824,  0.0472, -0.3286,  0.5076, -0.0696,  0.5405, -0.3466,  0.4059,
          0.0077,  0.0387, -0.0883, -0.0276, -0.5080, -0.1001, -0.0937, -0.4877,
          0.2129, -0.0477, -0.5220]])), ('layers.2.bias', tensor([-0.5752]))])",0.2692549031962699,0.45744839998669706
25,25,"OrderedDict([('layers.0.weight', tensor([[ 1.1919],
        [-0.2196],
        [-0.7240],
        [ 1.3537],
        [-0.1428],
        [ 1.0756],
        [-0.9652],
        [ 0.6999],
        [-0.2675],
        [ 0.6722],
        [ 0.1173],
        [-0.3348],
        [-1.1126],
        [-0.7288],
        [-0.8330],
        [-1.0608],
        [ 0.1597],
        [ 0.0585],
        [-0.9640]])), ('layers.0.bias', tensor([ 0.4281, -0.9493,  1.4641,  0.2490,  0.4901,  0.1255,  0.9987,  0.1287,
        -0.9267,  0.2856, -0.3870, -0.7638,  0.4664, -0.7546, -0.7910,  1.3605,
        -0.8327, -0.1581,  1.3840])), ('layers.2.weight', tensor([[ 0.3829,  0.0472, -0.3314,  0.5084, -0.0708,  0.5412, -0.3502,  0.4067,
          0.0077,  0.0391, -0.0883, -0.0276, -0.5104, -0.1003, -0.0938, -0.4910,
          0.2129, -0.0477, -0.5257]])), ('layers.2.bias', tensor([-0.5775]))])",0.26914876085114275,0.45724230655420967
26,26,"OrderedDict([('layers.0.weight', tensor([[ 1.1928],
        [-0.2196],
        [-0.7284],
        [ 1.3552],
        [-0.1430],
        [ 1.0750],
        [-0.9798],
        [ 0.7010],
        [-0.2675],
        [ 0.6723],
        [ 0.1173],
        [-0.3348],
        [-1.1145],
        [-0.7293],
        [-0.8334],
        [-1.0671],
        [ 0.1597],
        [ 0.0585],
        [-0.9706]])), ('layers.0.bias', tensor([ 0.4278, -0.9493,  1.4729,  0.2484,  0.4909,  0.1350,  0.9986,  0.1283,
        -0.9267,  0.2853, -0.3870, -0.7638,  0.4741, -0.7537, -0.7903,  1.3665,
        -0.8327, -0.1581,  1.3902])), ('layers.2.weight', tensor([[ 0.3834,  0.0472, -0.3340,  0.5093, -0.0719,  0.5419, -0.3536,  0.4075,
          0.0077,  0.0394, -0.0883, -0.0276, -0.5126, -0.1005, -0.0940, -0.4942,
          0.2129, -0.0477, -0.5291]])), ('layers.2.bias', tensor([-0.5796]))])",0.26905299908394226,0.45705396685283023
27,27,"OrderedDict([('layers.0.weight', tensor([[ 1.1935],
        [-0.2196],
        [-0.7325],
        [ 1.3565],
        [-0.1433],
        [ 1.0740],
        [-0.9945],
        [ 0.7018],
        [-0.2675],
        [ 0.6724],
        [ 0.1173],
        [-0.3348],
        [-1.1163],
        [-0.7298],
        [-0.8338],
        [-1.0732],
        [ 0.1597],
        [ 0.0585],
        [-0.9770]])), ('layers.0.bias', tensor([ 0.4275, -0.9493,  1.4811,  0.2480,  0.4917,  0.1447,  0.9976,  0.1280,
        -0.9267,  0.2850, -0.3870, -0.7638,  0.4816, -0.7528, -0.7896,  1.3721,
        -0.8327, -0.1581,  1.3959])), ('layers.2.weight', tensor([[ 0.3838,  0.0472, -0.3364,  0.5099, -0.0730,  0.5423, -0.3569,  0.4082,
          0.0077,  0.0398, -0.0883, -0.0276, -0.5149, -0.1006, -0.0942, -0.4971,
          0.2129, -0.0477, -0.5324]])), ('layers.2.bias', tensor([-0.5816]))])",0.26896590864441045,0.4568833196530856
28,28,"OrderedDict([('layers.0.weight', tensor([[ 1.1940],
        [-0.2196],
        [-0.7364],
        [ 1.3573],
        [-0.1436],
        [ 1.0724],
        [-1.0092],
        [ 0.7024],
        [-0.2675],
        [ 0.6724],
        [ 0.1173],
        [-0.3348],
        [-1.1180],
        [-0.7303],
        [-0.8341],
        [-1.0791],
        [ 0.1597],
        [ 0.0585],
        [-0.9831]])), ('layers.0.bias', tensor([ 0.4274, -0.9493,  1.4890,  0.2478,  0.4925,  0.1545,  0.9957,  0.1279,
        -0.9267,  0.2848, -0.3870, -0.7638,  0.4888, -0.7519, -0.7889,  1.3772,
        -0.8327, -0.1581,  1.4012])), ('layers.2.weight', tensor([[ 0.3841,  0.0472, -0.3388,  0.5104, -0.0740,  0.5425, -0.3600,  0.4086,
          0.0077,  0.0400, -0.0883, -0.0276, -0.5170, -0.1008, -0.0943, -0.4999,
          0.2129, -0.0477, -0.5356]])), ('layers.2.bias', tensor([-0.5835]))])",0.2688862210544661,0.4567294817835015
29,29,"OrderedDict([('layers.0.weight', tensor([[ 1.1942],
        [-0.2196],
        [-0.7400],
        [ 1.3578],
        [-0.1438],
        [ 1.0704],
        [-1.0240],
        [ 0.7027],
        [-0.2675],
        [ 0.6724],
        [ 0.1173],
        [-0.3348],
        [-1.1197],
        [-0.7307],
        [-0.8345],
        [-1.0849],
        [ 0.1597],
        [ 0.0585],
        [-0.9891]])), ('layers.0.bias', tensor([ 0.4273, -0.9493,  1.4964,  0.2477,  0.4932,  0.1643,  0.9932,  0.1278,
        -0.9267,  0.2846, -0.3870, -0.7638,  0.4959, -0.7511, -0.7883,  1.3820,
        -0.8327, -0.1581,  1.4061])), ('layers.2.weight', tensor([[ 0.3843,  0.0472, -0.3410,  0.5106, -0.0749,  0.5424, -0.3631,  0.4088,
          0.0077,  0.0402, -0.0883, -0.0276, -0.5191, -0.1009, -0.0944, -0.5026,
          0.2129, -0.0477, -0.5385]])), ('layers.2.bias', tensor([-0.5853]))])",0.26881274192783167,0.456589634984266
30,30,"OrderedDict([('layers.0.weight', tensor([[ 1.1943],
        [-0.2196],
        [-0.7435],
        [ 1.3579],
        [-0.1440],
        [ 1.0680],
        [-1.0389],
        [ 0.7022],
        [-0.2675],
        [ 0.6723],
        [ 0.1173],
        [-0.3348],
        [-1.1213],
        [-0.7311],
        [-0.8348],
        [-1.0905],
        [ 0.1597],
        [ 0.0585],
        [-0.9950]])), ('layers.0.bias', tensor([ 0.4274, -0.9493,  1.5035,  0.2478,  0.4939,  0.1741,  0.9899,  0.1296,
        -0.9267,  0.2845, -0.3870, -0.7637,  0.5028, -0.7503, -0.7877,  1.3864,
        -0.8327, -0.1581,  1.4106])), ('layers.2.weight', tensor([[ 0.3844,  0.0472, -0.3431,  0.5108, -0.0758,  0.5422, -0.3662,  0.4089,
          0.0077,  0.0403, -0.0883, -0.0277, -0.5212, -0.1010, -0.0946, -0.5052,
          0.2129, -0.0477, -0.5414]])), ('layers.2.bias', tensor([-0.5870]))])",0.2687444695266701,0.4564583452617323
31,31,"OrderedDict([('layers.0.weight', tensor([[ 1.1942],
        [-0.2196],
        [-0.7467],
        [ 1.3577],
        [-0.1442],
        [ 1.0652],
        [-1.0538],
        [ 0.7015],
        [-0.2675],
        [ 0.6722],
        [ 0.1173],
        [-0.3348],
        [-1.1229],
        [-0.7316],
        [-0.8351],
        [-1.0959],
        [ 0.1597],
        [ 0.0585],
        [-1.0006]])), ('layers.0.bias', tensor([ 0.4275, -0.9493,  1.5103,  0.2480,  0.4946,  0.1839,  0.9860,  0.1314,
        -0.9267,  0.2844, -0.3870, -0.7637,  0.5095, -0.7496, -0.7871,  1.3905,
        -0.8327, -0.1581,  1.4149])), ('layers.2.weight', tensor([[ 0.3844,  0.0472, -0.3451,  0.5107, -0.0767,  0.5418, -0.3691,  0.4088,
          0.0077,  0.0403, -0.0883, -0.0277, -0.5232, -0.1011, -0.0947, -0.5076,
          0.2129, -0.0477, -0.5441]])), ('layers.2.bias', tensor([-0.5886]))])",0.26868050887042044,0.45633954972630214
32,32,"OrderedDict([('layers.0.weight', tensor([[ 1.1939],
        [-0.2196],
        [-0.7498],
        [ 1.3572],
        [-0.1444],
        [ 1.0621],
        [-1.0688],
        [ 0.7010],
        [-0.2675],
        [ 0.6720],
        [ 0.1173],
        [-0.3348],
        [-1.1245],
        [-0.7319],
        [-0.8354],
        [-1.1012],
        [ 0.1597],
        [ 0.0585],
        [-1.0062]])), ('layers.0.bias', tensor([ 0.4277, -0.9493,  1.5168,  0.2484,  0.4952,  0.1937,  0.9816,  0.1320,
        -0.9267,  0.2843, -0.3870, -0.7637,  0.5161, -0.7488, -0.7866,  1.3943,
        -0.8327, -0.1581,  1.4188])), ('layers.2.weight', tensor([[ 0.3844,  0.0472, -0.3470,  0.5105, -0.0775,  0.5413, -0.3721,  0.4086,
          0.0077,  0.0402, -0.0883, -0.0277, -0.5252, -0.1013, -0.0948, -0.5100,
          0.2129, -0.0477, -0.5467]])), ('layers.2.bias', tensor([-0.5902]))])",0.26862034976202265,0.45623134028573986
33,33,"OrderedDict([('layers.0.weight', tensor([[ 1.1935],
        [-0.2196],
        [-0.7527],
        [ 1.3564],
        [-0.1446],
        [ 1.0598],
        [-1.0838],
        [ 0.7005],
        [-0.2675],
        [ 0.6718],
        [ 0.1173],
        [-0.3349],
        [-1.1260],
        [-0.7323],
        [-0.8357],
        [-1.1089],
        [ 0.1597],
        [ 0.0585],
        [-1.0116]])), ('layers.0.bias', tensor([ 0.4279, -0.9493,  1.5231,  0.2488,  0.4959,  0.1993,  0.9767,  0.1323,
        -0.9267,  0.2842, -0.3870, -0.7637,  0.5225, -0.7482, -0.7860,  1.3951,
        -0.8327, -0.1581,  1.4225])), ('layers.2.weight', tensor([[ 0.3842,  0.0472, -0.3489,  0.5101, -0.0783,  0.5407, -0.3749,  0.4082,
          0.0077,  0.0402, -0.0883, -0.0277, -0.5272, -0.1014, -0.0949, -0.5122,
          0.2129, -0.0477, -0.5492]])), ('layers.2.bias', tensor([-0.5917]))])",0.2685650667771066,0.4561308119252014
34,34,"OrderedDict([('layers.0.weight', tensor([[ 1.1931],
        [-0.2196],
        [-0.7555],
        [ 1.3557],
        [-0.1448],
        [ 1.0584],
        [-1.0986],
        [ 0.7000],
        [-0.2675],
        [ 0.6716],
        [ 0.1173],
        [-0.3349],
        [-1.1275],
        [-0.7327],
        [-0.8360],
        [-1.1172],
        [ 0.1597],
        [ 0.0585],
        [-1.0170]])), ('layers.0.bias', tensor([ 0.4283, -0.9493,  1.5289,  0.2495,  0.4965,  0.2014,  0.9717,  0.1328,
        -0.9267,  0.2843, -0.3870, -0.7637,  0.5288, -0.7475, -0.7855,  1.3948,
        -0.8327, -0.1581,  1.4258])), ('layers.2.weight', tensor([[ 0.3841,  0.0472, -0.3506,  0.5098, -0.0790,  0.5401, -0.3778,  0.4079,
          0.0077,  0.0401, -0.0883, -0.0277, -0.5291, -0.1015, -0.0951, -0.5144,
          0.2129, -0.0477, -0.5515]])), ('layers.2.bias', tensor([-0.5930]))])",0.2685121507666774,0.45603707581564473
35,35,"OrderedDict([('layers.0.weight', tensor([[ 1.1926],
        [-0.2196],
        [-0.7583],
        [ 1.3550],
        [-0.1450],
        [ 1.0573],
        [-1.1135],
        [ 0.6995],
        [-0.2675],
        [ 0.6714],
        [ 0.1173],
        [-0.3349],
        [-1.1290],
        [-0.7330],
        [-0.8362],
        [-1.1256],
        [ 0.1597],
        [ 0.0585],
        [-1.0223]])), ('layers.0.bias', tensor([ 0.4288, -0.9493,  1.5343,  0.2505,  0.4970,  0.2031,  0.9663,  0.1335,
        -0.9267,  0.2844, -0.3870, -0.7637,  0.5351, -0.7469, -0.7850,  1.3940,
        -0.8327, -0.1581,  1.4287])), ('layers.2.weight', tensor([[ 0.3841,  0.0472, -0.3523,  0.5096, -0.0797,  0.5397, -0.3806,  0.4077,
          0.0077,  0.0401, -0.0883, -0.0277, -0.5310, -0.1016, -0.0952, -0.5164,
          0.2129, -0.0477, -0.5538]])), ('layers.2.bias', tensor([-0.5943]))])",0.26846085563095506,0.45594095215783453
36,36,"OrderedDict([('layers.0.weight', tensor([[ 1.1921],
        [-0.2196],
        [-0.7609],
        [ 1.3541],
        [-0.1452],
        [ 1.0561],
        [-1.1284],
        [ 0.6988],
        [-0.2675],
        [ 0.6712],
        [ 0.1173],
        [-0.3349],
        [-1.1305],
        [-0.7333],
        [-0.8365],
        [-1.1341],
        [ 0.1597],
        [ 0.0585],
        [-1.0276]])), ('layers.0.bias', tensor([ 0.4294, -0.9493,  1.5395,  0.2515,  0.4976,  0.2048,  0.9605,  0.1342,
        -0.9267,  0.2845, -0.3870, -0.7637,  0.5412, -0.7462, -0.7845,  1.3929,
        -0.8327, -0.1581,  1.4313])), ('layers.2.weight', tensor([[ 0.3840,  0.0472, -0.3538,  0.5092, -0.0804,  0.5391, -0.3834,  0.4074,
          0.0077,  0.0401, -0.0883, -0.0277, -0.5329, -0.1017, -0.0953, -0.5185,
          0.2129, -0.0477, -0.5560]])), ('layers.2.bias', tensor([-0.5956]))])",0.26841107072656695,0.45584897802909835
37,37,"OrderedDict([('layers.0.weight', tensor([[ 1.1915],
        [-0.2196],
        [-0.7634],
        [ 1.3530],
        [-0.1453],
        [ 1.0546],
        [-1.1434],
        [ 0.6980],
        [-0.2675],
        [ 0.6709],
        [ 0.1173],
        [-0.3349],
        [-1.1319],
        [-0.7337],
        [-0.8367],
        [-1.1425],
        [ 0.1597],
        [ 0.0585],
        [-1.0328]])), ('layers.0.bias', tensor([ 0.4300, -0.9493,  1.5446,  0.2526,  0.4981,  0.2065,  0.9543,  0.1349,
        -0.9267,  0.2846, -0.3870, -0.7637,  0.5472, -0.7457, -0.7841,  1.3915,
        -0.8327, -0.1581,  1.4338])), ('layers.2.weight', tensor([[ 0.3839,  0.0472, -0.3554,  0.5088, -0.0810,  0.5383, -0.3862,  0.4069,
          0.0077,  0.0401, -0.0883, -0.0277, -0.5347, -0.1018, -0.0954, -0.5204,
          0.2129, -0.0477, -0.5581]])), ('layers.2.bias', tensor([-0.5968]))])",0.2683629103894418,0.4557625225415298
38,38,"OrderedDict([('layers.0.weight', tensor([[ 1.1908],
        [-0.2196],
        [-0.7658],
        [ 1.3518],
        [-0.1455],
        [ 1.0528],
        [-1.1584],
        [ 0.6972],
        [-0.2675],
        [ 0.6706],
        [ 0.1173],
        [-0.3349],
        [-1.1333],
        [-0.7340],
        [-0.8370],
        [-1.1509],
        [ 0.1597],
        [ 0.0585],
        [-1.0379]])), ('layers.0.bias', tensor([ 0.4307, -0.9493,  1.5494,  0.2537,  0.4986,  0.2083,  0.9478,  0.1357,
        -0.9267,  0.2848, -0.3870, -0.7637,  0.5532, -0.7451, -0.7836,  1.3899,
        -0.8327, -0.1581,  1.4361])), ('layers.2.weight', tensor([[ 0.3837,  0.0472, -0.3568,  0.5083, -0.0816,  0.5375, -0.3890,  0.4064,
          0.0077,  0.0400, -0.0883, -0.0277, -0.5365, -0.1019, -0.0955, -0.5223,
          0.2129, -0.0477, -0.5602]])), ('layers.2.bias', tensor([-0.5980]))])",0.2683161422640599,0.45568422761086064
39,39,"OrderedDict([('layers.0.weight', tensor([[ 1.1900],
        [-0.2196],
        [-0.7681],
        [ 1.3504],
        [-0.1457],
        [ 1.0510],
        [-1.1735],
        [ 0.6962],
        [-0.2675],
        [ 0.6703],
        [ 0.1173],
        [-0.3349],
        [-1.1347],
        [-0.7343],
        [-0.8372],
        [-1.1593],
        [ 0.1597],
        [ 0.0585],
        [-1.0430]])), ('layers.0.bias', tensor([ 0.4313, -0.9493,  1.5542,  0.2549,  0.4991,  0.2101,  0.9411,  0.1365,
        -0.9267,  0.2849, -0.3870, -0.7637,  0.5590, -0.7445, -0.7832,  1.3881,
        -0.8327, -0.1581,  1.4383])), ('layers.2.weight', tensor([[ 0.3834,  0.0472, -0.3583,  0.5077, -0.0822,  0.5365, -0.3918,  0.4058,
          0.0077,  0.0398, -0.0883, -0.0278, -0.5384, -0.1020, -0.0955, -0.5242,
          0.2129, -0.0477, -0.5622]])), ('layers.2.bias', tensor([-0.5991]))])",0.26827051618856784,0.45561387280467897
40,40,"OrderedDict([('layers.0.weight', tensor([[ 1.1891],
        [-0.2196],
        [-0.7703],
        [ 1.3489],
        [-0.1458],
        [ 1.0490],
        [-1.1885],
        [ 0.6951],
        [-0.2675],
        [ 0.6700],
        [ 0.1173],
        [-0.3349],
        [-1.1361],
        [-0.7345],
        [-0.8374],
        [-1.1677],
        [ 0.1597],
        [ 0.0585],
        [-1.0479]])), ('layers.0.bias', tensor([ 0.4320, -0.9493,  1.5587,  0.2562,  0.4996,  0.2120,  0.9342,  0.1373,
        -0.9267,  0.2851, -0.3870, -0.7637,  0.5648, -0.7440, -0.7828,  1.3861,
        -0.8327, -0.1581,  1.4403])), ('layers.2.weight', tensor([[ 0.3831,  0.0472, -0.3596,  0.5070, -0.0828,  0.5355, -0.3947,  0.4051,
          0.0077,  0.0397, -0.0883, -0.0278, -0.5401, -0.1020, -0.0956, -0.5260,
          0.2129, -0.0477, -0.5641]])), ('layers.2.bias', tensor([-0.6002]))])",0.26822597663691944,0.4555461143162878
41,41,"OrderedDict([('layers.0.weight', tensor([[ 1.1882],
        [-0.2196],
        [-0.7724],
        [ 1.3473],
        [-0.1459],
        [ 1.0468],
        [-1.2036],
        [ 0.6939],
        [-0.2675],
        [ 0.6696],
        [ 0.1173],
        [-0.3349],
        [-1.1375],
        [-0.7348],
        [-0.8376],
        [-1.1760],
        [ 0.1597],
        [ 0.0585],
        [-1.0529]])), ('layers.0.bias', tensor([ 0.4327, -0.9493,  1.5631,  0.2574,  0.5001,  0.2140,  0.9270,  0.1382,
        -0.9267,  0.2853, -0.3870, -0.7637,  0.5706, -0.7435, -0.7824,  1.3840,
        -0.8327, -0.1581,  1.4421])), ('layers.2.weight', tensor([[ 0.3828,  0.0472, -0.3610,  0.5063, -0.0834,  0.5344, -0.3975,  0.4044,
          0.0077,  0.0394, -0.0883, -0.0278, -0.5419, -0.1021, -0.0957, -0.5278,
          0.2129, -0.0477, -0.5659]])), ('layers.2.bias', tensor([-0.6013]))])",0.26818239784940184,0.4554807887490218
42,42,"OrderedDict([('layers.0.weight', tensor([[ 1.1872],
        [-0.2196],
        [-0.7744],
        [ 1.3457],
        [-0.1461],
        [ 1.0446],
        [-1.2187],
        [ 0.6927],
        [-0.2675],
        [ 0.6693],
        [ 0.1173],
        [-0.3349],
        [-1.1388],
        [-0.7351],
        [-0.8378],
        [-1.1843],
        [ 0.1597],
        [ 0.0585],
        [-1.0577]])), ('layers.0.bias', tensor([ 0.4335, -0.9493,  1.5674,  0.2587,  0.5006,  0.2159,  0.9197,  0.1391,
        -0.9267,  0.2855, -0.3870, -0.7637,  0.5762, -0.7430, -0.7820,  1.3817,
        -0.8327, -0.1581,  1.4438])), ('layers.2.weight', tensor([[ 0.3824,  0.0472, -0.3623,  0.5055, -0.0839,  0.5332, -0.4003,  0.4036,
          0.0077,  0.0392, -0.0883, -0.0278, -0.5437, -0.1022, -0.0958, -0.5296,
          0.2129, -0.0477, -0.5678]])), ('layers.2.bias', tensor([-0.6023]))])",0.2681397864832737,0.45541766082751567
43,43,"OrderedDict([('layers.0.weight', tensor([[ 1.1861],
        [-0.2196],
        [-0.7763],
        [ 1.3439],
        [-0.1462],
        [ 1.0422],
        [-1.2338],
        [ 0.6914],
        [-0.2675],
        [ 0.6689],
        [ 0.1173],
        [-0.3349],
        [-1.1401],
        [-0.7353],
        [-0.8380],
        [-1.1926],
        [ 0.1597],
        [ 0.0585],
        [-1.0625]])), ('layers.0.bias', tensor([ 0.4342, -0.9493,  1.5716,  0.2600,  0.5010,  0.2179,  0.9123,  0.1400,
        -0.9267,  0.2857, -0.3870, -0.7636,  0.5818, -0.7425, -0.7817,  1.3792,
        -0.8327, -0.1581,  1.4454])), ('layers.2.weight', tensor([[ 0.3820,  0.0472, -0.3635,  0.5047, -0.0844,  0.5320, -0.4032,  0.4028,
          0.0077,  0.0390, -0.0883, -0.0278, -0.5454, -0.1023, -0.0959, -0.5313,
          0.2129, -0.0477, -0.5695]])), ('layers.2.bias', tensor([-0.6033]))])",0.2680980577691419,0.4553564956819173
44,44,"OrderedDict([('layers.0.weight', tensor([[ 1.1851],
        [-0.2196],
        [-0.7782],
        [ 1.3422],
        [-0.1463],
        [ 1.0400],
        [-1.2418],
        [ 0.6902],
        [-0.2675],
        [ 0.6685],
        [ 0.1173],
        [-0.3349],
        [-1.1414],
        [-0.7356],
        [-0.8382],
        [-1.2009],
        [ 0.1597],
        [ 0.0585],
        [-1.0673]])), ('layers.0.bias', tensor([ 0.4350, -0.9493,  1.5755,  0.2615,  0.5015,  0.2201,  0.9173,  0.1410,
        -0.9267,  0.2859, -0.3870, -0.7636,  0.5874, -0.7420, -0.7813,  1.3765,
        -0.8327, -0.1581,  1.4467])), ('layers.2.weight', tensor([[ 0.3817,  0.0472, -0.3647,  0.5040, -0.0849,  0.5308, -0.4061,  0.4021,
          0.0077,  0.0388, -0.0883, -0.0278, -0.5471, -0.1023, -0.0959, -0.5330,
          0.2129, -0.0477, -0.5713]])), ('layers.2.bias', tensor([-0.6042]))])",0.26806133739398014,0.45532447590570274
45,45,"OrderedDict([('layers.0.weight', tensor([[ 1.1842],
        [-0.2196],
        [-0.7801],
        [ 1.3407],
        [-0.1465],
        [ 1.0380],
        [-1.2467],
        [ 0.6891],
        [-0.2675],
        [ 0.6682],
        [ 0.1173],
        [-0.3349],
        [-1.1427],
        [-0.7358],
        [-0.8384],
        [-1.2093],
        [ 0.1597],
        [ 0.0585],
        [-1.0722]])), ('layers.0.bias', tensor([ 0.4360, -0.9493,  1.5791,  0.2632,  0.5019,  0.2227,  0.9276,  0.1422,
        -0.9267,  0.2863, -0.3870, -0.7636,  0.5928, -0.7416, -0.7809,  1.3735,
        -0.8327, -0.1581,  1.4477])), ('layers.2.weight', tensor([[ 0.3815,  0.0472, -0.3658,  0.5034, -0.0854,  0.5299, -0.4089,  0.4015,
          0.0077,  0.0387, -0.0883, -0.0278, -0.5488, -0.1024, -0.0960, -0.5346,
          0.2129, -0.0477, -0.5729]])), ('layers.2.bias', tensor([-0.6051]))])",0.26803115717678644,0.45529895953368393
46,46,"OrderedDict([('layers.0.weight', tensor([[ 1.1832],
        [-0.2196],
        [-0.7820],
        [ 1.3391],
        [-0.1466],
        [ 1.0359],
        [-1.2585],
        [ 0.6879],
        [-0.2675],
        [ 0.6678],
        [ 0.1173],
        [-0.3349],
        [-1.1440],
        [-0.7361],
        [-0.8386],
        [-1.2177],
        [ 0.1597],
        [ 0.0585],
        [-1.0770]])), ('layers.0.bias', tensor([ 0.4371, -0.9493,  1.5823,  0.2650,  0.5023,  0.2255,  0.9255,  0.1435,
        -0.9267,  0.2866, -0.3870, -0.7636,  0.5982, -0.7412, -0.7806,  1.3701,
        -0.8327, -0.1581,  1.4484])), ('layers.2.weight', tensor([[ 0.3813,  0.0472, -0.3669,  0.5027, -0.0858,  0.5290, -0.4117,  0.4009,
          0.0077,  0.0386, -0.0883, -0.0278, -0.5505, -0.1025, -0.0961, -0.5362,
          0.2129, -0.0477, -0.5744]])), ('layers.2.bias', tensor([-0.6059]))])",0.26800565705416374,0.4552382521602946
47,47,"OrderedDict([('layers.0.weight', tensor([[ 1.1820],
        [-0.2196],
        [-0.7837],
        [ 1.3372],
        [-0.1467],
        [ 1.0334],
        [-1.2658],
        [ 0.6865],
        [-0.2675],
        [ 0.6674],
        [ 0.1173],
        [-0.3349],
        [-1.1453],
        [-0.7363],
        [-0.8387],
        [-1.2282],
        [ 0.1597],
        [ 0.0585],
        [-1.0816]])), ('layers.0.bias', tensor([ 0.4381, -0.9493,  1.5856,  0.2668,  0.5026,  0.2282,  0.9311,  0.1447,
        -0.9267,  0.2869, -0.3870, -0.7636,  0.6035, -0.7407, -0.7803,  1.3640,
        -0.8327, -0.1581,  1.4491])), ('layers.2.weight', tensor([[ 0.3810,  0.0472, -0.3679,  0.5019, -0.0863,  0.5279, -0.4145,  0.4001,
          0.0077,  0.0384, -0.0883, -0.0278, -0.5522, -0.1025, -0.0961, -0.5378,
          0.2129, -0.0477, -0.5759]])), ('layers.2.bias', tensor([-0.6067]))])",0.2679768175088005,0.455196340684779
48,48,"OrderedDict([('layers.0.weight', tensor([[ 1.1807],
        [-0.2196],
        [-0.7852],
        [ 1.3350],
        [-0.1468],
        [ 1.0307],
        [-1.2706],
        [ 0.6849],
        [-0.2675],
        [ 0.6669],
        [ 0.1173],
        [-0.3349],
        [-1.1465],
        [-0.7365],
        [-0.8389],
        [-1.2402],
        [ 0.1597],
        [ 0.0585],
        [-1.0862]])), ('layers.0.bias', tensor([ 0.4391, -0.9493,  1.5888,  0.2686,  0.5030,  0.2307,  0.9412,  0.1459,
        -0.9267,  0.2873, -0.3870, -0.7636,  0.6088, -0.7403, -0.7800,  1.3560,
        -0.8327, -0.1581,  1.4498])), ('layers.2.weight', tensor([[ 0.3805,  0.0472, -0.3689,  0.5010, -0.0867,  0.5265, -0.4173,  0.3991,
          0.0077,  0.0381, -0.0883, -0.0278, -0.5538, -0.1026, -0.0962, -0.5393,
          0.2129, -0.0477, -0.5774]])), ('layers.2.bias', tensor([-0.6075]))])",0.2679397686058413,0.4551669001210636
49,49,"OrderedDict([('layers.0.weight', tensor([[ 1.1793],
        [-0.2196],
        [-0.7866],
        [ 1.3328],
        [-0.1469],
        [ 1.0278],
        [-1.2747],
        [ 0.6833],
        [-0.2675],
        [ 0.6665],
        [ 0.1173],
        [-0.3349],
        [-1.1477],
        [-0.7367],
        [-0.8391],
        [-1.2525],
        [ 0.1597],
        [ 0.0585],
        [-1.0906]])), ('layers.0.bias', tensor([ 0.4401, -0.9493,  1.5920,  0.2702,  0.5034,  0.2332,  0.9522,  0.1471,
        -0.9267,  0.2876, -0.3870, -0.7636,  0.6140, -0.7399, -0.7797,  1.3474,
        -0.8327, -0.1581,  1.4504])), ('layers.2.weight', tensor([[ 0.3800,  0.0472, -0.3699,  0.4999, -0.0871,  0.5250, -0.4200,  0.3981,
          0.0077,  0.0378, -0.0883, -0.0278, -0.5555, -0.1027, -0.0963, -0.5409,
          0.2129, -0.0477, -0.5788]])), ('layers.2.bias', tensor([-0.6083]))])",0.2679014399157798,0.45514325754484164
50,50,"OrderedDict([('layers.0.weight', tensor([[ 1.1780],
        [-0.2196],
        [-0.7881],
        [ 1.3306],
        [-0.1470],
        [ 1.0250],
        [-1.2867],
        [ 0.6817],
        [-0.2675],
        [ 0.6660],
        [ 0.1173],
        [-0.3349],
        [-1.1490],
        [-0.7369],
        [-0.8392],
        [-1.2648],
        [ 0.1597],
        [ 0.0585],
        [-1.0950]])), ('layers.0.bias', tensor([ 0.4411, -0.9493,  1.5950,  0.2720,  0.5037,  0.2359,  0.9492,  0.1483,
        -0.9267,  0.2879, -0.3870, -0.7636,  0.6191, -0.7395, -0.7794,  1.3387,
        -0.8327, -0.1581,  1.4509])), ('layers.2.weight', tensor([[ 0.3796,  0.0472, -0.3708,  0.4989, -0.0875,  0.5236, -0.4227,  0.3972,
          0.0077,  0.0375, -0.0883, -0.0278, -0.5571, -0.1027, -0.0963, -0.5424,
          0.2129, -0.0477, -0.5802]])), ('layers.2.bias', tensor([-0.6090]))])",0.26787119854458674,0.45507376748525225
51,51,"OrderedDict([('layers.0.weight', tensor([[ 1.1765],
        [-0.2196],
        [-0.7893],
        [ 1.3282],
        [-0.1471],
        [ 1.0220],
        [-1.2941],
        [ 0.6799],
        [-0.2675],
        [ 0.6655],
        [ 0.1173],
        [-0.3349],
        [-1.1502],
        [-0.7371],
        [-0.8394],
        [-1.2769],
        [ 0.1597],
        [ 0.0585],
        [-1.0993]])), ('layers.0.bias', tensor([ 0.4420, -0.9493,  1.5981,  0.2736,  0.5041,  0.2383,  0.9542,  0.1494,
        -0.9267,  0.2881, -0.3870, -0.7636,  0.6242, -0.7392, -0.7791,  1.3302,
        -0.8327, -0.1581,  1.4514])), ('layers.2.weight', tensor([[ 0.3789,  0.0472, -0.3717,  0.4978, -0.0878,  0.5220, -0.4254,  0.3960,
          0.0077,  0.0371, -0.0883, -0.0278, -0.5587, -0.1028, -0.0964, -0.5440,
          0.2129, -0.0477, -0.5816]])), ('layers.2.bias', tensor([-0.6097]))])",0.26783177568771255,0.4550397715473082
52,52,"OrderedDict([('layers.0.weight', tensor([[ 1.1751],
        [-0.2196],
        [-0.7906],
        [ 1.3259],
        [-0.1472],
        [ 1.0190],
        [-1.2987],
        [ 0.6782],
        [-0.2675],
        [ 0.6650],
        [ 0.1173],
        [-0.3349],
        [-1.1514],
        [-0.7373],
        [-0.8395],
        [-1.2890],
        [ 0.1597],
        [ 0.0585],
        [-1.1036]])), ('layers.0.bias', tensor([ 0.4430, -0.9493,  1.6011,  0.2753,  0.5044,  0.2406,  0.9639,  0.1506,
        -0.9267,  0.2884, -0.3870, -0.7636,  0.6293, -0.7388, -0.7788,  1.3216,
        -0.8327, -0.1581,  1.4519])), ('layers.2.weight', tensor([[ 0.3783,  0.0472, -0.3726,  0.4966, -0.0882,  0.5204, -0.4281,  0.3949,
          0.0077,  0.0367, -0.0883, -0.0278, -0.5603, -0.1028, -0.0964, -0.5456,
          0.2129, -0.0477, -0.5829]])), ('layers.2.bias', tensor([-0.6105]))])",0.2677966868223848,0.4550187783218765
53,53,"OrderedDict([('layers.0.weight', tensor([[ 1.1737],
        [-0.2196],
        [-0.7919],
        [ 1.3236],
        [-0.1473],
        [ 1.0162],
        [-1.3109],
        [ 0.6765],
        [-0.2675],
        [ 0.6646],
        [ 0.1173],
        [-0.3349],
        [-1.1526],
        [-0.7375],
        [-0.8397],
        [-1.3009],
        [ 0.1597],
        [ 0.0585],
        [-1.1079]])), ('layers.0.bias', tensor([ 0.4440, -0.9493,  1.6039,  0.2770,  0.5048,  0.2431,  0.9604,  0.1517,
        -0.9267,  0.2887, -0.3870, -0.7636,  0.6343, -0.7384, -0.7785,  1.3131,
        -0.8327, -0.1581,  1.4523])), ('layers.2.weight', tensor([[ 0.3778,  0.0472, -0.3735,  0.4956, -0.0886,  0.5190, -0.4308,  0.3939,
          0.0077,  0.0363, -0.0883, -0.0278, -0.5619, -0.1029, -0.0965, -0.5472,
          0.2129, -0.0477, -0.5842]])), ('layers.2.bias', tensor([-0.6112]))])",0.26776387324830464,0.45495499366758546
54,54,"OrderedDict([('layers.0.weight', tensor([[ 1.1722],
        [-0.2196],
        [-0.7931],
        [ 1.3214],
        [-0.1473],
        [ 1.0133],
        [-1.3182],
        [ 0.6748],
        [-0.2675],
        [ 0.6641],
        [ 0.1173],
        [-0.3350],
        [-1.1538],
        [-0.7377],
        [-0.8398],
        [-1.3128],
        [ 0.1597],
        [ 0.0585],
        [-1.1121]])), ('layers.0.bias', tensor([ 0.4449, -0.9493,  1.6067,  0.2786,  0.5051,  0.2455,  0.9650,  0.1529,
        -0.9267,  0.2890, -0.3870, -0.7636,  0.6392, -0.7381, -0.7782,  1.3047,
        -0.8327, -0.1581,  1.4526])), ('layers.2.weight', tensor([[ 0.3773,  0.0472, -0.3743,  0.4945, -0.0889,  0.5175, -0.4334,  0.3929,
          0.0077,  0.0359, -0.0883, -0.0278, -0.5635, -0.1029, -0.0966, -0.5489,
          0.2129, -0.0477, -0.5855]])), ('layers.2.bias', tensor([-0.6119]))])",0.2677328133894908,0.4549187580162349
55,55,"OrderedDict([('layers.0.weight', tensor([[ 1.1708],
        [-0.2196],
        [-0.7943],
        [ 1.3192],
        [-0.1474],
        [ 1.0105],
        [-1.3228],
        [ 0.6732],
        [-0.2675],
        [ 0.6637],
        [ 0.1173],
        [-0.3350],
        [-1.1549],
        [-0.7378],
        [-0.8399],
        [-1.3245],
        [ 0.1597],
        [ 0.0585],
        [-1.1162]])), ('layers.0.bias', tensor([ 0.4459, -0.9493,  1.6095,  0.2802,  0.5054,  0.2478,  0.9745,  0.1540,
        -0.9267,  0.2892, -0.3870, -0.7636,  0.6442, -0.7378, -0.7780,  1.2964,
        -0.8327, -0.1581,  1.4530])), ('layers.2.weight', tensor([[ 0.3767,  0.0472, -0.3752,  0.4935, -0.0893,  0.5161, -0.4361,  0.3919,
          0.0077,  0.0356, -0.0883, -0.0278, -0.5651, -0.1030, -0.0966, -0.5505,
          0.2129, -0.0477, -0.5868]])), ('layers.2.bias', tensor([-0.6126]))])",0.2677004578431896,0.4548990077300308
56,56,"OrderedDict([('layers.0.weight', tensor([[ 1.1694],
        [-0.2196],
        [-0.7955],
        [ 1.3169],
        [-0.1475],
        [ 1.0078],
        [-1.3268],
        [ 0.6715],
        [-0.2675],
        [ 0.6632],
        [ 0.1173],
        [-0.3350],
        [-1.1561],
        [-0.7380],
        [-0.8401],
        [-1.3360],
        [ 0.1597],
        [ 0.0585],
        [-1.1203]])), ('layers.0.bias', tensor([ 0.4469, -0.9493,  1.6122,  0.2819,  0.5058,  0.2502,  0.9849,  0.1551,
        -0.9267,  0.2895, -0.3870, -0.7636,  0.6490, -0.7375, -0.7777,  1.2882,
        -0.8327, -0.1581,  1.4532])), ('layers.2.weight', tensor([[ 0.3762,  0.0472, -0.3760,  0.4924, -0.0896,  0.5146, -0.4387,  0.3908,
          0.0077,  0.0352, -0.0883, -0.0278, -0.5667, -0.1030, -0.0967, -0.5522,
          0.2129, -0.0477, -0.5880]])), ('layers.2.bias', tensor([-0.6132]))])",0.2676686600156245,0.45488319723614645
57,57,"OrderedDict([('layers.0.weight', tensor([[ 1.1681],
        [-0.2196],
        [-0.7966],
        [ 1.3148],
        [-0.1476],
        [ 1.0050],
        [-1.3389],
        [ 0.6699],
        [-0.2675],
        [ 0.6627],
        [ 0.1173],
        [-0.3350],
        [-1.1572],
        [-0.7382],
        [-0.8402],
        [-1.3474],
        [ 0.1597],
        [ 0.0585],
        [-1.1243]])), ('layers.0.bias', tensor([ 0.4478, -0.9493,  1.6149,  0.2835,  0.5061,  0.2525,  0.9809,  0.1563,
        -0.9267,  0.2897, -0.3870, -0.7636,  0.6538, -0.7371, -0.7775,  1.2801,
        -0.8327, -0.1581,  1.4535])), ('layers.2.weight', tensor([[ 0.3757,  0.0472, -0.3768,  0.4914, -0.0900,  0.5133, -0.4413,  0.3898,
          0.0077,  0.0349, -0.0883, -0.0278, -0.5682, -0.1031, -0.0967, -0.5539,
          0.2129, -0.0477, -0.5893]])), ('layers.2.bias', tensor([-0.6139]))])",0.2676397728697642,0.4548232729556427
58,58,"OrderedDict([('layers.0.weight', tensor([[ 1.1667],
        [-0.2196],
        [-0.7977],
        [ 1.3126],
        [-0.1477],
        [ 1.0023],
        [-1.3463],
        [ 0.6682],
        [-0.2675],
        [ 0.6623],
        [ 0.1173],
        [-0.3350],
        [-1.1584],
        [-0.7383],
        [-0.8403],
        [-1.3586],
        [ 0.1597],
        [ 0.0585],
        [-1.1283]])), ('layers.0.bias', tensor([ 0.4487, -0.9493,  1.6175,  0.2850,  0.5064,  0.2547,  0.9852,  0.1573,
        -0.9267,  0.2900, -0.3870, -0.7636,  0.6586, -0.7368, -0.7773,  1.2721,
        -0.8327, -0.1581,  1.4538])), ('layers.2.weight', tensor([[ 0.3751,  0.0472, -0.3776,  0.4904, -0.0903,  0.5119, -0.4439,  0.3889,
          0.0077,  0.0345, -0.0883, -0.0278, -0.5697, -0.1031, -0.0968, -0.5555,
          0.2129, -0.0477, -0.5905]])), ('layers.2.bias', tensor([-0.6145]))])",0.26761261876314774,0.45479114303792206
59,59,"OrderedDict([('layers.0.weight', tensor([[ 1.1653],
        [-0.2196],
        [-0.7988],
        [ 1.3105],
        [-0.1477],
        [ 0.9997],
        [-1.3508],
        [ 0.6667],
        [-0.2675],
        [ 0.6618],
        [ 0.1173],
        [-0.3350],
        [-1.1595],
        [-0.7385],
        [-0.8404],
        [-1.3697],
        [ 0.1597],
        [ 0.0585],
        [-1.1322]])), ('layers.0.bias', tensor([ 0.4496, -0.9493,  1.6201,  0.2866,  0.5067,  0.2569,  0.9943,  0.1584,
        -0.9267,  0.2902, -0.3870, -0.7636,  0.6633, -0.7365, -0.7770,  1.2643,
        -0.8327, -0.1581,  1.4541])), ('layers.2.weight', tensor([[ 0.3746,  0.0472, -0.3784,  0.4894, -0.0907,  0.5106, -0.4464,  0.3879,
          0.0077,  0.0341, -0.0883, -0.0278, -0.5713, -0.1032, -0.0968, -0.5573,
          0.2129, -0.0477, -0.5917]])), ('layers.2.bias', tensor([-0.6152]))])",0.26758433903372253,0.4547753936436493
60,60,"OrderedDict([('layers.0.weight', tensor([[ 1.1640],
        [-0.2196],
        [-0.7999],
        [ 1.3084],
        [-0.1478],
        [ 0.9971],
        [-1.3547],
        [ 0.6651],
        [-0.2675],
        [ 0.6614],
        [ 0.1173],
        [-0.3350],
        [-1.1606],
        [-0.7386],
        [-0.8405],
        [-1.3806],
        [ 0.1597],
        [ 0.0585],
        [-1.1361]])), ('layers.0.bias', tensor([ 0.4505, -0.9493,  1.6226,  0.2881,  0.5070,  0.2590,  1.0043,  0.1595,
        -0.9267,  0.2904, -0.3870, -0.7636,  0.6680, -0.7363, -0.7768,  1.2566,
        -0.8327, -0.1581,  1.4543])), ('layers.2.weight', tensor([[ 0.3741,  0.0472, -0.3792,  0.4884, -0.0910,  0.5093, -0.4490,  0.3870,
          0.0077,  0.0338, -0.0883, -0.0278, -0.5728, -0.1032, -0.0968, -0.5590,
          0.2129, -0.0477, -0.5929]])), ('layers.2.bias', tensor([-0.6158]))])",0.267556623769633,0.4547638942380824
61,61,"OrderedDict([('layers.0.weight', tensor([[ 1.1628],
        [-0.2196],
        [-0.8010],
        [ 1.3065],
        [-0.1479],
        [ 0.9948],
        [-1.3585],
        [ 0.6637],
        [-0.2675],
        [ 0.6610],
        [ 0.1173],
        [-0.3350],
        [-1.1617],
        [-0.7388],
        [-0.8407],
        [-1.3914],
        [ 0.1597],
        [ 0.0585],
        [-1.1399]])), ('layers.0.bias', tensor([ 0.4515, -0.9493,  1.6250,  0.2897,  0.5073,  0.2613,  1.0144,  0.1606,
        -0.9267,  0.2906, -0.3870, -0.7636,  0.6726, -0.7360, -0.7766,  1.2488,
        -0.8327, -0.1581,  1.4545])), ('layers.2.weight', tensor([[ 0.3737,  0.0472, -0.3799,  0.4875, -0.0913,  0.5082, -0.4515,  0.3861,
          0.0077,  0.0335, -0.0883, -0.0278, -0.5743, -0.1033, -0.0969, -0.5607,
          0.2129, -0.0477, -0.5940]])), ('layers.2.bias', tensor([-0.6164]))])",0.2675288197229747,0.45474771274797
62,62,"OrderedDict([('layers.0.weight', tensor([[ 1.1618],
        [-0.2196],
        [-0.8022],
        [ 1.3050],
        [-0.1480],
        [ 0.9929],
        [-1.3706],
        [ 0.6625],
        [-0.2675],
        [ 0.6607],
        [ 0.1173],
        [-0.3350],
        [-1.1628],
        [-0.7389],
        [-0.8408],
        [-1.4028],
        [ 0.1597],
        [ 0.0585],
        [-1.1439]])), ('layers.0.bias', tensor([ 0.4526, -0.9493,  1.6271,  0.2915,  0.5076,  0.2639,  1.0099,  0.1619,
        -0.9267,  0.2909, -0.3870, -0.7636,  0.6772, -0.7357, -0.7764,  1.2402,
        -0.8327, -0.1581,  1.4544])), ('layers.2.weight', tensor([[ 0.3736,  0.0472, -0.3806,  0.4870, -0.0916,  0.5075, -0.4540,  0.3856,
          0.0077,  0.0335, -0.0883, -0.0278, -0.5758, -0.1033, -0.0969, -0.5624,
          0.2129, -0.0477, -0.5952]])), ('layers.2.bias', tensor([-0.6169]))])",0.2675066601335857,0.4546666192802756
63,63,"OrderedDict([('layers.0.weight', tensor([[ 1.1606],
        [-0.2196],
        [-0.8033],
        [ 1.3031],
        [-0.1480],
        [ 0.9906],
        [-1.3779],
        [ 0.6611],
        [-0.2675],
        [ 0.6603],
        [ 0.1173],
        [-0.3350],
        [-1.1639],
        [-0.7390],
        [-0.8409],
        [-1.4140],
        [ 0.1597],
        [ 0.0585],
        [-1.1476]])), ('layers.0.bias', tensor([ 0.4535, -0.9493,  1.6294,  0.2930,  0.5079,  0.2660,  1.0136,  0.1629,
        -0.9267,  0.2911, -0.3870, -0.7636,  0.6817, -0.7354, -0.7762,  1.2320,
        -0.8327, -0.1581,  1.4546])), ('layers.2.weight', tensor([[ 0.3731,  0.0472, -0.3813,  0.4861, -0.0919,  0.5064, -0.4565,  0.3848,
          0.0077,  0.0332, -0.0883, -0.0278, -0.5772, -0.1033, -0.0970, -0.5642,
          0.2129, -0.0477, -0.5963]])), ('layers.2.bias', tensor([-0.6175]))])",0.26747586350168906,0.45463019447245945
64,64,"OrderedDict([('layers.0.weight', tensor([[ 1.1595],
        [-0.2196],
        [-0.8044],
        [ 1.3014],
        [-0.1481],
        [ 0.9885],
        [-1.3823],
        [ 0.6598],
        [-0.2675],
        [ 0.6599],
        [ 0.1173],
        [-0.3350],
        [-1.1650],
        [-0.7392],
        [-0.8410],
        [-1.4250],
        [ 0.1597],
        [ 0.0585],
        [-1.1514]])), ('layers.0.bias', tensor([ 0.4544, -0.9493,  1.6318,  0.2945,  0.5082,  0.2681,  1.0223,  0.1640,
        -0.9267,  0.2914, -0.3870, -0.7636,  0.6862, -0.7352, -0.7760,  1.2239,
        -0.8327, -0.1581,  1.4548])), ('layers.2.weight', tensor([[ 0.3728,  0.0472, -0.3821,  0.4854, -0.0922,  0.5054, -0.4590,  0.3841,
          0.0077,  0.0330, -0.0883, -0.0278, -0.5787, -0.1034, -0.0970, -0.5660,
          0.2129, -0.0477, -0.5975]])), ('layers.2.bias', tensor([-0.6181]))])",0.2674496338391767,0.4546083863814905
65,65,"OrderedDict([('layers.0.weight', tensor([[ 1.1584],
        [-0.2196],
        [-0.8054],
        [ 1.2997],
        [-0.1482],
        [ 0.9864],
        [-1.3861],
        [ 0.6585],
        [-0.2675],
        [ 0.6595],
        [ 0.1173],
        [-0.3350],
        [-1.1661],
        [-0.7393],
        [-0.8411],
        [-1.4357],
        [ 0.1597],
        [ 0.0585],
        [-1.1580]])), ('layers.0.bias', tensor([ 0.4552, -0.9493,  1.6341,  0.2959,  0.5085,  0.2701,  1.0319,  0.1650,
        -0.9267,  0.2916, -0.3870, -0.7636,  0.6906, -0.7349, -0.7758,  1.2162,
        -0.8327, -0.1581,  1.4521])), ('layers.2.weight', tensor([[ 0.3724,  0.0472, -0.3828,  0.4846, -0.0925,  0.5045, -0.4614,  0.3834,
          0.0077,  0.0327, -0.0883, -0.0278, -0.5802, -0.1034, -0.0970, -0.5678,
          0.2129, -0.0477, -0.5986]])), ('layers.2.bias', tensor([-0.6187]))])",0.2674219342602479,0.4545779782788789
66,66,"OrderedDict([('layers.0.weight', tensor([[ 1.1572],
        [-0.2196],
        [-0.8064],
        [ 1.2978],
        [-0.1483],
        [ 0.9841],
        [-1.3973],
        [ 0.6571],
        [-0.2675],
        [ 0.6592],
        [ 0.1173],
        [-0.3350],
        [-1.1672],
        [-0.7394],
        [-0.8412],
        [-1.4462],
        [ 0.1597],
        [ 0.0585],
        [-1.1650]])), ('layers.0.bias', tensor([ 0.4559, -0.9493,  1.6367,  0.2971,  0.5088,  0.2718,  1.0286,  0.1658,
        -0.9267,  0.2917, -0.3870, -0.7636,  0.6950, -0.7347, -0.7756,  1.2089,
        -0.8327, -0.1581,  1.4490])), ('layers.2.weight', tensor([[ 0.3719,  0.0472, -0.3836,  0.4837, -0.0928,  0.5033, -0.4639,  0.3825,
          0.0077,  0.0324, -0.0883, -0.0278, -0.5816, -0.1035, -0.0971, -0.5697,
          0.2129, -0.0477, -0.5998]])), ('layers.2.bias', tensor([-0.6193]))])",0.267396750973334,0.45451270800307003
67,67,"OrderedDict([('layers.0.weight', tensor([[ 1.1559],
        [-0.2196],
        [-0.8073],
        [ 1.2959],
        [-0.1483],
        [ 0.9818],
        [-1.4042],
        [ 0.6556],
        [-0.2675],
        [ 0.6588],
        [ 0.1173],
        [-0.3350],
        [-1.1682],
        [-0.7395],
        [-0.8413],
        [-1.4564],
        [ 0.1597],
        [ 0.0585],
        [-1.1720]])), ('layers.0.bias', tensor([ 0.4565, -0.9493,  1.6395,  0.2981,  0.5091,  0.2732,  1.0327,  0.1665,
        -0.9267,  0.2919, -0.3870, -0.7636,  0.6994, -0.7345, -0.7754,  1.2020,
        -0.8327, -0.1581,  1.4460])), ('layers.2.weight', tensor([[ 0.3713,  0.0472, -0.3844,  0.4827, -0.0932,  0.5020, -0.4663,  0.3816,
          0.0077,  0.0319, -0.0883, -0.0278, -0.5831, -0.1035, -0.0971, -0.5715,
          0.2129, -0.0477, -0.6010]])), ('layers.2.bias', tensor([-0.6200]))])",0.2673697306865319,0.45448047775765493
68,68,"OrderedDict([('layers.0.weight', tensor([[ 1.1548],
        [-0.2196],
        [-0.8082],
        [ 1.2942],
        [-0.1484],
        [ 0.9797],
        [-1.4085],
        [ 0.6544],
        [-0.2675],
        [ 0.6585],
        [ 0.1173],
        [-0.3350],
        [-1.1693],
        [-0.7397],
        [-0.8414],
        [-1.4664],
        [ 0.1597],
        [ 0.0585],
        [-1.1789]])), ('layers.0.bias', tensor([ 0.4571, -0.9493,  1.6422,  0.2991,  0.5095,  0.2746,  1.0411,  0.1672,
        -0.9267,  0.2920, -0.3870, -0.7636,  0.7037, -0.7342, -0.7752,  1.1954,
        -0.8327, -0.1581,  1.4432])), ('layers.2.weight', tensor([[ 0.3708,  0.0472, -0.3852,  0.4819, -0.0935,  0.5009, -0.4687,  0.3807,
          0.0077,  0.0316, -0.0883, -0.0278, -0.5845, -0.1035, -0.0971, -0.5734,
          0.2129, -0.0477, -0.6023]])), ('layers.2.bias', tensor([-0.6207]))])",0.26734420718712876,0.45446034622145814
69,69,"OrderedDict([('layers.0.weight', tensor([[ 1.1538],
        [-0.2196],
        [-0.8092],
        [ 1.2926],
        [-0.1485],
        [ 0.9778],
        [-1.4122],
        [ 0.6532],
        [-0.2675],
        [ 0.6582],
        [ 0.1173],
        [-0.3350],
        [-1.1703],
        [-0.7398],
        [-0.8414],
        [-1.4761],
        [ 0.1597],
        [ 0.0585],
        [-1.1856]])), ('layers.0.bias', tensor([ 0.4577, -0.9493,  1.6449,  0.3001,  0.5098,  0.2759,  1.0504,  0.1679,
        -0.9267,  0.2921, -0.3870, -0.7636,  0.7079, -0.7340, -0.7751,  1.1892,
        -0.8327, -0.1581,  1.4404])), ('layers.2.weight', tensor([[ 0.3704,  0.0472, -0.3860,  0.4811, -0.0938,  0.4999, -0.4711,  0.3800,
          0.0077,  0.0312, -0.0883, -0.0278, -0.5859, -0.1036, -0.0972, -0.5753,
          0.2129, -0.0477, -0.6035]])), ('layers.2.bias', tensor([-0.6213]))])",0.2673194015227106,0.454444070783696
