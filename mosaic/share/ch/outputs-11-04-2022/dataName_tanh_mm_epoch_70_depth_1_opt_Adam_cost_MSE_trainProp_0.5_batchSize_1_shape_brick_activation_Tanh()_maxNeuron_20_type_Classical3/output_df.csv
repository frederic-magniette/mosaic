,Epochs,Params,Train loss,Test loss
0,0,"OrderedDict([('layers.0.weight', tensor([[-0.2612],
        [ 0.5922],
        [-0.3518],
        [ 0.3449],
        [ 1.0134],
        [-0.7181],
        [ 0.0880],
        [ 0.8691],
        [ 0.1683],
        [-0.4862],
        [ 0.4682],
        [-0.7096],
        [-0.4998],
        [ 0.7419],
        [-0.6460],
        [ 0.8706],
        [-0.0835],
        [ 0.2688],
        [ 0.9035]])), ('layers.0.bias', tensor([ 0.9438, -0.7174, -0.7030, -0.1243,  0.4053, -0.8158, -0.4626,  0.7724,
        -0.1478, -0.7934, -0.4154,  0.3336, -0.6253, -0.4102, -0.2528,  0.8042,
         0.1551,  0.1023,  0.2242])), ('layers.2.weight', tensor([[-0.3054,  0.0101, -0.0308,  0.2911,  0.2043,  0.0622,  0.0371,  0.2236,
         -0.0893,  0.1229,  0.1641,  0.0748, -0.0407,  0.1511, -0.2404, -0.1491,
         -0.0769,  0.1298, -0.1330]])), ('layers.2.bias', tensor([0.0945]))])",1.2203961128989855,0.6600900608270118
1,1,"OrderedDict([('layers.0.weight', tensor([[-0.3679],
        [ 0.5919],
        [-0.3938],
        [ 0.4132],
        [ 1.0898],
        [-0.6660],
        [ 0.0880],
        [ 0.9586],
        [ 0.1251],
        [-0.4264],
        [ 0.5401],
        [-0.6526],
        [-0.5671],
        [ 0.8172],
        [-0.7453],
        [ 0.7924],
        [-0.1981],
        [ 0.3558],
        [ 0.8513]])), ('layers.0.bias', tensor([ 1.0518, -0.7181, -0.6616, -0.0519,  0.4280, -0.8703, -0.4626,  0.7388,
        -0.1917, -0.8531, -0.3390,  0.2627, -0.5539, -0.3305, -0.1373,  0.8369,
         0.2816,  0.1044,  0.2013])), ('layers.2.weight', tensor([[-0.4121,  0.0536, -0.0942,  0.3639,  0.2645, -0.0080,  0.0371,  0.2555,
         -0.0519,  0.0599,  0.2312, -0.0127, -0.1139,  0.2159, -0.3312, -0.1196,
         -0.1876,  0.1961, -0.0750]])), ('layers.2.bias', tensor([-0.0016]))])",0.8289888281996052,0.4883329942550821
2,2,"OrderedDict([('layers.0.weight', tensor([[-0.4509],
        [ 0.6148],
        [-0.4636],
        [ 0.4596],
        [ 1.1460],
        [-0.6547],
        [ 0.0880],
        [ 1.0281],
        [ 0.1095],
        [-0.4001],
        [ 0.5933],
        [-0.6418],
        [-0.6596],
        [ 0.8726],
        [-0.8246],
        [ 0.7340],
        [-0.3148],
        [ 0.4217],
        [ 0.8273]])), ('layers.0.bias', tensor([ 1.1475e+00, -6.9553e-01, -5.9215e-01, -1.0846e-03,  4.2525e-01,
        -8.8170e-01, -4.6258e-01,  6.9452e-01, -2.0695e-01, -8.7937e-01,
        -2.8021e-01,  2.5185e-01, -4.5345e-01, -2.7026e-01, -3.4680e-02,
         8.8029e-01,  4.1621e-01,  9.7943e-02,  1.9801e-01])), ('layers.2.weight', tensor([[-0.4985,  0.0765, -0.1406,  0.4177,  0.2997, -0.0474,  0.0371,  0.2669,
         -0.0403,  0.0293,  0.2829, -0.0693, -0.1674,  0.2600, -0.4006, -0.1196,
         -0.2986,  0.2410, -0.0422]])), ('layers.2.bias', tensor([-0.0756]))])",0.617086468078196,0.39097729493466127
3,3,"OrderedDict([('layers.0.weight', tensor([[-0.5044],
        [ 0.6392],
        [-0.5157],
        [ 0.4892],
        [ 1.1846],
        [-0.6581],
        [ 0.0880],
        [ 1.0793],
        [ 0.1051],
        [-0.3916],
        [ 0.6296],
        [-0.6497],
        [-0.7308],
        [ 0.9100],
        [-0.8761],
        [ 0.6915],
        [-0.4071],
        [ 0.4699],
        [ 0.8179]])), ('layers.0.bias', tensor([ 1.2211, -0.6688, -0.5366,  0.0333,  0.4118, -0.8769, -0.4626,  0.6515,
        -0.2112, -0.8879, -0.2378,  0.2714, -0.3702, -0.2273,  0.0476,  0.9207,
         0.5324,  0.0831,  0.1999])), ('layers.2.weight', tensor([[-0.5582,  0.0883, -0.1699,  0.4545,  0.3190, -0.0648,  0.0371,  0.2692,
         -0.0375,  0.0177,  0.3193, -0.1007, -0.2010,  0.2880, -0.4449, -0.1346,
         -0.3906,  0.2702, -0.0247]])), ('layers.2.bias', tensor([-0.1253]))])",0.5307598999779051,0.34351440013269896
4,4,"OrderedDict([('layers.0.weight', tensor([[-0.5379],
        [ 0.6605],
        [-0.5511],
        [ 0.5101],
        [ 1.2129],
        [-0.6630],
        [ 0.0880],
        [ 1.1179],
        [ 0.1041],
        [-0.3891],
        [ 0.6565],
        [-0.6600],
        [-0.7791],
        [ 0.9373],
        [-0.9078],
        [ 0.6541],
        [-0.4750],
        [ 0.5058],
        [ 0.8142]])), ('layers.0.bias', tensor([ 1.2757, -0.6434, -0.4932,  0.0593,  0.3973, -0.8704, -0.4626,  0.6152,
        -0.2122, -0.8904, -0.2041,  0.2978, -0.3033, -0.1939,  0.1092,  0.9585,
         0.6267,  0.0720,  0.2018])), ('layers.2.weight', tensor([[-0.5987,  0.0955, -0.1875,  0.4817,  0.3312, -0.0722,  0.0371,  0.2703,
         -0.0368,  0.0135,  0.3469, -0.1185, -0.2217,  0.3076, -0.4726, -0.1533,
         -0.4622,  0.2918, -0.0141]])), ('layers.2.bias', tensor([-0.1583]))])",0.4954967425922708,0.31972263363956394
5,5,"OrderedDict([('layers.0.weight', tensor([[-0.5601],
        [ 0.6769],
        [-0.5760],
        [ 0.5265],
        [ 1.2353],
        [-0.6666],
        [ 0.0880],
        [ 1.1482],
        [ 0.1039],
        [-0.3883],
        [ 0.6783],
        [-0.6687],
        [-0.8153],
        [ 0.9590],
        [-0.9285],
        [ 0.6167],
        [-0.5263],
        [ 0.5306],
        [ 0.8127]])), ('layers.0.bias', tensor([ 1.3172, -0.6229, -0.4566,  0.0811,  0.3847, -0.8653, -0.4626,  0.5860,
        -0.2124, -0.8911, -0.1751,  0.3227, -0.2358, -0.1654,  0.1562,  0.9949,
         0.7031,  0.0788,  0.2029])), ('layers.2.weight', tensor([[-0.6276,  0.1004, -0.1987,  0.5037,  0.3403, -0.0755,  0.0371,  0.2721,
         -0.0366,  0.0119,  0.3695, -0.1299, -0.2357,  0.3230, -0.4915, -0.1718,
         -0.5187,  0.3092, -0.0066]])), ('layers.2.bias', tensor([-0.1814]))])",0.4780669267556126,0.3065820748192588
6,6,"OrderedDict([('layers.0.weight', tensor([[-0.5762],
        [ 0.6949],
        [-0.5956],
        [ 0.5399],
        [ 1.2535],
        [-0.6691],
        [ 0.0880],
        [ 1.1725],
        [ 0.1038],
        [-0.3881],
        [ 0.6965],
        [-0.6757],
        [-0.8423],
        [ 0.9769],
        [-0.9430],
        [ 0.5833],
        [-0.5668],
        [ 0.5502],
        [ 0.8121]])), ('layers.0.bias', tensor([ 1.3499, -0.5958, -0.4221,  0.1002,  0.3741, -0.8617, -0.4626,  0.5622,
        -0.2125, -0.8914, -0.1493,  0.3444, -0.1789, -0.1406,  0.1933,  1.0277,
         0.7661,  0.0888,  0.2033])), ('layers.2.weight', tensor([[-0.6495,  0.1038, -0.2067,  0.5222,  0.3476, -0.0773,  0.0371,  0.2747,
         -0.0366,  0.0111,  0.3887, -0.1380, -0.2464,  0.3356, -0.5055, -0.1892,
         -0.5647,  0.3237, -0.0008]])), ('layers.2.bias', tensor([-0.1987]))])",0.46809692762384053,0.2987197953112286
7,7,"OrderedDict([('layers.0.weight', tensor([[-0.5886],
        [ 0.7111],
        [-0.6106],
        [ 0.5514],
        [ 1.2684],
        [-0.6708],
        [ 0.0880],
        [ 1.1899],
        [ 0.1038],
        [-0.3880],
        [ 0.7114],
        [-0.6813],
        [-0.8634],
        [ 0.9914],
        [-0.9540],
        [ 0.5539],
        [-0.6002],
        [ 0.5659],
        [ 0.8119]])), ('layers.0.bias', tensor([ 1.3767, -0.5692, -0.3940,  0.1110,  0.3649, -0.8591, -0.4626,  0.5454,
        -0.2125, -0.8915, -0.1269,  0.3631, -0.1301, -0.1192,  0.2236,  1.0571,
         0.8193,  0.0984,  0.2035])), ('layers.2.weight', tensor([[-0.6670,  0.1064, -0.2129,  0.5373,  0.3535, -0.0783,  0.0371,  0.2773,
         -0.0366,  0.0107,  0.4045, -0.1444, -0.2554,  0.3459, -0.5165, -0.2054,
         -0.6033,  0.3356,  0.0037]])), ('layers.2.bias', tensor([-0.2123]))])",0.46190301946195783,0.29361792016982996
8,8,"OrderedDict([('layers.0.weight', tensor([[-0.5985],
        [ 0.7250],
        [-0.6223],
        [ 0.5634],
        [ 1.2808],
        [-0.6721],
        [ 0.0880],
        [ 1.2022],
        [ 0.1038],
        [-0.3879],
        [ 0.7240],
        [-0.6859],
        [-0.8811],
        [ 1.0035],
        [-0.9628],
        [ 0.5276],
        [-0.6286],
        [ 0.5800],
        [ 0.8120]])), ('layers.0.bias', tensor([ 1.3992, -0.5450, -0.3712,  0.1010,  0.3569, -0.8571, -0.4626,  0.5341,
        -0.2125, -0.8916, -0.1067,  0.3794, -0.0825, -0.1002,  0.2491,  1.0837,
         0.8652,  0.1041,  0.2033])), ('layers.2.weight', tensor([[-0.6814,  0.1086, -0.2181,  0.5498,  0.3584, -0.0790,  0.0371,  0.2798,
         -0.0366,  0.0105,  0.4181, -0.1496, -0.2634,  0.3544, -0.5256, -0.2205,
         -0.6365,  0.3458,  0.0074]])), ('layers.2.bias', tensor([-0.2234]))])",0.45768758038420854,0.29013322089546517
9,9,"OrderedDict([('layers.0.weight', tensor([[-0.6068],
        [ 0.7374],
        [-0.6317],
        [ 0.5740],
        [ 1.2917],
        [-0.6730],
        [ 0.0880],
        [ 1.2124],
        [ 0.1038],
        [-0.3879],
        [ 0.7353],
        [-0.6898],
        [-0.8960],
        [ 1.0143],
        [-0.9701],
        [ 0.5039],
        [-0.6535],
        [ 0.5948],
        [ 0.8122]])), ('layers.0.bias', tensor([ 1.4185, -0.5223, -0.3524,  0.0933,  0.3504, -0.8556, -0.4626,  0.5250,
        -0.2125, -0.8916, -0.0877,  0.3937, -0.0400, -0.0824,  0.2710,  1.1078,
         0.9051,  0.1017,  0.2031])), ('layers.2.weight', tensor([[-0.6935,  0.1105, -0.2224,  0.5611,  0.3628, -0.0795,  0.0371,  0.2823,
         -0.0366,  0.0103,  0.4303, -0.1539, -0.2705,  0.3621, -0.5333, -0.2342,
         -0.6655,  0.3549,  0.0107]])), ('layers.2.bias', tensor([-0.2327]))])",0.45472943031296986,0.2876952980229059
10,10,"OrderedDict([('layers.0.weight', tensor([[-0.6138],
        [ 0.7480],
        [-0.6395],
        [ 0.5815],
        [ 1.3012],
        [-0.6738],
        [ 0.0880],
        [ 1.2212],
        [ 0.1038],
        [-0.3878],
        [ 0.7452],
        [-0.6932],
        [-0.9088],
        [ 1.0236],
        [-0.9762],
        [ 0.4823],
        [-0.6756],
        [ 0.6056],
        [ 0.8125]])), ('layers.0.bias', tensor([ 1.4352, -0.5016, -0.3366,  0.1007,  0.3448, -0.8544, -0.4626,  0.5172,
        -0.2125, -0.8916, -0.0701,  0.4064, -0.0024, -0.0660,  0.2902,  1.1298,
         0.9403,  0.1071,  0.2028])), ('layers.2.weight', tensor([[-0.7040,  0.1121, -0.2261,  0.5708,  0.3667, -0.0799,  0.0371,  0.2846,
         -0.0366,  0.0102,  0.4411, -0.1577, -0.2772,  0.3687, -0.5401, -0.2469,
         -0.6912,  0.3629,  0.0134]])), ('layers.2.bias', tensor([-0.2407]))])",0.45255186059269664,0.2859474969227449
11,11,"OrderedDict([('layers.0.weight', tensor([[-0.6199],
        [ 0.7567],
        [-0.6460],
        [ 0.5877],
        [ 1.3091],
        [-0.6744],
        [ 0.0880],
        [ 1.2288],
        [ 0.1038],
        [-0.3878],
        [ 0.7533],
        [-0.6961],
        [-0.9200],
        [ 1.0311],
        [-0.9815],
        [ 0.4628],
        [-0.6953],
        [ 0.6148],
        [ 0.8127]])), ('layers.0.bias', tensor([ 1.4501, -0.4835, -0.3230,  0.1067,  0.3396, -0.8534, -0.4626,  0.5102,
        -0.2125, -0.8917, -0.0545,  0.4178,  0.0313, -0.0515,  0.3071,  1.1503,
         0.9719,  0.1112,  0.2025])), ('layers.2.weight', tensor([[-0.7133,  0.1133, -0.2293,  0.5790,  0.3698, -0.0802,  0.0371,  0.2865,
         -0.0366,  0.0101,  0.4501, -0.1611, -0.2833,  0.3742, -0.5460, -0.2588,
         -0.7142,  0.3696,  0.0157]])), ('layers.2.bias', tensor([-0.2477]))])",0.45089825699978975,0.2846711555175716
12,12,"OrderedDict([('layers.0.weight', tensor([[-0.6252],
        [ 0.7642],
        [-0.6516],
        [ 0.5942],
        [ 1.3161],
        [-0.6749],
        [ 0.0880],
        [ 1.2355],
        [ 0.1038],
        [-0.3878],
        [ 0.7603],
        [-0.6987],
        [-0.9299],
        [ 1.0377],
        [-0.9861],
        [ 0.4448],
        [-0.7133],
        [ 0.6244],
        [ 0.8130]])), ('layers.0.bias', tensor([ 1.4635, -0.4668, -0.3113,  0.1041,  0.3351, -0.8525, -0.4626,  0.5039,
        -0.2125, -0.8917, -0.0399,  0.4282,  0.0617, -0.0381,  0.3223,  1.1694,
         1.0004,  0.1095,  0.2021])), ('layers.2.weight', tensor([[-0.7215,  0.1141, -0.2321,  0.5861,  0.3726, -0.0804,  0.0371,  0.2882,
         -0.0366,  0.0100,  0.4580, -0.1640, -0.2891,  0.3790, -0.5513, -0.2699,
         -0.7351,  0.3754,  0.0176]])), ('layers.2.bias', tensor([-0.2538]))])",0.4496182300501308,0.2837525095776073
13,13,"OrderedDict([('layers.0.weight', tensor([[-0.6299],
        [ 0.7707],
        [-0.6571],
        [ 0.5992],
        [ 1.3222],
        [-0.6753],
        [ 0.0880],
        [ 1.2395],
        [ 0.1038],
        [-0.3878],
        [ 0.7665],
        [-0.7010],
        [-0.9388],
        [ 1.0435],
        [-0.9902],
        [ 0.4282],
        [-0.7299],
        [ 0.6313],
        [ 0.8133]])), ('layers.0.bias', tensor([ 1.4755, -0.4511, -0.2971,  0.1077,  0.3311, -0.8518, -0.4626,  0.5012,
        -0.2125, -0.8917, -0.0260,  0.4376,  0.0894, -0.0253,  0.3361,  1.1871,
         1.0261,  0.1139,  0.2018])), ('layers.2.weight', tensor([[-0.7288,  0.1146, -0.2347,  0.5924,  0.3751, -0.0806,  0.0371,  0.2898,
         -0.0366,  0.0100,  0.4651, -0.1667, -0.2945,  0.3832, -0.5561, -0.2803,
         -0.7541,  0.3807,  0.0193]])), ('layers.2.bias', tensor([-0.2593]))])",0.44860643509364306,0.28303878312387193
14,14,"OrderedDict([('layers.0.weight', tensor([[-0.6341],
        [ 0.7765],
        [-0.6627],
        [ 0.6045],
        [ 1.3278],
        [-0.6757],
        [ 0.0880],
        [ 1.2426],
        [ 0.1038],
        [-0.3878],
        [ 0.7721],
        [-0.7031],
        [-0.9468],
        [ 1.0487],
        [-0.9939],
        [ 0.4123],
        [-0.7452],
        [ 0.6376],
        [ 0.8136]])), ('layers.0.bias', tensor([ 1.4864, -0.4363, -0.2808,  0.1057,  0.3276, -0.8512, -0.4626,  0.4995,
        -0.2125, -0.8917, -0.0128,  0.4463,  0.1148, -0.0132,  0.3486,  1.2038,
         1.0496,  0.1176,  0.2014])), ('layers.2.weight', tensor([[-0.7354,  0.1149, -0.2370,  0.5982,  0.3774, -0.0807,  0.0371,  0.2912,
         -0.0366,  0.0099,  0.4715, -0.1691, -0.2995,  0.3871, -0.5605, -0.2899,
         -0.7716,  0.3855,  0.0209]])), ('layers.2.bias', tensor([-0.2643]))])",0.4477856109891339,0.28250876140615827
15,15,"OrderedDict([('layers.0.weight', tensor([[-0.6379],
        [ 0.7815],
        [-0.6678],
        [ 0.6081],
        [ 1.3327],
        [-0.6760],
        [ 0.0880],
        [ 1.2452],
        [ 0.1038],
        [-0.3878],
        [ 0.7770],
        [-0.7050],
        [-0.9541],
        [ 1.0532],
        [-0.9972],
        [ 0.3971],
        [-0.7594],
        [ 0.6445],
        [ 0.8139]])), ('layers.0.bias', tensor([ 1.4963e+00, -4.2244e-01, -2.6517e-01,  1.1180e-01,  3.2449e-01,
        -8.5066e-01, -4.6258e-01,  4.9809e-01, -2.1246e-01, -8.9171e-01,
        -1.9235e-04,  4.5437e-01,  1.3839e-01, -1.6616e-03,  3.6013e-01,
         1.2195e+00,  1.0712e+00,  1.1678e-01,  2.0110e-01])), ('layers.2.weight', tensor([[-0.7415,  0.1149, -0.2391,  0.6033,  0.3794, -0.0808,  0.0371,  0.2925,
         -0.0366,  0.0099,  0.4773, -0.1713, -0.3043,  0.3905, -0.5645, -0.2990,
         -0.7877,  0.3897,  0.0223]])), ('layers.2.bias', tensor([-0.2687]))])",0.44711175184032376,0.2820943052652486
16,16,"OrderedDict([('layers.0.weight', tensor([[-0.6414],
        [ 0.7857],
        [-0.6734],
        [ 0.6114],
        [ 1.3371],
        [-0.6763],
        [ 0.0880],
        [ 1.2475],
        [ 0.1038],
        [-0.3878],
        [ 0.7811],
        [-0.7068],
        [-0.9608],
        [ 1.0570],
        [-1.0002],
        [ 0.3830],
        [-0.7727],
        [ 0.6496],
        [ 0.8141]])), ('layers.0.bias', tensor([ 1.5055, -0.4096, -0.2453,  0.1167,  0.3216, -0.8502, -0.4626,  0.4968,
        -0.2125, -0.8917,  0.0116,  0.4618,  0.1603,  0.0091,  0.3708,  1.2344,
         1.0910,  0.1191,  0.2008])), ('layers.2.weight', tensor([[-0.7470,  0.1147, -0.2412,  0.6077,  0.3811, -0.0809,  0.0371,  0.2936,
         -0.0366,  0.0098,  0.4823, -0.1734, -0.3088,  0.3934, -0.5682, -0.3076,
         -0.8026,  0.3934,  0.0235]])), ('layers.2.bias', tensor([-0.2728]))])",0.4465521075525127,0.28178434841611305
17,17,"OrderedDict([('layers.0.weight', tensor([[-0.6445],
        [ 0.7894],
        [-0.6786],
        [ 0.6154],
        [ 1.3410],
        [-0.6765],
        [ 0.0880],
        [ 1.2496],
        [ 0.1038],
        [-0.3877],
        [ 0.7848],
        [-0.7084],
        [-0.9670],
        [ 1.0604],
        [-1.0030],
        [ 0.3696],
        [-0.7852],
        [ 0.6551],
        [ 0.8144]])), ('layers.0.bias', tensor([ 1.5139, -0.3972, -0.2257,  0.1137,  0.3190, -0.8498, -0.4626,  0.4957,
        -0.2125, -0.8917,  0.0232,  0.4688,  0.1807,  0.0196,  0.3806,  1.2484,
         1.1092,  0.1183,  0.2005])), ('layers.2.weight', tensor([[-0.7520,  0.1142, -0.2433,  0.6118,  0.3827, -0.0810,  0.0371,  0.2947,
         -0.0366,  0.0098,  0.4869, -0.1753, -0.3130,  0.3961, -0.5716, -0.3157,
         -0.8164,  0.3969,  0.0246]])), ('layers.2.bias', tensor([-0.2765]))])",0.44607586507869806,0.2815861427895887
18,18,"OrderedDict([('layers.0.weight', tensor([[-0.6474],
        [ 0.7929],
        [-0.6835],
        [ 0.6191],
        [ 1.3448],
        [-0.6767],
        [ 0.0880],
        [ 1.2517],
        [ 0.1038],
        [-0.3877],
        [ 0.7884],
        [-0.7099],
        [-0.9727],
        [ 1.0637],
        [-1.0055],
        [ 0.3569],
        [-0.7971],
        [ 0.6595],
        [ 0.8146]])), ('layers.0.bias', tensor([ 1.5217, -0.3850, -0.2072,  0.1119,  0.3169, -0.8494, -0.4626,  0.4948,
        -0.2125, -0.8917,  0.0348,  0.4753,  0.1998,  0.0302,  0.3898,  1.2615,
         1.1259,  0.1209,  0.2002])), ('layers.2.weight', tensor([[-0.7567,  0.1137, -0.2453,  0.6157,  0.3843, -0.0811,  0.0371,  0.2957,
         -0.0366,  0.0098,  0.4914, -0.1770, -0.3170,  0.3987, -0.5747, -0.3233,
         -0.8293,  0.4002,  0.0256]])), ('layers.2.bias', tensor([-0.2799]))])",0.4456784706242615,0.2814189217559033
19,19,"OrderedDict([('layers.0.weight', tensor([[-0.6501],
        [ 0.7960],
        [-0.6880],
        [ 0.6218],
        [ 1.3482],
        [-0.6769],
        [ 0.0880],
        [ 1.2534],
        [ 0.1038],
        [-0.3877],
        [ 0.7915],
        [-0.7112],
        [-0.9781],
        [ 1.0666],
        [-1.0079],
        [ 0.3450],
        [-0.8083],
        [ 0.6642],
        [ 0.8149]])), ('layers.0.bias', tensor([ 1.5289, -0.3734, -0.1898,  0.1152,  0.3149, -0.8491, -0.4626,  0.4940,
        -0.2125, -0.8917,  0.0459,  0.4814,  0.2178,  0.0404,  0.3983,  1.2739,
         1.1414,  0.1207,  0.1999])), ('layers.2.weight', tensor([[-0.7610,  0.1130, -0.2474,  0.6192,  0.3857, -0.0812,  0.0371,  0.2966,
         -0.0366,  0.0098,  0.4955, -0.1786, -0.3209,  0.4010, -0.5777, -0.3305,
         -0.8413,  0.4032,  0.0266]])), ('layers.2.bias', tensor([-0.2831]))])",0.44534105650964195,0.28128146139448895
20,20,"OrderedDict([('layers.0.weight', tensor([[-0.6525],
        [ 0.7985],
        [-0.6922],
        [ 0.6248],
        [ 1.3512],
        [-0.6770],
        [ 0.0880],
        [ 1.2550],
        [ 0.1038],
        [-0.3877],
        [ 0.7942],
        [-0.7125],
        [-0.9830],
        [ 1.0690],
        [-1.0100],
        [ 0.3340],
        [-0.8190],
        [ 0.6676],
        [ 0.8151]])), ('layers.0.bias', tensor([ 1.5356, -0.3625, -0.1736,  0.1131,  0.3131, -0.8488, -0.4626,  0.4932,
        -0.2125, -0.8917,  0.0566,  0.4872,  0.2349,  0.0501,  0.4064,  1.2857,
         1.1559,  0.1232,  0.1997])), ('layers.2.weight', tensor([[-0.7650,  0.1121, -0.2494,  0.6223,  0.3870, -0.0812,  0.0371,  0.2974,
         -0.0366,  0.0098,  0.4990, -0.1802, -0.3245,  0.4030, -0.5805, -0.3373,
         -0.8526,  0.4058,  0.0274]])), ('layers.2.bias', tensor([-0.2860]))])",0.4450503781166238,0.2812105652208023
21,21,"OrderedDict([('layers.0.weight', tensor([[-0.6548],
        [ 0.8008],
        [-0.6961],
        [ 0.6276],
        [ 1.3540],
        [-0.6772],
        [ 0.0880],
        [ 1.2566],
        [ 0.1038],
        [-0.3877],
        [ 0.7966],
        [-0.7137],
        [-0.9877],
        [ 1.0712],
        [-1.0121],
        [ 0.3235],
        [-0.8292],
        [ 0.6718],
        [ 0.8153]])), ('layers.0.bias', tensor([ 1.5419, -0.3518, -0.1582,  0.1121,  0.3115, -0.8485, -0.4626,  0.4925,
        -0.2125, -0.8917,  0.0673,  0.4927,  0.2510,  0.0598,  0.4140,  1.2968,
         1.1692,  0.1220,  0.1995])), ('layers.2.weight', tensor([[-0.7687,  0.1111, -0.2514,  0.6253,  0.3882, -0.0813,  0.0371,  0.2982,
         -0.0366,  0.0097,  0.5025, -0.1816, -0.3280,  0.4050, -0.5831, -0.3437,
         -0.8632,  0.4084,  0.0282]])), ('layers.2.bias', tensor([-0.2887]))])",0.4448015923631222,0.2811636309348311
22,22,"OrderedDict([('layers.0.weight', tensor([[-0.6570],
        [ 0.8027],
        [-0.6998],
        [ 0.6295],
        [ 1.3566],
        [-0.6773],
        [ 0.0880],
        [ 1.2579],
        [ 0.1038],
        [-0.3877],
        [ 0.7987],
        [-0.7149],
        [-0.9921],
        [ 1.0732],
        [-1.0139],
        [ 0.3136],
        [-0.8390],
        [ 0.6755],
        [ 0.8154]])), ('layers.0.bias', tensor([ 1.5477, -0.3415, -0.1438,  0.1155,  0.3102, -0.8483, -0.4626,  0.4919,
        -0.2125, -0.8917,  0.0776,  0.4978,  0.2663,  0.0692,  0.4211,  1.3074,
         1.1817,  0.1215,  0.1993])), ('layers.2.weight', tensor([[-0.7722,  0.1099, -0.2534,  0.6280,  0.3893, -0.0813,  0.0371,  0.2989,
         -0.0366,  0.0097,  0.5056, -0.1830, -0.3313,  0.4067, -0.5855, -0.3499,
         -0.8733,  0.4106,  0.0290]])), ('layers.2.bias', tensor([-0.2912]))])",0.4445857918239199,0.28111887575893585
23,23,"OrderedDict([('layers.0.weight', tensor([[-0.6590],
        [ 0.8042],
        [-0.7032],
        [ 0.6318],
        [ 1.3588],
        [-0.6774],
        [ 0.0880],
        [ 1.2591],
        [ 0.1038],
        [-0.3877],
        [ 0.8005],
        [-0.7159],
        [-0.9963],
        [ 1.0748],
        [-1.0157],
        [ 0.3043],
        [-0.8485],
        [ 0.6779],
        [ 0.8156]])), ('layers.0.bias', tensor([ 1.5533, -0.3318, -0.1301,  0.1143,  0.3089, -0.8481, -0.4626,  0.4914,
        -0.2125, -0.8917,  0.0876,  0.5028,  0.2810,  0.0783,  0.4280,  1.3175,
         1.1933,  0.1239,  0.1991])), ('layers.2.weight', tensor([[-0.7755,  0.1085, -0.2554,  0.6303,  0.3903, -0.0814,  0.0371,  0.2996,
         -0.0366,  0.0097,  0.5084, -0.1843, -0.3345,  0.4082, -0.5879, -0.3557,
         -0.8827,  0.4126,  0.0296]])), ('layers.2.bias', tensor([-0.2936]))])",0.44439509712780517,0.28111606086507285
24,24,"OrderedDict([('layers.0.weight', tensor([[-0.6608],
        [ 0.8056],
        [-0.7066],
        [ 0.6338],
        [ 1.3609],
        [-0.6775],
        [ 0.0880],
        [ 1.2602],
        [ 0.1038],
        [-0.3877],
        [ 0.8021],
        [-0.7169],
        [-1.0002],
        [ 1.0762],
        [-1.0174],
        [ 0.2954],
        [-0.8576],
        [ 0.6807],
        [ 0.8158]])), ('layers.0.bias', tensor([ 1.5585, -0.3223, -0.1162,  0.1140,  0.3078, -0.8479, -0.4626,  0.4909,
        -0.2125, -0.8917,  0.0976,  0.5075,  0.2949,  0.0873,  0.4344,  1.3271,
         1.2042,  0.1244,  0.1989])), ('layers.2.weight', tensor([[-0.7785,  0.1071, -0.2573,  0.6325,  0.3912, -0.0814,  0.0371,  0.3002,
         -0.0366,  0.0097,  0.5111, -0.1855, -0.3376,  0.4097, -0.5901, -0.3613,
         -0.8917,  0.4145,  0.0302]])), ('layers.2.bias', tensor([-0.2958]))])",0.4442277060142563,0.2811180051435561
25,25,"OrderedDict([('layers.0.weight', tensor([[-0.6626],
        [ 0.8066],
        [-0.7099],
        [ 0.6351],
        [ 1.3628],
        [-0.6776],
        [ 0.0880],
        [ 1.2612],
        [ 0.1038],
        [-0.3877],
        [ 0.8033],
        [-0.7179],
        [-1.0040],
        [ 1.0773],
        [-1.0190],
        [ 0.2870],
        [-0.8663],
        [ 0.6825],
        [ 0.8159]])), ('layers.0.bias', tensor([ 1.5634, -0.3133, -0.1002,  0.1175,  0.3068, -0.8477, -0.4626,  0.4905,
        -0.2125, -0.8917,  0.1072,  0.5120,  0.3083,  0.0961,  0.4406,  1.3363,
         1.2144,  0.1270,  0.1987])), ('layers.2.weight', tensor([[-0.7814,  0.1055, -0.2592,  0.6344,  0.3920, -0.0814,  0.0371,  0.3007,
         -0.0366,  0.0097,  0.5134, -0.1866, -0.3406,  0.4109, -0.5922, -0.3667,
         -0.9003,  0.4162,  0.0308]])), ('layers.2.bias', tensor([-0.2979]))])",0.44407815313509974,0.28111055761692116
26,26,"OrderedDict([('layers.0.weight', tensor([[-0.6642],
        [ 0.8074],
        [-0.7131],
        [ 0.6367],
        [ 1.3644],
        [-0.6777],
        [ 0.0880],
        [ 1.2621],
        [ 0.1038],
        [-0.3877],
        [ 0.8042],
        [-0.7188],
        [-1.0076],
        [ 1.0782],
        [-1.0205],
        [ 0.2791],
        [-0.8748],
        [ 0.6849],
        [ 0.8160]])), ('layers.0.bias', tensor([ 1.5681, -0.3046, -0.0843,  0.1169,  0.3060, -0.8475, -0.4626,  0.4901,
        -0.2125, -0.8917,  0.1166,  0.5163,  0.3212,  0.1047,  0.4465,  1.3451,
         1.2239,  0.1266,  0.1986])), ('layers.2.weight', tensor([[-0.7842,  0.1037, -0.2612,  0.6361,  0.3927, -0.0815,  0.0371,  0.3012,
         -0.0366,  0.0097,  0.5154, -0.1877, -0.3435,  0.4120, -0.5942, -0.3718,
         -0.9084,  0.4177,  0.0313]])), ('layers.2.bias', tensor([-0.2999]))])",0.44394269019830973,0.2811501095517694
27,27,"OrderedDict([('layers.0.weight', tensor([[-0.6658],
        [ 0.8081],
        [-0.7162],
        [ 0.6384],
        [ 1.3660],
        [-0.6778],
        [ 0.0880],
        [ 1.2630],
        [ 0.1038],
        [-0.3877],
        [ 0.8052],
        [-0.7196],
        [-1.0110],
        [ 1.0791],
        [-1.0219],
        [ 0.2714],
        [-0.8831],
        [ 0.6874],
        [ 0.8162]])), ('layers.0.bias', tensor([ 1.5724, -0.2960, -0.0690,  0.1158,  0.3054, -0.8474, -0.4626,  0.4899,
        -0.2125, -0.8917,  0.1262,  0.5204,  0.3336,  0.1134,  0.4521,  1.3534,
         1.2327,  0.1259,  0.1984])), ('layers.2.weight', tensor([[-0.7868,  0.1019, -0.2631,  0.6378,  0.3935, -0.0815,  0.0371,  0.3017,
         -0.0366,  0.0097,  0.5176, -0.1888, -0.3463,  0.4131, -0.5962, -0.3766,
         -0.9161,  0.4191,  0.0317]])), ('layers.2.bias', tensor([-0.3017]))])",0.44382379785723364,0.2811834504711442
28,28,"OrderedDict([('layers.0.weight', tensor([[-0.6672],
        [ 0.8087],
        [-0.7192],
        [ 0.6398],
        [ 1.3675],
        [-0.6779],
        [ 0.0880],
        [ 1.2638],
        [ 0.1038],
        [-0.3877],
        [ 0.8060],
        [-0.7205],
        [-1.0142],
        [ 1.0799],
        [-1.0233],
        [ 0.2641],
        [-0.8912],
        [ 0.6894],
        [ 0.8163]])), ('layers.0.bias', tensor([ 1.5766, -0.2877, -0.0542,  0.1163,  0.3049, -0.8472, -0.4626,  0.4897,
        -0.2125, -0.8917,  0.1357,  0.5244,  0.3455,  0.1221,  0.4575,  1.3613,
         1.2409,  0.1262,  0.1984])), ('layers.2.weight', tensor([[-0.7892,  0.1001, -0.2651,  0.6394,  0.3942, -0.0815,  0.0371,  0.3022,
         -0.0366,  0.0097,  0.5197, -0.1898, -0.3490,  0.4142, -0.5980, -0.3812,
         -0.9235,  0.4205,  0.0322]])), ('layers.2.bias', tensor([-0.3034]))])",0.44371733129567775,0.28120108726919474
29,29,"OrderedDict([('layers.0.weight', tensor([[-0.6686],
        [ 0.8089],
        [-0.7220],
        [ 0.6404],
        [ 1.3687],
        [-0.6780],
        [ 0.0880],
        [ 1.2644],
        [ 0.1038],
        [-0.3877],
        [ 0.8063],
        [-0.7212],
        [-1.0174],
        [ 1.0802],
        [-1.0246],
        [ 0.2573],
        [-0.8990],
        [ 0.6903],
        [ 0.8163]])), ('layers.0.bias', tensor([ 1.5805, -0.2799, -0.0399,  0.1199,  0.3044, -0.8471, -0.4626,  0.4895,
        -0.2125, -0.8917,  0.1447,  0.5282,  0.3569,  0.1303,  0.4627,  1.3690,
         1.2487,  0.1288,  0.1983])), ('layers.2.weight', tensor([[-0.7915,  0.0980, -0.2670,  0.6406,  0.3947, -0.0815,  0.0371,  0.3026,
         -0.0366,  0.0097,  0.5213, -0.1908, -0.3516,  0.4149, -0.5998, -0.3857,
         -0.9305,  0.4216,  0.0326]])), ('layers.2.bias', tensor([-0.3051]))])",0.44362153503267715,0.2812167081768469
30,30,"OrderedDict([('layers.0.weight', tensor([[-0.6699],
        [ 0.8089],
        [-0.7247],
        [ 0.6414],
        [ 1.3696],
        [-0.6780],
        [ 0.0880],
        [ 1.2649],
        [ 0.1038],
        [-0.3877],
        [ 0.8067],
        [-0.7220],
        [-1.0204],
        [ 1.0804],
        [-1.0258],
        [ 0.2508],
        [-0.9066],
        [ 0.6917],
        [ 0.8164]])), ('layers.0.bias', tensor([ 1.5843, -0.2725, -0.0261,  0.1201,  0.3040, -0.8469, -0.4626,  0.4893,
        -0.2125, -0.8917,  0.1517,  0.5319,  0.3680,  0.1384,  0.4677,  1.3764,
         1.2561,  0.1289,  0.1982])), ('layers.2.weight', tensor([[-0.7937,  0.0957, -0.2690,  0.6417,  0.3951, -0.0816,  0.0371,  0.3029,
         -0.0366,  0.0097,  0.5227, -0.1917, -0.3541,  0.4156, -0.6015, -0.3900,
         -0.9372,  0.4225,  0.0329]])), ('layers.2.bias', tensor([-0.3067]))])",0.44353497396223246,0.2812807822629111
31,31,"OrderedDict([('layers.0.weight', tensor([[-0.6712],
        [ 0.8091],
        [-0.7273],
        [ 0.6426],
        [ 1.3708],
        [-0.6781],
        [ 0.0880],
        [ 1.2655],
        [ 0.1038],
        [-0.3877],
        [ 0.8082],
        [-0.7227],
        [-1.0233],
        [ 1.0808],
        [-1.0270],
        [ 0.2444],
        [-0.9142],
        [ 0.6934],
        [ 0.8165]])), ('layers.0.bias', tensor([ 1.5879, -0.2649, -0.0127,  0.1201,  0.3040, -0.8468, -0.4626,  0.4892,
        -0.2125, -0.8917,  0.1530,  0.5355,  0.3788,  0.1469,  0.4726,  1.3833,
         1.2627,  0.1289,  0.1981])), ('layers.2.weight', tensor([[-0.7958,  0.0937, -0.2710,  0.6429,  0.3957, -0.0816,  0.0371,  0.3034,
         -0.0366,  0.0097,  0.5244, -0.1926, -0.3565,  0.4165, -0.6032, -0.3940,
         -0.9436,  0.4236,  0.0333]])), ('layers.2.bias', tensor([-0.3082]))])",0.44345890351493533,0.28134524686999307
32,32,"OrderedDict([('layers.0.weight', tensor([[-0.6724],
        [ 0.8093],
        [-0.7298],
        [ 0.6438],
        [ 1.3719],
        [-0.6782],
        [ 0.0880],
        [ 1.2661],
        [ 0.1038],
        [-0.3877],
        [ 0.8099],
        [-0.7234],
        [-1.0260],
        [ 1.0812],
        [-1.0282],
        [ 0.2382],
        [-0.9217],
        [ 0.6951],
        [ 0.8166]])), ('layers.0.bias', tensor([ 1.5912e+00, -2.5723e-01,  2.6917e-04,  1.2038e-01,  3.0409e-01,
        -8.4671e-01, -4.6258e-01,  4.8930e-01, -2.1246e-01, -8.9175e-01,
         1.5358e-01,  5.3893e-01,  3.8922e-01,  1.5564e-01,  4.7721e-01,
         1.3899e+00,  1.2688e+00,  1.2910e-01,  1.9811e-01])), ('layers.2.weight', tensor([[-0.7978,  0.0917, -0.2729,  0.6443,  0.3963, -0.0816,  0.0371,  0.3038,
         -0.0366,  0.0097,  0.5263, -0.1935, -0.3589,  0.4174, -0.6048, -0.3978,
         -0.9498,  0.4247,  0.0337]])), ('layers.2.bias', tensor([-0.3095]))])",0.44338999028938514,0.2813930517664024
33,33,"OrderedDict([('layers.0.weight', tensor([[-0.6735],
        [ 0.8093],
        [-0.7323],
        [ 0.6449],
        [ 1.3729],
        [-0.6782],
        [ 0.0880],
        [ 1.2667],
        [ 0.1038],
        [-0.3877],
        [ 0.8113],
        [-0.7241],
        [-1.0287],
        [ 1.0815],
        [-1.0293],
        [ 0.2322],
        [-0.9290],
        [ 0.6966],
        [ 0.8166]])), ('layers.0.bias', tensor([ 1.5943, -0.2499,  0.0129,  0.1208,  0.3043, -0.8466, -0.4626,  0.4894,
        -0.2125, -0.8917,  0.1541,  0.5423,  0.3993,  0.1642,  0.4817,  1.3962,
         1.2745,  0.1294,  0.1981])), ('layers.2.weight', tensor([[-0.7996,  0.0896, -0.2749,  0.6454,  0.3969, -0.0816,  0.0371,  0.3043,
         -0.0366,  0.0097,  0.5279, -0.1944, -0.3613,  0.4183, -0.6063, -0.4014,
         -0.9557,  0.4258,  0.0341]])), ('layers.2.bias', tensor([-0.3109]))])",0.4433263037703,0.281446336429993
34,34,"OrderedDict([('layers.0.weight', tensor([[-0.6746],
        [ 0.8091],
        [-0.7346],
        [ 0.6458],
        [ 1.3738],
        [-0.6783],
        [ 0.0880],
        [ 1.2671],
        [ 0.1038],
        [-0.3877],
        [ 0.8126],
        [-0.7247],
        [-1.0313],
        [ 1.0815],
        [-1.0303],
        [ 0.2265],
        [-0.9362],
        [ 0.6979],
        [ 0.8167]])), ('layers.0.bias', tensor([ 1.5974, -0.2429,  0.0251,  0.1212,  0.3046, -0.8465, -0.4626,  0.4895,
        -0.2125, -0.8918,  0.1547,  0.5455,  0.4092,  0.1727,  0.4861,  1.4022,
         1.2798,  0.1297,  0.1981])), ('layers.2.weight', tensor([[-0.8014,  0.0874, -0.2769,  0.6465,  0.3974, -0.0816,  0.0371,  0.3047,
         -0.0366,  0.0097,  0.5293, -0.1952, -0.3635,  0.4191, -0.6078, -0.4049,
         -0.9613,  0.4267,  0.0344]])), ('layers.2.bias', tensor([-0.3121]))])",0.4432682487065904,0.2815030577912694
35,35,"OrderedDict([('layers.0.weight', tensor([[-0.6757],
        [ 0.8089],
        [-0.7369],
        [ 0.6466],
        [ 1.3745],
        [-0.6783],
        [ 0.0880],
        [ 1.2675],
        [ 0.1038],
        [-0.3877],
        [ 0.8136],
        [-0.7254],
        [-1.0339],
        [ 1.0815],
        [-1.0314],
        [ 0.2211],
        [-0.9433],
        [ 0.6990],
        [ 0.8167]])), ('layers.0.bias', tensor([ 1.6003, -0.2361,  0.0371,  0.1219,  0.3049, -0.8464, -0.4626,  0.4897,
        -0.2125, -0.8918,  0.1555,  0.5487,  0.4188,  0.1811,  0.4903,  1.4081,
         1.2848,  0.1302,  0.1981])), ('layers.2.weight', tensor([[-0.8031,  0.0851, -0.2788,  0.6474,  0.3978, -0.0816,  0.0371,  0.3051,
         -0.0366,  0.0097,  0.5306, -0.1960, -0.3658,  0.4198, -0.6092, -0.4082,
         -0.9668,  0.4275,  0.0347]])), ('layers.2.bias', tensor([-0.3133]))])",0.4432152576628141,0.281557374438853
36,36,"OrderedDict([('layers.0.weight', tensor([[-0.6767],
        [ 0.8085],
        [-0.7391],
        [ 0.6473],
        [ 1.3751],
        [-0.6784],
        [ 0.0880],
        [ 1.2679],
        [ 0.1038],
        [-0.3877],
        [ 0.8145],
        [-0.7260],
        [-1.0363],
        [ 1.0813],
        [-1.0323],
        [ 0.2159],
        [-0.9503],
        [ 0.7000],
        [ 0.8168]])), ('layers.0.bias', tensor([ 1.6030, -0.2296,  0.0487,  0.1227,  0.3053, -0.8463, -0.4626,  0.4898,
        -0.2125, -0.8918,  0.1565,  0.5518,  0.4281,  0.1894,  0.4944,  1.4136,
         1.2894,  0.1307,  0.1982])), ('layers.2.weight', tensor([[-0.8048,  0.0828, -0.2808,  0.6482,  0.3983, -0.0816,  0.0371,  0.3054,
         -0.0366,  0.0097,  0.5316, -0.1967, -0.3679,  0.4205, -0.6106, -0.4115,
         -0.9720,  0.4282,  0.0350]])), ('layers.2.bias', tensor([-0.3145]))])",0.4431664552888833,0.2816095036114954
37,37,"OrderedDict([('layers.0.weight', tensor([[-0.6777],
        [ 0.8080],
        [-0.7413],
        [ 0.6478],
        [ 1.3757],
        [-0.6784],
        [ 0.0880],
        [ 1.2682],
        [ 0.1038],
        [-0.3877],
        [ 0.8153],
        [-0.7266],
        [-1.0387],
        [ 1.0810],
        [-1.0333],
        [ 0.2109],
        [-0.9572],
        [ 0.7007],
        [ 0.8168]])), ('layers.0.bias', tensor([ 1.6057, -0.2233,  0.0601,  0.1236,  0.3058, -0.8462, -0.4626,  0.4900,
        -0.2125, -0.8918,  0.1577,  0.5548,  0.4372,  0.1977,  0.4984,  1.4190,
         1.2937,  0.1314,  0.1982])), ('layers.2.weight', tensor([[-0.8063,  0.0803, -0.2827,  0.6489,  0.3986, -0.0817,  0.0371,  0.3058,
         -0.0366,  0.0096,  0.5325, -0.1975, -0.3701,  0.4211, -0.6120, -0.4146,
         -0.9771,  0.4288,  0.0353]])), ('layers.2.bias', tensor([-0.3155]))])",0.4431214049574919,0.2816605246635542
38,38,"OrderedDict([('layers.0.weight', tensor([[-0.6786],
        [ 0.8074],
        [-0.7434],
        [ 0.6482],
        [ 1.3761],
        [-0.6785],
        [ 0.0880],
        [ 1.2684],
        [ 0.1038],
        [-0.3877],
        [ 0.8158],
        [-0.7271],
        [-1.0410],
        [ 1.0807],
        [-1.0342],
        [ 0.2061],
        [-0.9640],
        [ 0.7013],
        [ 0.8168]])), ('layers.0.bias', tensor([ 1.6082, -0.2173,  0.0713,  0.1246,  0.3064, -0.8462, -0.4626,  0.4903,
        -0.2125, -0.8918,  0.1590,  0.5577,  0.4462,  0.2046,  0.5023,  1.4242,
         1.2976,  0.1321,  0.1983])), ('layers.2.weight', tensor([[-0.8078,  0.0778, -0.2847,  0.6494,  0.3989, -0.0817,  0.0371,  0.3061,
         -0.0366,  0.0096,  0.5333, -0.1982, -0.3722,  0.4216, -0.6133, -0.4176,
         -0.9819,  0.4293,  0.0355]])), ('layers.2.bias', tensor([-0.3166]))])",0.4430806288301634,0.28171640992707886
39,39,"OrderedDict([('layers.0.weight', tensor([[-0.6795],
        [ 0.8068],
        [-0.7455],
        [ 0.6487],
        [ 1.3765],
        [-0.6785],
        [ 0.0880],
        [ 1.2686],
        [ 0.1038],
        [-0.3877],
        [ 0.8163],
        [-0.7277],
        [-1.0433],
        [ 1.0811],
        [-1.0351],
        [ 0.2014],
        [-0.9707],
        [ 0.7019],
        [ 0.8168]])), ('layers.0.bias', tensor([ 1.6106, -0.2114,  0.0822,  0.1259,  0.3070, -0.8461, -0.4626,  0.4906,
        -0.2125, -0.8918,  0.1606,  0.5605,  0.4549,  0.2073,  0.5061,  1.4292,
         1.3012,  0.1331,  0.1983])), ('layers.2.weight', tensor([[-0.8093,  0.0753, -0.2866,  0.6500,  0.3993, -0.0817,  0.0371,  0.3064,
         -0.0366,  0.0096,  0.5341, -0.1989, -0.3742,  0.4222, -0.6146, -0.4204,
         -0.9866,  0.4298,  0.0357]])), ('layers.2.bias', tensor([-0.3176]))])",0.4430430303909816,0.28178773322336687
40,40,"OrderedDict([('layers.0.weight', tensor([[-0.6803],
        [ 0.8061],
        [-0.7475],
        [ 0.6490],
        [ 1.3769],
        [-0.6785],
        [ 0.0880],
        [ 1.2688],
        [ 0.1038],
        [-0.3877],
        [ 0.8168],
        [-0.7282],
        [-1.0455],
        [ 1.0815],
        [-1.0360],
        [ 0.1969],
        [-0.9774],
        [ 0.7024],
        [ 0.8168]])), ('layers.0.bias', tensor([ 1.6129, -0.2057,  0.0929,  0.1273,  0.3078, -0.8460, -0.4626,  0.4909,
        -0.2125, -0.8918,  0.1625,  0.5633,  0.4635,  0.2093,  0.5099,  1.4339,
         1.3045,  0.1341,  0.1984])), ('layers.2.weight', tensor([[-0.8106,  0.0728, -0.2885,  0.6506,  0.3996, -0.0817,  0.0371,  0.3067,
         -0.0366,  0.0096,  0.5348, -0.1996, -0.3762,  0.4227, -0.6159, -0.4232,
         -0.9912,  0.4304,  0.0360]])), ('layers.2.bias', tensor([-0.3185]))])",0.4430083853735899,0.28185032775218133
41,41,"OrderedDict([('layers.0.weight', tensor([[-0.6811],
        [ 0.8054],
        [-0.7494],
        [ 0.6493],
        [ 1.3771],
        [-0.6786],
        [ 0.0880],
        [ 1.2689],
        [ 0.1038],
        [-0.3877],
        [ 0.8171],
        [-0.7287],
        [-1.0476],
        [ 1.0818],
        [-1.0369],
        [ 0.1925],
        [-0.9841],
        [ 0.7027],
        [ 0.8168]])), ('layers.0.bias', tensor([ 1.6151, -0.2003,  0.1034,  0.1288,  0.3087, -0.8459, -0.4626,  0.4913,
        -0.2125, -0.8918,  0.1645,  0.5661,  0.4718,  0.2113,  0.5135,  1.4384,
         1.3075,  0.1353,  0.1985])), ('layers.2.weight', tensor([[-0.8119,  0.0703, -0.2905,  0.6511,  0.3999, -0.0817,  0.0371,  0.3070,
         -0.0366,  0.0096,  0.5354, -0.2003, -0.3782,  0.4232, -0.6172, -0.4258,
         -0.9955,  0.4308,  0.0362]])), ('layers.2.bias', tensor([-0.3194]))])",0.4429756926139817,0.28191217420098835
42,42,"OrderedDict([('layers.0.weight', tensor([[-0.6819],
        [ 0.8046],
        [-0.7513],
        [ 0.6495],
        [ 1.3773],
        [-0.6786],
        [ 0.0880],
        [ 1.2690],
        [ 0.1038],
        [-0.3877],
        [ 0.8173],
        [-0.7293],
        [-1.0497],
        [ 1.0820],
        [-1.0377],
        [ 0.1884],
        [-0.9907],
        [ 0.7030],
        [ 0.8168]])), ('layers.0.bias', tensor([ 1.6173, -0.1951,  0.1138,  0.1304,  0.3095, -0.8459, -0.4626,  0.4917,
        -0.2125, -0.8918,  0.1666,  0.5687,  0.4801,  0.2132,  0.5170,  1.4428,
         1.3102,  0.1365,  0.1986])), ('layers.2.weight', tensor([[-0.8132,  0.0677, -0.2924,  0.6515,  0.4001, -0.0817,  0.0371,  0.3073,
         -0.0366,  0.0096,  0.5359, -0.2009, -0.3801,  0.4236, -0.6184, -0.4283,
         -0.9998,  0.4311,  0.0364]])), ('layers.2.bias', tensor([-0.3203]))])",0.4429451643372886,0.28197306415143736
43,43,"OrderedDict([('layers.0.weight', tensor([[-0.6827],
        [ 0.8037],
        [-0.7532],
        [ 0.6496],
        [ 1.3774],
        [-0.6786],
        [ 0.0880],
        [ 1.2691],
        [ 0.1038],
        [-0.3877],
        [ 0.8174],
        [-0.7298],
        [-1.0518],
        [ 1.0821],
        [-1.0385],
        [ 0.1844],
        [-0.9972],
        [ 0.7030],
        [ 0.8168]])), ('layers.0.bias', tensor([ 1.6193, -0.1901,  0.1239,  0.1322,  0.3105, -0.8458, -0.4626,  0.4921,
        -0.2125, -0.8918,  0.1688,  0.5714,  0.4882,  0.2153,  0.5205,  1.4470,
         1.3127,  0.1378,  0.1987])), ('layers.2.weight', tensor([[-0.8144,  0.0650, -0.2943,  0.6518,  0.4003, -0.0817,  0.0371,  0.3075,
         -0.0366,  0.0096,  0.5363, -0.2016, -0.3821,  0.4239, -0.6196, -0.4308,
         -1.0039,  0.4314,  0.0365]])), ('layers.2.bias', tensor([-0.3211]))])",0.4429166028586527,0.2820308123317469
44,44,"OrderedDict([('layers.0.weight', tensor([[-0.6834],
        [ 0.8027],
        [-0.7550],
        [ 0.6496],
        [ 1.3774],
        [-0.6787],
        [ 0.0880],
        [ 1.2691],
        [ 0.1038],
        [-0.3877],
        [ 0.8173],
        [-0.7302],
        [-1.0538],
        [ 1.0820],
        [-1.0393],
        [ 0.1805],
        [-1.0037],
        [ 0.7030],
        [ 0.8167]])), ('layers.0.bias', tensor([ 1.6213, -0.1854,  0.1339,  0.1339,  0.3115, -0.8457, -0.4626,  0.4925,
        -0.2125, -0.8918,  0.1711,  0.5739,  0.4961,  0.2175,  0.5239,  1.4511,
         1.3149,  0.1391,  0.1989])), ('layers.2.weight', tensor([[-0.8156,  0.0622, -0.2962,  0.6520,  0.4005, -0.0817,  0.0371,  0.3078,
         -0.0366,  0.0096,  0.5366, -0.2022, -0.3839,  0.4241, -0.6207, -0.4331,
         -1.0079,  0.4316,  0.0367]])), ('layers.2.bias', tensor([-0.3219]))])",0.44288971595621357,0.2820858253883974
45,45,"OrderedDict([('layers.0.weight', tensor([[-0.6841],
        [ 0.8017],
        [-0.7568],
        [ 0.6495],
        [ 1.3774],
        [-0.6787],
        [ 0.0880],
        [ 1.2691],
        [ 0.1038],
        [-0.3877],
        [ 0.8171],
        [-0.7307],
        [-1.0557],
        [ 1.0819],
        [-1.0400],
        [ 0.1768],
        [-1.0101],
        [ 0.7028],
        [ 0.8167]])), ('layers.0.bias', tensor([ 1.6231, -0.1810,  0.1438,  0.1358,  0.3125, -0.8457, -0.4626,  0.4930,
        -0.2125, -0.8918,  0.1734,  0.5765,  0.5040,  0.2198,  0.5273,  1.4550,
         1.3169,  0.1405,  0.1990])), ('layers.2.weight', tensor([[-0.8167,  0.0594, -0.2982,  0.6521,  0.4006, -0.0817,  0.0371,  0.3080,
         -0.0366,  0.0096,  0.5368, -0.2028, -0.3858,  0.4243, -0.6219, -0.4354,
         -1.0118,  0.4317,  0.0368]])), ('layers.2.bias', tensor([-0.3227]))])",0.44286434187476215,0.2821384560733956
46,46,"OrderedDict([('layers.0.weight', tensor([[-0.6847],
        [ 0.8006],
        [-0.7586],
        [ 0.6493],
        [ 1.3772],
        [-0.6787],
        [ 0.0880],
        [ 1.2690],
        [ 0.1038],
        [-0.3877],
        [ 0.8168],
        [-0.7312],
        [-1.0576],
        [ 1.0816],
        [-1.0408],
        [ 0.1733],
        [-1.0165],
        [ 0.7025],
        [ 0.8166]])), ('layers.0.bias', tensor([ 1.6250, -0.1768,  0.1535,  0.1377,  0.3136, -0.8456, -0.4626,  0.4935,
        -0.2125, -0.8918,  0.1759,  0.5790,  0.5117,  0.2221,  0.5306,  1.4588,
         1.3187,  0.1420,  0.1991])), ('layers.2.weight', tensor([[-0.8177,  0.0565, -0.3001,  0.6522,  0.4008, -0.0817,  0.0371,  0.3082,
         -0.0366,  0.0096,  0.5369, -0.2035, -0.3876,  0.4244, -0.6230, -0.4376,
         -1.0155,  0.4318,  0.0369]])), ('layers.2.bias', tensor([-0.3234]))])",0.44284035249535614,0.2821884940523887
47,47,"OrderedDict([('layers.0.weight', tensor([[-0.6854],
        [ 0.7995],
        [-0.7604],
        [ 0.6491],
        [ 1.3770],
        [-0.6788],
        [ 0.0880],
        [ 1.2689],
        [ 0.1038],
        [-0.3877],
        [ 0.8163],
        [-0.7316],
        [-1.0595],
        [ 1.0813],
        [-1.0415],
        [ 0.1699],
        [-1.0229],
        [ 0.7022],
        [ 0.8166]])), ('layers.0.bias', tensor([ 1.6267, -0.1728,  0.1632,  0.1398,  0.3147, -0.8456, -0.4626,  0.4940,
        -0.2125, -0.8918,  0.1784,  0.5814,  0.5193,  0.2246,  0.5338,  1.4624,
         1.3202,  0.1435,  0.1993])), ('layers.2.weight', tensor([[-0.8188,  0.0536, -0.3020,  0.6522,  0.4008, -0.0817,  0.0371,  0.3084,
         -0.0366,  0.0096,  0.5369, -0.2041, -0.3895,  0.4244, -0.6241, -0.4397,
         -1.0192,  0.4318,  0.0370]])), ('layers.2.bias', tensor([-0.3241]))])",0.4428176006767899,0.28224442261271177
48,48,"OrderedDict([('layers.0.weight', tensor([[-0.6860],
        [ 0.7984],
        [-0.7621],
        [ 0.6487],
        [ 1.3767],
        [-0.6788],
        [ 0.0880],
        [ 1.2687],
        [ 0.1038],
        [-0.3877],
        [ 0.8158],
        [-0.7321],
        [-1.0614],
        [ 1.0808],
        [-1.0423],
        [ 0.1666],
        [-1.0292],
        [ 0.7017],
        [ 0.8165]])), ('layers.0.bias', tensor([ 1.6284, -0.1691,  0.1727,  0.1418,  0.3159, -0.8455, -0.4626,  0.4945,
        -0.2125, -0.8918,  0.1811,  0.5838,  0.5268,  0.2271,  0.5370,  1.4659,
         1.3215,  0.1451,  0.1994])), ('layers.2.weight', tensor([[-0.8197,  0.0506, -0.3039,  0.6521,  0.4009, -0.0817,  0.0371,  0.3085,
         -0.0366,  0.0096,  0.5368, -0.2046, -0.3912,  0.4244, -0.6252, -0.4417,
         -1.0227,  0.4317,  0.0370]])), ('layers.2.bias', tensor([-0.3248]))])",0.4427959736591826,0.282302166572966
49,49,"OrderedDict([('layers.0.weight', tensor([[-0.6866],
        [ 0.7972],
        [-0.7637],
        [ 0.6483],
        [ 1.3764],
        [-0.6788],
        [ 0.0880],
        [ 1.2685],
        [ 0.1038],
        [-0.3877],
        [ 0.8152],
        [-0.7325],
        [-1.0632],
        [ 1.0802],
        [-1.0430],
        [ 0.1634],
        [-1.0355],
        [ 0.7010],
        [ 0.8164]])), ('layers.0.bias', tensor([ 1.6300, -0.1657,  0.1820,  0.1440,  0.3171, -0.8455, -0.4626,  0.4950,
        -0.2125, -0.8918,  0.1837,  0.5862,  0.5342,  0.2296,  0.5401,  1.4693,
         1.3226,  0.1467,  0.1996])), ('layers.2.weight', tensor([[-0.8207,  0.0476, -0.3058,  0.6520,  0.4009, -0.0817,  0.0371,  0.3087,
         -0.0366,  0.0096,  0.5366, -0.2052, -0.3930,  0.4243, -0.6262, -0.4437,
         -1.0261,  0.4316,  0.0371]])), ('layers.2.bias', tensor([-0.3255]))])",0.4427753532693411,0.28235741816558096
50,50,"OrderedDict([('layers.0.weight', tensor([[-0.6871],
        [ 0.7960],
        [-0.7654],
        [ 0.6478],
        [ 1.3759],
        [-0.6788],
        [ 0.0880],
        [ 1.2682],
        [ 0.1038],
        [-0.3877],
        [ 0.8144],
        [-0.7330],
        [-1.0650],
        [ 1.0796],
        [-1.0436],
        [ 0.1604],
        [-1.0418],
        [ 0.7003],
        [ 0.8163]])), ('layers.0.bias', tensor([ 1.6315, -0.1625,  0.1913,  0.1462,  0.3183, -0.8454, -0.4626,  0.4956,
        -0.2125, -0.8918,  0.1865,  0.5886,  0.5415,  0.2322,  0.5432,  1.4726,
         1.3235,  0.1484,  0.1997])), ('layers.2.weight', tensor([[-0.8216,  0.0445, -0.3077,  0.6518,  0.4009, -0.0818,  0.0371,  0.3088,
         -0.0366,  0.0096,  0.5363, -0.2058, -0.3948,  0.4242, -0.6273, -0.4456,
         -1.0295,  0.4314,  0.0371]])), ('layers.2.bias', tensor([-0.3261]))])",0.44275563121385253,0.282410179876994
51,51,"OrderedDict([('layers.0.weight', tensor([[-0.6877],
        [ 0.7947],
        [-0.7670],
        [ 0.6473],
        [ 1.3754],
        [-0.6789],
        [ 0.0880],
        [ 1.2679],
        [ 0.1038],
        [-0.3877],
        [ 0.8136],
        [-0.7334],
        [-1.0668],
        [ 1.0788],
        [-1.0443],
        [ 0.1575],
        [-1.0481],
        [ 0.6995],
        [ 0.8162]])), ('layers.0.bias', tensor([ 1.6330, -0.1596,  0.2005,  0.1484,  0.3196, -0.8454, -0.4626,  0.4961,
        -0.2125, -0.8918,  0.1893,  0.5909,  0.5487,  0.2349,  0.5462,  1.4757,
         1.3242,  0.1501,  0.1999])), ('layers.2.weight', tensor([[-0.8225,  0.0414, -0.3096,  0.6516,  0.4008, -0.0818,  0.0371,  0.3089,
         -0.0366,  0.0096,  0.5360, -0.2064, -0.3965,  0.4240, -0.6283, -0.4474,
         -1.0327,  0.4312,  0.0371]])), ('layers.2.bias', tensor([-0.3267]))])",0.4427367420440229,0.28245823756830457
52,52,"OrderedDict([('layers.0.weight', tensor([[-0.6882],
        [ 0.7935],
        [-0.7686],
        [ 0.6466],
        [ 1.3749],
        [-0.6789],
        [ 0.0880],
        [ 1.2676],
        [ 0.1038],
        [-0.3877],
        [ 0.8127],
        [-0.7338],
        [-1.0685],
        [ 1.0780],
        [-1.0450],
        [ 0.1548],
        [-1.0544],
        [ 0.6986],
        [ 0.8161]])), ('layers.0.bias', tensor([ 1.6345, -0.1570,  0.2096,  0.1507,  0.3209, -0.8453, -0.4626,  0.4967,
        -0.2125, -0.8918,  0.1921,  0.5932,  0.5558,  0.2376,  0.5492,  1.4787,
         1.3247,  0.1519,  0.2001])), ('layers.2.weight', tensor([[-0.8233,  0.0382, -0.3115,  0.6513,  0.4008, -0.0818,  0.0371,  0.3089,
         -0.0366,  0.0096,  0.5356, -0.2069, -0.3982,  0.4237, -0.6293, -0.4492,
         -1.0359,  0.4309,  0.0371]])), ('layers.2.bias', tensor([-0.3273]))])",0.4427186140945802,0.2825014984079947
53,53,"OrderedDict([('layers.0.weight', tensor([[-0.6887],
        [ 0.7922],
        [-0.7702],
        [ 0.6459],
        [ 1.3742],
        [-0.6789],
        [ 0.0880],
        [ 1.2672],
        [ 0.1038],
        [-0.3877],
        [ 0.8116],
        [-0.7342],
        [-1.0702],
        [ 1.0771],
        [-1.0456],
        [ 0.1521],
        [-1.0606],
        [ 0.6976],
        [ 0.8160]])), ('layers.0.bias', tensor([ 1.6358, -0.1546,  0.2186,  0.1531,  0.3223, -0.8453, -0.4626,  0.4973,
        -0.2125, -0.8918,  0.1950,  0.5954,  0.5629,  0.2404,  0.5522,  1.4816,
         1.3250,  0.1537,  0.2003])), ('layers.2.weight', tensor([[-0.8241,  0.0350, -0.3135,  0.6509,  0.4007, -0.0818,  0.0371,  0.3090,
         -0.0366,  0.0096,  0.5352, -0.2075, -0.3999,  0.4234, -0.6303, -0.4509,
         -1.0390,  0.4306,  0.0370]])), ('layers.2.bias', tensor([-0.3279]))])",0.4427011336044719,0.28254224694974256
54,54,"OrderedDict([('layers.0.weight', tensor([[-0.6891],
        [ 0.7910],
        [-0.7718],
        [ 0.6452],
        [ 1.3736],
        [-0.6789],
        [ 0.0880],
        [ 1.2668],
        [ 0.1038],
        [-0.3877],
        [ 0.8105],
        [-0.7346],
        [-1.0719],
        [ 1.0761],
        [-1.0463],
        [ 0.1496],
        [-1.0669],
        [ 0.6965],
        [ 0.8158]])), ('layers.0.bias', tensor([ 1.6372, -0.1526,  0.2276,  0.1555,  0.3237, -0.8452, -0.4626,  0.4980,
        -0.2125, -0.8918,  0.1980,  0.5976,  0.5699,  0.2433,  0.5551,  1.4844,
         1.3252,  0.1556,  0.2004])), ('layers.2.weight', tensor([[-0.8249,  0.0317, -0.3154,  0.6505,  0.4006, -0.0818,  0.0371,  0.3090,
         -0.0366,  0.0096,  0.5347, -0.2080, -0.4016,  0.4231, -0.6313, -0.4525,
         -1.0420,  0.4302,  0.0370]])), ('layers.2.bias', tensor([-0.3284]))])",0.4426842721605984,0.28258051982459925
55,55,"OrderedDict([('layers.0.weight', tensor([[-0.6896],
        [ 0.7897],
        [-0.7734],
        [ 0.6443],
        [ 1.3728],
        [-0.6789],
        [ 0.0880],
        [ 1.2664],
        [ 0.1038],
        [-0.3877],
        [ 0.8093],
        [-0.7350],
        [-1.0735],
        [ 1.0750],
        [-1.0469],
        [ 0.1472],
        [-1.0732],
        [ 0.6954],
        [ 0.8157]])), ('layers.0.bias', tensor([ 1.6385, -0.1508,  0.2365,  0.1579,  0.3251, -0.8452, -0.4626,  0.4986,
        -0.2125, -0.8918,  0.2009,  0.5998,  0.5768,  0.2461,  0.5580,  1.4871,
         1.3251,  0.1575,  0.2006])), ('layers.2.weight', tensor([[-0.8257,  0.0283, -0.3173,  0.6500,  0.4004, -0.0818,  0.0371,  0.3091,
         -0.0366,  0.0096,  0.5341, -0.2085, -0.4033,  0.4227, -0.6323, -0.4541,
         -1.0450,  0.4298,  0.0369]])), ('layers.2.bias', tensor([-0.3289]))])",0.4426679391724368,0.28261637230364917
56,56,"OrderedDict([('layers.0.weight', tensor([[-0.6900],
        [ 0.7885],
        [-0.7749],
        [ 0.6434],
        [ 1.3720],
        [-0.6790],
        [ 0.0880],
        [ 1.2659],
        [ 0.1038],
        [-0.3877],
        [ 0.8081],
        [-0.7354],
        [-1.0752],
        [ 1.0738],
        [-1.0475],
        [ 0.1449],
        [-1.0794],
        [ 0.6941],
        [ 0.8155]])), ('layers.0.bias', tensor([ 1.6397, -0.1493,  0.2453,  0.1604,  0.3266, -0.8451, -0.4626,  0.4993,
        -0.2125, -0.8918,  0.2040,  0.6020,  0.5836,  0.2490,  0.5608,  1.4897,
         1.3249,  0.1594,  0.2008])), ('layers.2.weight', tensor([[-0.8264,  0.0249, -0.3192,  0.6495,  0.4002, -0.0818,  0.0371,  0.3091,
         -0.0366,  0.0096,  0.5334, -0.2091, -0.4049,  0.4223, -0.6333, -0.4556,
         -1.0479,  0.4293,  0.0368]])), ('layers.2.bias', tensor([-0.3294]))])",0.4426521192265985,0.2826498301583342
57,57,"OrderedDict([('layers.0.weight', tensor([[-0.6904],
        [ 0.7873],
        [-0.7764],
        [ 0.6425],
        [ 1.3711],
        [-0.6790],
        [ 0.0880],
        [ 1.2654],
        [ 0.1038],
        [-0.3877],
        [ 0.8067],
        [-0.7358],
        [-1.0768],
        [ 1.0726],
        [-1.0482],
        [ 0.1426],
        [-1.0857],
        [ 0.6928],
        [ 0.8154]])), ('layers.0.bias', tensor([ 1.6409, -0.1481,  0.2540,  0.1630,  0.3281, -0.8451, -0.4626,  0.5000,
        -0.2125, -0.8918,  0.2070,  0.6042,  0.5904,  0.2520,  0.5636,  1.4922,
         1.3245,  0.1614,  0.2010])), ('layers.2.weight', tensor([[-0.8271,  0.0215, -0.3211,  0.6490,  0.4000, -0.0818,  0.0371,  0.3091,
         -0.0366,  0.0096,  0.5328, -0.2096, -0.4066,  0.4218, -0.6342, -0.4571,
         -1.0507,  0.4288,  0.0367]])), ('layers.2.bias', tensor([-0.3299]))])",0.44263671481749045,0.28268094304949043
58,58,"OrderedDict([('layers.0.weight', tensor([[-0.6908],
        [ 0.7861],
        [-0.7779],
        [ 0.6414],
        [ 1.3702],
        [-0.6790],
        [ 0.0880],
        [ 1.2648],
        [ 0.1038],
        [-0.3877],
        [ 0.8053],
        [-0.7362],
        [-1.0784],
        [ 1.0712],
        [-1.0488],
        [ 0.1405],
        [-1.0919],
        [ 0.6914],
        [ 0.8152]])), ('layers.0.bias', tensor([ 1.6420, -0.1473,  0.2627,  0.1655,  0.3296, -0.8451, -0.4626,  0.5007,
        -0.2125, -0.8918,  0.2101,  0.6063,  0.5972,  0.2550,  0.5664,  1.4946,
         1.3239,  0.1634,  0.2012])), ('layers.2.weight', tensor([[-0.8277,  0.0180, -0.3230,  0.6484,  0.3998, -0.0818,  0.0371,  0.3090,
         -0.0366,  0.0096,  0.5320, -0.2101, -0.4082,  0.4213, -0.6352, -0.4585,
         -1.0534,  0.4282,  0.0366]])), ('layers.2.bias', tensor([-0.3303]))])",0.44262170533572015,0.2827097686599397
59,59,"OrderedDict([('layers.0.weight', tensor([[-0.6911],
        [ 0.7849],
        [-0.7794],
        [ 0.6403],
        [ 1.3692],
        [-0.6790],
        [ 0.0880],
        [ 1.2643],
        [ 0.1038],
        [-0.3877],
        [ 0.8038],
        [-0.7366],
        [-1.0800],
        [ 1.0698],
        [-1.0494],
        [ 0.1385],
        [-1.0982],
        [ 0.6899],
        [ 0.8150]])), ('layers.0.bias', tensor([ 1.6431, -0.1467,  0.2714,  0.1681,  0.3312, -0.8450, -0.4626,  0.5014,
        -0.2125, -0.8918,  0.2132,  0.6084,  0.6039,  0.2580,  0.5692,  1.4969,
         1.3231,  0.1654,  0.2014])), ('layers.2.weight', tensor([[-0.8284,  0.0144, -0.3249,  0.6477,  0.3995, -0.0818,  0.0371,  0.3090,
         -0.0366,  0.0096,  0.5312, -0.2106, -0.4098,  0.4207, -0.6361, -0.4598,
         -1.0561,  0.4276,  0.0364]])), ('layers.2.bias', tensor([-0.3308]))])",0.4426070687477477,0.2827363388137504
60,60,"OrderedDict([('layers.0.weight', tensor([[-0.6915],
        [ 0.7837],
        [-0.7809],
        [ 0.6392],
        [ 1.3681],
        [-0.6790],
        [ 0.0880],
        [ 1.2636],
        [ 0.1038],
        [-0.3877],
        [ 0.8022],
        [-0.7369],
        [-1.0815],
        [ 1.0684],
        [-1.0499],
        [ 0.1366],
        [-1.1045],
        [ 0.6883],
        [ 0.8149]])), ('layers.0.bias', tensor([ 1.6442, -0.1465,  0.2800,  0.1708,  0.3327, -0.8450, -0.4626,  0.5021,
        -0.2125, -0.8918,  0.2164,  0.6105,  0.6105,  0.2610,  0.5719,  1.4992,
         1.3222,  0.1675,  0.2016])), ('layers.2.weight', tensor([[-0.8290,  0.0108, -0.3269,  0.6470,  0.3992, -0.0818,  0.0371,  0.3089,
         -0.0366,  0.0096,  0.5304, -0.2111, -0.4114,  0.4201, -0.6370, -0.4612,
         -1.0587,  0.4269,  0.0363]])), ('layers.2.bias', tensor([-0.3312]))])",0.4425927466286036,0.2827607092476683
61,61,"OrderedDict([('layers.0.weight', tensor([[-0.6918],
        [ 0.7827],
        [-0.7823],
        [ 0.6380],
        [ 1.3670],
        [-0.6791],
        [ 0.0880],
        [ 1.2630],
        [ 0.1038],
        [-0.3877],
        [ 0.8005],
        [-0.7373],
        [-1.0831],
        [ 1.0669],
        [-1.0505],
        [ 0.1348],
        [-1.1108],
        [ 0.6867],
        [ 0.8147]])), ('layers.0.bias', tensor([ 1.6452, -0.1467,  0.2885,  0.1734,  0.3343, -0.8450, -0.4626,  0.5028,
        -0.2125, -0.8918,  0.2196,  0.6126,  0.6171,  0.2641,  0.5746,  1.5013,
         1.3212,  0.1696,  0.2018])), ('layers.2.weight', tensor([[-0.8296,  0.0071, -0.3288,  0.6463,  0.3989, -0.0818,  0.0371,  0.3088,
         -0.0366,  0.0096,  0.5295, -0.2116, -0.4130,  0.4195, -0.6379, -0.4624,
         -1.0613,  0.4263,  0.0361]])), ('layers.2.bias', tensor([-0.3316]))])",0.4425786822413405,0.2827829128121569
62,62,"OrderedDict([('layers.0.weight', tensor([[-0.6921],
        [ 0.7816],
        [-0.7838],
        [ 0.6367],
        [ 1.3658],
        [-0.6791],
        [ 0.0880],
        [ 1.2623],
        [ 0.1038],
        [-0.3877],
        [ 0.7988],
        [-0.7376],
        [-1.0846],
        [ 1.0653],
        [-1.0511],
        [ 0.1331],
        [-1.1171],
        [ 0.6850],
        [ 0.8145]])), ('layers.0.bias', tensor([ 1.6462, -0.1471,  0.2970,  0.1761,  0.3360, -0.8449, -0.4626,  0.5036,
        -0.2125, -0.8918,  0.2228,  0.6147,  0.6237,  0.2671,  0.5773,  1.5033,
         1.3199,  0.1717,  0.2020])), ('layers.2.weight', tensor([[-0.8301,  0.0034, -0.3307,  0.6456,  0.3986, -0.0818,  0.0371,  0.3087,
         -0.0366,  0.0096,  0.5286, -0.2121, -0.4146,  0.4188, -0.6388, -0.4636,
         -1.0638,  0.4255,  0.0359]])), ('layers.2.bias', tensor([-0.3320]))])",0.4425648696254939,0.28280300673504827
63,63,"OrderedDict([('layers.0.weight', tensor([[-0.6924],
        [ 0.7806],
        [-0.7852],
        [ 0.6354],
        [ 1.3646],
        [-0.6791],
        [ 0.0880],
        [ 1.2615],
        [ 0.1038],
        [-0.3877],
        [ 0.7970],
        [-0.7380],
        [-1.0861],
        [ 1.0636],
        [-1.0516],
        [ 0.1315],
        [-1.1234],
        [ 0.6832],
        [ 0.8143]])), ('layers.0.bias', tensor([ 1.6471, -0.1480,  0.3055,  0.1789,  0.3376, -0.8449, -0.4626,  0.5043,
        -0.2125, -0.8918,  0.2260,  0.6168,  0.6302,  0.2703,  0.5800,  1.5053,
         1.3186,  0.1739,  0.2022])), ('layers.2.weight', tensor([[-8.3065e-01, -3.9334e-04, -3.3267e-01,  6.4476e-01,  3.9824e-01,
         -8.1809e-02,  3.7133e-02,  3.0862e-01, -3.6581e-02,  9.6220e-03,
          5.2768e-01, -2.1259e-01, -4.1621e-01,  4.1805e-01, -6.3974e-01,
         -4.6480e-01, -1.0663e+00,  4.2477e-01,  3.5645e-02]])), ('layers.2.bias', tensor([-0.3324]))])",0.4425512960723912,0.2828210270885999
64,64,"OrderedDict([('layers.0.weight', tensor([[-0.6927],
        [ 0.7797],
        [-0.7866],
        [ 0.6340],
        [ 1.3633],
        [-0.6791],
        [ 0.0880],
        [ 1.2608],
        [ 0.1038],
        [-0.3877],
        [ 0.7952],
        [-0.7384],
        [-1.0876],
        [ 1.0619],
        [-1.0522],
        [ 0.1300],
        [-1.1297],
        [ 0.6814],
        [ 0.8140]])), ('layers.0.bias', tensor([ 1.6480, -0.1492,  0.3140,  0.1816,  0.3393, -0.8449, -0.4626,  0.5051,
        -0.2125, -0.8918,  0.2292,  0.6188,  0.6367,  0.2734,  0.5826,  1.5072,
         1.3170,  0.1761,  0.2024])), ('layers.2.weight', tensor([[-0.8312, -0.0042, -0.3346,  0.6439,  0.3979, -0.0818,  0.0371,  0.3085,
         -0.0366,  0.0096,  0.5267, -0.2131, -0.4178,  0.4173, -0.6406, -0.4659,
         -1.0688,  0.4240,  0.0354]])), ('layers.2.bias', tensor([-0.3328]))])",0.4425379020239537,0.2828370393312071
65,65,"OrderedDict([('layers.0.weight', tensor([[-0.6930],
        [ 0.7789],
        [-0.7880],
        [ 0.6325],
        [ 1.3620],
        [-0.6791],
        [ 0.0880],
        [ 1.2600],
        [ 0.1038],
        [-0.3877],
        [ 0.7933],
        [-0.7387],
        [-1.0891],
        [ 1.0601],
        [-1.0528],
        [ 0.1286],
        [-1.1361],
        [ 0.6795],
        [ 0.8138]])), ('layers.0.bias', tensor([ 1.6489, -0.1507,  0.3224,  0.1844,  0.3410, -0.8448, -0.4626,  0.5059,
        -0.2125, -0.8918,  0.2324,  0.6208,  0.6432,  0.2765,  0.5852,  1.5090,
         1.3154,  0.1783,  0.2026])), ('layers.2.weight', tensor([[-0.8316, -0.0081, -0.3366,  0.6431,  0.3975, -0.0818,  0.0371,  0.3083,
         -0.0366,  0.0096,  0.5257, -0.2136, -0.4194,  0.4165, -0.6415, -0.4670,
         -1.0711,  0.4231,  0.0352]])), ('layers.2.bias', tensor([-0.3331]))])",0.4425246991411162,0.2828510773678621
66,66,"OrderedDict([('layers.0.weight', tensor([[-0.6932],
        [ 0.7781],
        [-0.7894],
        [ 0.6311],
        [ 1.3606],
        [-0.6791],
        [ 0.0880],
        [ 1.2592],
        [ 0.1038],
        [-0.3877],
        [ 0.7913],
        [-0.7391],
        [-1.0905],
        [ 1.0582],
        [-1.0533],
        [ 0.1272],
        [-1.1424],
        [ 0.6775],
        [ 0.8136]])), ('layers.0.bias', tensor([ 1.6497, -0.1527,  0.3308,  0.1872,  0.3428, -0.8448, -0.4626,  0.5067,
        -0.2125, -0.8918,  0.2357,  0.6228,  0.6496,  0.2797,  0.5879,  1.5107,
         1.3136,  0.1805,  0.2028])), ('layers.2.weight', tensor([[-0.8321, -0.0121, -0.3385,  0.6422,  0.3970, -0.0818,  0.0371,  0.3082,
         -0.0366,  0.0096,  0.5246, -0.2140, -0.4209,  0.4157, -0.6424, -0.4680,
         -1.0735,  0.4223,  0.0349]])), ('layers.2.bias', tensor([-0.3335]))])",0.4425116436361956,0.28286318559451806
67,67,"OrderedDict([('layers.0.weight', tensor([[-0.6934],
        [ 0.7775],
        [-0.7908],
        [ 0.6295],
        [ 1.3592],
        [-0.6791],
        [ 0.0880],
        [ 1.2583],
        [ 0.1038],
        [-0.3877],
        [ 0.7893],
        [-0.7394],
        [-1.0920],
        [ 1.0563],
        [-1.0538],
        [ 0.1260],
        [-1.1488],
        [ 0.6755],
        [ 0.8134]])), ('layers.0.bias', tensor([ 1.6505, -0.1550,  0.3392,  0.1900,  0.3445, -0.8448, -0.4626,  0.5075,
        -0.2125, -0.8918,  0.2390,  0.6248,  0.6560,  0.2828,  0.5904,  1.5124,
         1.3116,  0.1827,  0.2031])), ('layers.2.weight', tensor([[-0.8326, -0.0161, -0.3405,  0.6413,  0.3966, -0.0818,  0.0371,  0.3080,
         -0.0366,  0.0096,  0.5236, -0.2145, -0.4225,  0.4148, -0.6433, -0.4690,
         -1.0758,  0.4214,  0.0346]])), ('layers.2.bias', tensor([-0.3338]))])",0.44249868783323715,0.28287341943165906
68,68,"OrderedDict([('layers.0.weight', tensor([[-0.6936],
        [ 0.7769],
        [-0.7922],
        [ 0.6279],
        [ 1.3577],
        [-0.6792],
        [ 0.0880],
        [ 1.2574],
        [ 0.1038],
        [-0.3877],
        [ 0.7872],
        [-0.7397],
        [-1.0934],
        [ 1.0544],
        [-1.0544],
        [ 0.1248],
        [-1.1552],
        [ 0.6734],
        [ 0.8131]])), ('layers.0.bias', tensor([ 1.6513, -0.1578,  0.3476,  0.1928,  0.3463, -0.8447, -0.4626,  0.5084,
        -0.2125, -0.8918,  0.2422,  0.6268,  0.6623,  0.2860,  0.5930,  1.5140,
         1.3095,  0.1850,  0.2033])), ('layers.2.weight', tensor([[-0.8330, -0.0202, -0.3425,  0.6403,  0.3961, -0.0818,  0.0371,  0.3078,
         -0.0366,  0.0096,  0.5224, -0.2150, -0.4241,  0.4140, -0.6441, -0.4700,
         -1.0781,  0.4205,  0.0343]])), ('layers.2.bias', tensor([-0.3341]))])",0.44248588151919344,0.2828817941752883
69,69,"OrderedDict([('layers.0.weight', tensor([[-0.6938],
        [ 0.7765],
        [-0.7936],
        [ 0.6263],
        [ 1.3562],
        [-0.6792],
        [ 0.0880],
        [ 1.2565],
        [ 0.1038],
        [-0.3877],
        [ 0.7851],
        [-0.7401],
        [-1.0949],
        [ 1.0524],
        [-1.0549],
        [ 0.1237],
        [-1.1616],
        [ 0.6713],
        [ 0.8129]])), ('layers.0.bias', tensor([ 1.6520, -0.1610,  0.3559,  0.1957,  0.3480, -0.8447, -0.4626,  0.5092,
        -0.2125, -0.8918,  0.2455,  0.6288,  0.6687,  0.2891,  0.5956,  1.5155,
         1.3073,  0.1872,  0.2035])), ('layers.2.weight', tensor([[-0.8334, -0.0244, -0.3444,  0.6394,  0.3956, -0.0818,  0.0371,  0.3076,
         -0.0366,  0.0096,  0.5213, -0.2155, -0.4256,  0.4131, -0.6450, -0.4709,
         -1.0803,  0.4195,  0.0340]])), ('layers.2.bias', tensor([-0.3344]))])",0.44247316787562646,0.2828884112726276
