,Epochs,Params,Train loss,Test loss
0,0,"OrderedDict([('layers.0.weight', tensor([[-0.7153],
        [ 0.2027],
        [-0.6866],
        [ 0.8895],
        [ 0.3132],
        [ 0.2591],
        [-0.7651],
        [-0.4470],
        [-0.9293],
        [-0.1460],
        [ 0.6311],
        [-0.4735],
        [ 0.8616],
        [-0.5033],
        [ 0.5116],
        [ 0.8197],
        [-0.3053],
        [-0.2995],
        [-0.9776]])), ('layers.0.bias', tensor([ 1.0155,  0.1491,  0.5550, -0.7799, -0.7163, -0.8803,  0.2912, -0.1391,
        -0.7581,  0.4885,  0.4190,  0.9295,  0.4487, -0.8034,  0.6702,  0.1688,
         0.9231,  0.4368, -0.1137])), ('layers.2.weight', tensor([[-0.1545, -0.1414, -0.2428, -0.0505, -0.0135, -0.1091,  0.1014,  0.0886,
         -0.2003, -0.2559,  0.2683, -0.1316,  0.2066, -0.2661,  0.0763, -0.0777,
         -0.0137,  0.0036, -0.2919]])), ('layers.2.bias', tensor([-0.2492]))])",0.6152999653170507,0.5841114444299212
1,1,"OrderedDict([('layers.0.weight', tensor([[-0.7867],
        [ 0.1368],
        [-0.7432],
        [ 0.8479],
        [ 0.2941],
        [ 0.2591],
        [-0.7303],
        [-0.4128],
        [-0.9730],
        [-0.2284],
        [ 0.7188],
        [-0.5743],
        [ 0.9532],
        [-0.5449],
        [ 0.6261],
        [ 0.7716],
        [-0.2985],
        [-0.2804],
        [-1.0297]])), ('layers.0.bias', tensor([ 1.1020,  0.1508,  0.6421, -0.8241, -0.7347, -0.8803,  0.2331, -0.1877,
        -0.7147,  0.5265,  0.4185,  0.9828,  0.4476, -0.7622,  0.6453,  0.1407,
         0.9165,  0.4148, -0.0394])), ('layers.2.weight', tensor([[-0.2179, -0.0918, -0.3031,  0.0055,  0.0029, -0.1091,  0.0526,  0.0517,
         -0.2394, -0.3192,  0.3292, -0.1969,  0.2710, -0.3115,  0.1170, -0.0143,
         -0.0676, -0.0511, -0.3383]])), ('layers.2.bias', tensor([-0.2840]))])",0.4213009822492798,0.48756788961666947
2,2,"OrderedDict([('layers.0.weight', tensor([[-0.8386],
        [ 0.0977],
        [-0.7779],
        [ 0.8392],
        [ 0.2890],
        [ 0.2591],
        [-0.7179],
        [-0.4009],
        [-0.9931],
        [-0.2835],
        [ 0.7918],
        [-0.6395],
        [ 1.0305],
        [-0.5635],
        [ 0.7317],
        [ 0.7556],
        [-0.3289],
        [-0.2859],
        [-1.0594]])), ('layers.0.bias', tensor([ 1.1719,  0.1599,  0.7112, -0.8332, -0.7395, -0.8803,  0.2057, -0.2067,
        -0.6946,  0.5574,  0.4097,  1.0409,  0.4420, -0.7437,  0.6161,  0.1316,
         0.9349,  0.4338,  0.0219])), ('layers.2.weight', tensor([[-0.2596, -0.0672, -0.3421,  0.0402,  0.0072, -0.1091,  0.0275,  0.0377,
         -0.2560, -0.3689,  0.3755, -0.2415,  0.3193, -0.3331,  0.1489,  0.0289,
         -0.1003, -0.0829, -0.3633]])), ('layers.2.bias', tensor([-0.3068]))])",0.3675065839663148,0.4530756792247606
3,3,"OrderedDict([('layers.0.weight', tensor([[-0.8780],
        [ 0.0769],
        [-0.8011],
        [ 0.8452],
        [ 0.2878],
        [ 0.2591],
        [-0.7138],
        [-0.3969],
        [-1.0041],
        [-0.3215],
        [ 0.8466],
        [-0.6836],
        [ 1.0862],
        [-0.5716],
        [ 0.8204],
        [ 0.7566],
        [-0.3655],
        [-0.2983],
        [-1.0776]])), ('layers.0.bias', tensor([ 1.2288,  0.1686,  0.7668, -0.8255, -0.7407, -0.8803,  0.1938, -0.2134,
        -0.6775,  0.5855,  0.3983,  1.0962,  0.4427, -0.7355,  0.5833,  0.1313,
         0.9628,  0.4664,  0.0706])), ('layers.2.weight', tensor([[-0.2892, -0.0586, -0.3695,  0.0602,  0.0083, -0.1091,  0.0133,  0.0323,
         -0.2629, -0.4089,  0.4077, -0.2741,  0.3526, -0.3429,  0.1720,  0.0564,
         -0.1233, -0.1040, -0.3785]])), ('layers.2.bias', tensor([-0.3246]))])",0.3456162449593345,0.4372269050528606
4,4,"OrderedDict([('layers.0.weight', tensor([[-0.9102],
        [ 0.0648],
        [-0.8185],
        [ 0.8548],
        [ 0.2875],
        [ 0.2591],
        [-0.7124],
        [-0.3954],
        [-1.0117],
        [-0.3464],
        [ 0.8857],
        [-0.7187],
        [ 1.1257],
        [-0.5754],
        [ 0.8887],
        [ 0.7637],
        [-0.3990],
        [-0.3119],
        [-1.0900]])), ('layers.0.bias', tensor([ 1.2749,  0.1758,  0.8117, -0.8135, -0.7410, -0.8803,  0.1890, -0.2163,
        -0.6601,  0.6138,  0.3916,  1.1433,  0.4481, -0.7317,  0.5567,  0.1332,
         0.9924,  0.4999,  0.1103])), ('layers.2.weight', tensor([[-0.3118, -0.0574, -0.3906,  0.0722,  0.0085, -0.1091,  0.0040,  0.0300,
         -0.2661, -0.4414,  0.4308, -0.2994,  0.3759, -0.3476,  0.1896,  0.0745,
         -0.1413, -0.1199, -0.3894]])), ('layers.2.bias', tensor([-0.3393]))])",0.33460307996720073,0.42860026503913107
5,5,"OrderedDict([('layers.0.weight', tensor([[-0.9381],
        [ 0.0563],
        [-0.8330],
        [ 0.8640],
        [ 0.2874],
        [ 0.2591],
        [-0.7120],
        [-0.3946],
        [-1.0170],
        [-0.3656],
        [ 0.9160],
        [-0.7492],
        [ 1.1563],
        [-0.5774],
        [ 0.9424],
        [ 0.7723],
        [-0.4285],
        [-0.3253],
        [-1.0991]])), ('layers.0.bias', tensor([ 1.3120,  0.1818,  0.8481, -0.8018, -0.7410, -0.8803,  0.1874, -0.2180,
        -0.6458,  0.6388,  0.3863,  1.1819,  0.4536, -0.7297,  0.5368,  0.1358,
         1.0200,  0.5301,  0.1469])), ('layers.2.weight', tensor([[-0.3299, -0.0589, -0.4077,  0.0803,  0.0086, -0.1091, -0.0027,  0.0288,
         -0.2679, -0.4683,  0.4485, -0.3198,  0.3936, -0.3501,  0.2042,  0.0877,
         -0.1560, -0.1328, -0.3980]])), ('layers.2.bias', tensor([-0.3512]))])",0.32824097306778033,0.4233654709222416
6,6,"OrderedDict([('layers.0.weight', tensor([[-0.9634],
        [ 0.0494],
        [-0.8458],
        [ 0.8718],
        [ 0.2874],
        [ 0.2591],
        [-0.7120],
        [-0.3942],
        [-1.0211],
        [-0.3820],
        [ 0.9400],
        [-0.7770],
        [ 1.1815],
        [-0.5786],
        [ 0.9879],
        [ 0.7809],
        [-0.4541],
        [-0.3383],
        [-1.1064]])), ('layers.0.bias', tensor([ 1.3417,  0.1867,  0.8775, -0.7916, -0.7410, -0.8803,  0.1874, -0.2191,
        -0.6341,  0.6595,  0.3850,  1.2130,  0.4594, -0.7284,  0.5208,  0.1389,
         1.0446,  0.5559,  0.1787])), ('layers.2.weight', tensor([[-0.3448, -0.0611, -0.4220,  0.0859,  0.0086, -0.1091, -0.0080,  0.0281,
         -0.2690, -0.4907,  0.4631, -0.3368,  0.4080, -0.3516,  0.2170,  0.0982,
         -0.1682, -0.1436, -0.4054]])), ('layers.2.bias', tensor([-0.3607]))])",0.3241929717749978,0.4199785590249424
7,7,"OrderedDict([('layers.0.weight', tensor([[-0.9867],
        [ 0.0436],
        [-0.8577],
        [ 0.8781],
        [ 0.2874],
        [ 0.2591],
        [-0.7121],
        [-0.3938],
        [-1.0243],
        [-0.3967],
        [ 0.9588],
        [-0.8027],
        [ 1.2028],
        [-0.5794],
        [ 1.0276],
        [ 0.7890],
        [-0.4767],
        [-0.3508],
        [-1.1124]])), ('layers.0.bias', tensor([ 1.3655,  0.1909,  0.9013, -0.7831, -0.7411, -0.8803,  0.1882, -0.2199,
        -0.6244,  0.6766,  0.3888,  1.2382,  0.4654, -0.7277,  0.5075,  0.1424,
         1.0659,  0.5774,  0.2063])), ('layers.2.weight', tensor([[-0.3573, -0.0635, -0.4341,  0.0900,  0.0086, -0.1091, -0.0124,  0.0276,
         -0.2699, -0.5097,  0.4757, -0.3510,  0.4201, -0.3526,  0.2285,  0.1069,
         -0.1785, -0.1528, -0.4118]])), ('layers.2.bias', tensor([-0.3684]))])",0.32147247827379033,0.41766503437344604
8,8,"OrderedDict([('layers.0.weight', tensor([[-1.0083],
        [ 0.0386],
        [-0.8689],
        [ 0.8829],
        [ 0.2874],
        [ 0.2591],
        [-0.7123],
        [-0.3936],
        [-1.0269],
        [-0.4101],
        [ 0.9746],
        [-0.8267],
        [ 1.2210],
        [-0.5799],
        [ 1.0615],
        [ 0.7964],
        [-0.4970],
        [-0.3628],
        [-1.1177]])), ('layers.0.bias', tensor([ 1.3849,  0.1946,  0.9209, -0.7765, -0.7411, -0.8803,  0.1894, -0.2206,
        -0.6162,  0.6909,  0.3937,  1.2588,  0.4714, -0.7271,  0.4984,  0.1462,
         1.0845,  0.5957,  0.2307])), ('layers.2.weight', tensor([[-0.3681, -0.0658, -0.4446,  0.0930,  0.0086, -0.1091, -0.0162,  0.0272,
         -0.2705, -0.5261,  0.4865, -0.3633,  0.4306, -0.3533,  0.2388,  0.1143,
         -0.1874, -0.1608, -0.4177]])), ('layers.2.bias', tensor([-0.3748]))])",0.31955601397009253,0.41600140852387996
9,9,"OrderedDict([('layers.0.weight', tensor([[-1.0284],
        [ 0.0341],
        [-0.8797],
        [ 0.8863],
        [ 0.2874],
        [ 0.2591],
        [-0.7126],
        [-0.3934],
        [-1.0291],
        [-0.4223],
        [ 0.9880],
        [-0.8491],
        [ 1.2366],
        [-0.5803],
        [ 1.0888],
        [ 0.8031],
        [-0.5153],
        [-0.3742],
        [-1.1223]])), ('layers.0.bias', tensor([ 1.4012,  0.1978,  0.9370, -0.7716, -0.7411, -0.8803,  0.1908, -0.2212,
        -0.6091,  0.7031,  0.3988,  1.2762,  0.4773, -0.7267,  0.4953,  0.1501,
         1.1010,  0.6112,  0.2525])), ('layers.2.weight', tensor([[-0.3775, -0.0681, -0.4540,  0.0950,  0.0086, -0.1091, -0.0195,  0.0269,
         -0.2711, -0.5404,  0.4958, -0.3741,  0.4397, -0.3538,  0.2481,  0.1206,
         -0.1953, -0.1679, -0.4230]])), ('layers.2.bias', tensor([-0.3803]))])",0.31816466463884957,0.41476585989197096
10,10,"OrderedDict([('layers.0.weight', tensor([[-1.0472],
        [ 0.0301],
        [-0.8901],
        [ 0.8886],
        [ 0.2874],
        [ 0.2591],
        [-0.7128],
        [-0.3932],
        [-1.0309],
        [-0.4335],
        [ 0.9995],
        [-0.8701],
        [ 1.2501],
        [-0.5806],
        [ 1.1124],
        [ 0.8091],
        [-0.5318],
        [-0.3851],
        [-1.1265]])), ('layers.0.bias', tensor([ 1.4150,  0.2007,  0.9504, -0.7683, -0.7411, -0.8803,  0.1925, -0.2217,
        -0.6028,  0.7138,  0.4037,  1.2910,  0.4830, -0.7264,  0.4936,  0.1540,
         1.1158,  0.6248,  0.2723])), ('layers.2.weight', tensor([[-0.3859, -0.0703, -0.4623,  0.0962,  0.0086, -0.1091, -0.0225,  0.0267,
         -0.2715, -0.5533,  0.5040, -0.3837,  0.4475, -0.3541,  0.2562,  0.1260,
         -0.2023, -0.1743, -0.4280]])), ('layers.2.bias', tensor([-0.3851]))])",0.31711744259919217,0.41382686111804406
11,11,"OrderedDict([('layers.0.weight', tensor([[-1.0647],
        [ 0.0265],
        [-0.9003],
        [ 0.8899],
        [ 0.2874],
        [ 0.2591],
        [-0.7131],
        [-0.3930],
        [-1.0326],
        [-0.4438],
        [ 1.0094],
        [-0.8898],
        [ 1.2618],
        [-0.5808],
        [ 1.1331],
        [ 0.8144],
        [-0.5467],
        [-0.3954],
        [-1.1303]])), ('layers.0.bias', tensor([ 1.4270,  0.2034,  0.9615, -0.7664, -0.7411, -0.8803,  0.1942, -0.2222,
        -0.5971,  0.7232,  0.4084,  1.3038,  0.4885, -0.7262,  0.4925,  0.1578,
         1.1294,  0.6367,  0.2905])), ('layers.2.weight', tensor([[-0.3935, -0.0725, -0.4698,  0.0969,  0.0086, -0.1091, -0.0252,  0.0265,
         -0.2719, -0.5648,  0.5111, -0.3923,  0.4544, -0.3544,  0.2634,  0.1307,
         -0.2086, -0.1801, -0.4326]])), ('layers.2.bias', tensor([-0.3894]))])",0.3163087757512282,0.41309968718827955
12,12,"OrderedDict([('layers.0.weight', tensor([[-1.0812],
        [ 0.0233],
        [-0.9102],
        [ 0.8903],
        [ 0.2874],
        [ 0.2591],
        [-0.7134],
        [-0.3929],
        [-1.0341],
        [-0.4534],
        [ 1.0181],
        [-0.9083],
        [ 1.2719],
        [-0.5810],
        [ 1.1516],
        [ 0.8192],
        [-0.5603],
        [-0.4053],
        [-1.1338]])), ('layers.0.bias', tensor([ 1.4375,  0.2059,  0.9708, -0.7656, -0.7411, -0.8803,  0.1960, -0.2226,
        -0.5920,  0.7315,  0.4129,  1.3151,  0.4937, -0.7260,  0.4916,  0.1616,
         1.1418,  0.6473,  0.3073])), ('layers.2.weight', tensor([[-0.4003, -0.0746, -0.4766,  0.0970,  0.0086, -0.1091, -0.0277,  0.0263,
         -0.2722, -0.5753,  0.5173, -0.4002,  0.4604, -0.3546,  0.2698,  0.1347,
         -0.2144, -0.1854, -0.4370]])), ('layers.2.bias', tensor([-0.3932]))])",0.315671001130219,0.4125273322201489
13,13,"OrderedDict([('layers.0.weight', tensor([[-1.0966],
        [ 0.0203],
        [-0.9200],
        [ 0.8900],
        [ 0.2874],
        [ 0.2591],
        [-0.7137],
        [-0.3928],
        [-1.0354],
        [-0.4625],
        [ 1.0256],
        [-0.9256],
        [ 1.2807],
        [-0.5811],
        [ 1.1680],
        [ 0.8234],
        [-0.5727],
        [-0.4147],
        [-1.1371]])), ('layers.0.bias', tensor([ 1.4468,  0.2083,  0.9784, -0.7659, -0.7411, -0.8803,  0.1978, -0.2230,
        -0.5874,  0.7389,  0.4172,  1.3251,  0.4987, -0.7259,  0.4910,  0.1653,
         1.1534,  0.6568,  0.3229])), ('layers.2.weight', tensor([[-0.4066, -0.0766, -0.4829,  0.0968,  0.0086, -0.1091, -0.0300,  0.0262,
         -0.2726, -0.5849,  0.5228, -0.4074,  0.4657, -0.3548,  0.2755,  0.1383,
         -0.2196, -0.1903, -0.4412]])), ('layers.2.bias', tensor([-0.3968]))])",0.31515917440072677,0.41207088442121553
14,14,"OrderedDict([('layers.0.weight', tensor([[-1.1110],
        [ 0.0176],
        [-0.9296],
        [ 0.8891],
        [ 0.2874],
        [ 0.2591],
        [-0.7140],
        [-0.3927],
        [-1.0367],
        [-0.4710],
        [ 1.0321],
        [-0.9420],
        [ 1.2883],
        [-0.5812],
        [ 1.1826],
        [ 0.8271],
        [-0.5841],
        [-0.4236],
        [-1.1401]])), ('layers.0.bias', tensor([ 1.4551,  0.2105,  0.9847, -0.7671, -0.7411, -0.8803,  0.1996, -0.2233,
        -0.5831,  0.7456,  0.4214,  1.3340,  0.5035, -0.7258,  0.4905,  0.1689,
         1.1641,  0.6653,  0.3376])), ('layers.2.weight', tensor([[-0.4123, -0.0786, -0.4887,  0.0962,  0.0086, -0.1091, -0.0321,  0.0260,
         -0.2728, -0.5937,  0.5276, -0.4140,  0.4704, -0.3549,  0.2805,  0.1414,
         -0.2245, -0.1948, -0.4451]])), ('layers.2.bias', tensor([-0.4000]))])",0.31474233976173144,0.41170301428937817
15,15,"OrderedDict([('layers.0.weight', tensor([[-1.1247],
        [ 0.0151],
        [-0.9392],
        [ 0.8877],
        [ 0.2874],
        [ 0.2591],
        [-0.7143],
        [-0.3926],
        [-1.0378],
        [-0.4790],
        [ 1.0378],
        [-0.9574],
        [ 1.2950],
        [-0.5813],
        [ 1.1956],
        [ 0.8304],
        [-0.5945],
        [-0.4320],
        [-1.1430]])), ('layers.0.bias', tensor([ 1.4625,  0.2126,  0.9897, -0.7690, -0.7411, -0.8803,  0.2015, -0.2236,
        -0.5792,  0.7515,  0.4254,  1.3419,  0.5082, -0.7257,  0.4900,  0.1724,
         1.1742,  0.6730,  0.3514])), ('layers.2.weight', tensor([[-0.4176, -0.0805, -0.4940,  0.0954,  0.0086, -0.1091, -0.0341,  0.0259,
         -0.2731, -0.6019,  0.5319, -0.4201,  0.4745, -0.3550,  0.2850,  0.1441,
         -0.2290, -0.1989, -0.4488]])), ('layers.2.bias', tensor([-0.4030]))])",0.3143984265107065,0.41140388187389665
16,16,"OrderedDict([('layers.0.weight', tensor([[-1.1375],
        [ 0.0128],
        [-0.9486],
        [ 0.8859],
        [ 0.2874],
        [ 0.2591],
        [-0.7145],
        [-0.3925],
        [-1.0388],
        [-0.4866],
        [ 1.0427],
        [-0.9720],
        [ 1.3007],
        [-0.5814],
        [ 1.2063],
        [ 0.8333],
        [-0.6040],
        [-0.4401],
        [-1.1458]])), ('layers.0.bias', tensor([ 1.4692,  0.2146,  0.9936, -0.7716, -0.7411, -0.8803,  0.2033, -0.2239,
        -0.5755,  0.7569,  0.4292,  1.3492,  0.5126, -0.7256,  0.4915,  0.1758,
         1.1837,  0.6800,  0.3645])), ('layers.2.weight', tensor([[-0.4225, -0.0823, -0.4990,  0.0943,  0.0086, -0.1091, -0.0360,  0.0258,
         -0.2733, -0.6095,  0.5357, -0.4258,  0.4781, -0.3551,  0.2890,  0.1465,
         -0.2332, -0.2028, -0.4524]])), ('layers.2.bias', tensor([-0.4058]))])",0.3141125195212529,0.4111576054943725
17,17,"OrderedDict([('layers.0.weight', tensor([[-1.1497],
        [ 0.0107],
        [-0.9579],
        [ 0.8837],
        [ 0.2874],
        [ 0.2591],
        [-0.7148],
        [-0.3924],
        [-1.0398],
        [-0.4938],
        [ 1.0474],
        [-0.9857],
        [ 1.3056],
        [-0.5814],
        [ 1.2142],
        [ 0.8357],
        [-0.6128],
        [-0.4478],
        [-1.1484]])), ('layers.0.bias', tensor([ 1.4753,  0.2166,  0.9966, -0.7748, -0.7411, -0.8803,  0.2051, -0.2242,
        -0.5721,  0.7619,  0.4316,  1.3557,  0.5169, -0.7255,  0.4958,  0.1791,
         1.1927,  0.6865,  0.3769])), ('layers.2.weight', tensor([[-0.4271, -0.0841, -0.5036,  0.0931,  0.0086, -0.1091, -0.0378,  0.0257,
         -0.2735, -0.6165,  0.5391, -0.4311,  0.4814, -0.3552,  0.2925,  0.1486,
         -0.2370, -0.2065, -0.4559]])), ('layers.2.bias', tensor([-0.4084]))])",0.31387094549633426,0.41095481690087277
18,18,"OrderedDict([('layers.0.weight', tensor([[-1.1612],
        [ 0.0088],
        [-0.9671],
        [ 0.8812],
        [ 0.2874],
        [ 0.2591],
        [-0.7151],
        [-0.3923],
        [-1.0407],
        [-0.5006],
        [ 1.0522],
        [-0.9988],
        [ 1.3099],
        [-0.5815],
        [ 1.2207],
        [ 0.8379],
        [-0.6208],
        [-0.4552],
        [-1.1509]])), ('layers.0.bias', tensor([ 1.4809,  0.2184,  0.9988, -0.7784, -0.7411, -0.8803,  0.2069, -0.2244,
        -0.5689,  0.7664,  0.4320,  1.3618,  0.5210, -0.7255,  0.5005,  0.1823,
         1.2012,  0.6924,  0.3887])), ('layers.2.weight', tensor([[-0.4314, -0.0858, -0.5080,  0.0917,  0.0086, -0.1091, -0.0395,  0.0256,
         -0.2738, -0.6231,  0.5421, -0.4361,  0.4842, -0.3553,  0.2957,  0.1504,
         -0.2407, -0.2099, -0.4592]])), ('layers.2.bias', tensor([-0.4109]))])",0.313665236909704,0.4107888090741956
19,19,"OrderedDict([('layers.0.weight', tensor([[-1.1722],
        [ 0.0069],
        [-0.9763],
        [ 0.8785],
        [ 0.2874],
        [ 0.2591],
        [-0.7154],
        [-0.3922],
        [-1.0415],
        [-0.5071],
        [ 1.0562],
        [-1.0112],
        [ 1.3135],
        [-0.5815],
        [ 1.2271],
        [ 0.8397],
        [-0.6283],
        [-0.4622],
        [-1.1533]])), ('layers.0.bias', tensor([ 1.4859,  0.2202,  1.0002, -0.7825, -0.7411, -0.8803,  0.2088, -0.2247,
        -0.5659,  0.7705,  0.4332,  1.3672,  0.5249, -0.7254,  0.5036,  0.1854,
         1.2093,  0.6978,  0.4000])), ('layers.2.weight', tensor([[-0.4354, -0.0875, -0.5121,  0.0902,  0.0086, -0.1091, -0.0411,  0.0256,
         -0.2740, -0.6293,  0.5447, -0.4408,  0.4867, -0.3553,  0.2984,  0.1520,
         -0.2441, -0.2131, -0.4625]])), ('layers.2.bias', tensor([-0.4132]))])",0.3134884001605921,0.41064970048910443
20,20,"OrderedDict([('layers.0.weight', tensor([[-1.1826],
        [ 0.0053],
        [-0.9854],
        [ 0.8755],
        [ 0.2874],
        [ 0.2591],
        [-0.7157],
        [-0.3921],
        [-1.0423],
        [-0.5133],
        [ 1.0594],
        [-1.0231],
        [ 1.3165],
        [-0.5816],
        [ 1.2330],
        [ 0.8413],
        [-0.6351],
        [-0.4690],
        [-1.1556]])), ('layers.0.bias', tensor([ 1.4905,  0.2219,  1.0009, -0.7868, -0.7411, -0.8803,  0.2106, -0.2249,
        -0.5630,  0.7743,  0.4350,  1.3722,  0.5288, -0.7254,  0.5057,  0.1885,
         1.2169,  0.7027,  0.4108])), ('layers.2.weight', tensor([[-0.4392, -0.0891, -0.5160,  0.0886,  0.0086, -0.1091, -0.0427,  0.0255,
         -0.2741, -0.6351,  0.5470, -0.4452,  0.4889, -0.3554,  0.3009,  0.1534,
         -0.2473, -0.2161, -0.4656]])), ('layers.2.bias', tensor([-0.4154]))])",0.3133346767292096,0.4105305797249684
21,21,"OrderedDict([('layers.0.weight', tensor([[-1.1925],
        [ 0.0037],
        [-0.9945],
        [ 0.8724],
        [ 0.2874],
        [ 0.2591],
        [-0.7160],
        [-0.3921],
        [-1.0430],
        [-0.5193],
        [ 1.0622],
        [-1.0344],
        [ 1.3190],
        [-0.5816],
        [ 1.2378],
        [ 0.8426],
        [-0.6414],
        [-0.4755],
        [-1.1578]])), ('layers.0.bias', tensor([ 1.4947,  0.2236,  1.0009, -0.7915, -0.7411, -0.8803,  0.2123, -0.2251,
        -0.5603,  0.7777,  0.4364,  1.3767,  0.5326, -0.7254,  0.5082,  0.1916,
         1.2242,  0.7073,  0.4212])), ('layers.2.weight', tensor([[-0.4427, -0.0907, -0.5197,  0.0869,  0.0086, -0.1091, -0.0442,  0.0254,
         -0.2743, -0.6406,  0.5490, -0.4493,  0.4909, -0.3554,  0.3030,  0.1545,
         -0.2503, -0.2190, -0.4686]])), ('layers.2.bias', tensor([-0.4175]))])",0.3132004380420161,0.4104294799287042
22,22,"OrderedDict([('layers.0.weight', tensor([[-1.2020],
        [ 0.0023],
        [-1.0035],
        [ 0.8691],
        [ 0.2874],
        [ 0.2591],
        [-0.7163],
        [-0.3920],
        [-1.0437],
        [-0.5249],
        [ 1.0645],
        [-1.0452],
        [ 1.3210],
        [-0.5816],
        [ 1.2422],
        [ 0.8437],
        [-0.6472],
        [-0.4817],
        [-1.1599]])), ('layers.0.bias', tensor([ 1.4986,  0.2252,  1.0003, -0.7964, -0.7411, -0.8803,  0.2141, -0.2253,
        -0.5577,  0.7808,  0.4382,  1.3809,  0.5363, -0.7253,  0.5101,  0.1945,
         1.2312,  0.7114,  0.4312])), ('layers.2.weight', tensor([[-0.4460, -0.0922, -0.5232,  0.0852,  0.0086, -0.1091, -0.0456,  0.0254,
         -0.2745, -0.6458,  0.5508, -0.4532,  0.4926, -0.3554,  0.3049,  0.1556,
         -0.2531, -0.2217, -0.4716]])), ('layers.2.bias', tensor([-0.4194]))])",0.31308211963017435,0.4103434907832707
23,23,"OrderedDict([('layers.0.weight', tensor([[-1.2110e+00],
        [ 9.3756e-04],
        [-1.0125e+00],
        [ 8.6563e-01],
        [ 2.8740e-01],
        [ 2.5914e-01],
        [-7.1657e-01],
        [-3.9195e-01],
        [-1.0444e+00],
        [-5.3035e-01],
        [ 1.0670e+00],
        [-1.0555e+00],
        [ 1.3226e+00],
        [-5.8164e-01],
        [ 1.2456e+00],
        [ 8.4448e-01],
        [-6.5258e-01],
        [-4.8771e-01],
        [-1.1620e+00]])), ('layers.0.bias', tensor([ 1.5021,  0.2267,  0.9992, -0.8015, -0.7411, -0.8803,  0.2158, -0.2255,
        -0.5552,  0.7837,  0.4386,  1.3847,  0.5399, -0.7253,  0.5125,  0.1974,
         1.2379,  0.7153,  0.4409])), ('layers.2.weight', tensor([[-0.4492, -0.0937, -0.5265,  0.0835,  0.0086, -0.1091, -0.0470,  0.0253,
         -0.2747, -0.6506,  0.5523, -0.4569,  0.4940, -0.3555,  0.3065,  0.1564,
         -0.2558, -0.2242, -0.4744]])), ('layers.2.bias', tensor([-0.4213]))])",0.3129770737069824,0.4102716018402134
24,24,"OrderedDict([('layers.0.weight', tensor([[-1.2197e+00],
        [-2.9503e-04],
        [-1.0215e+00],
        [ 8.6210e-01],
        [ 2.8740e-01],
        [ 2.5914e-01],
        [-7.1685e-01],
        [-3.9189e-01],
        [-1.0451e+00],
        [-5.3557e-01],
        [ 1.0691e+00],
        [-1.0654e+00],
        [ 1.3238e+00],
        [-5.8166e-01],
        [ 1.2492e+00],
        [ 8.4510e-01],
        [-6.5750e-01],
        [-4.9349e-01],
        [-1.1640e+00]])), ('layers.0.bias', tensor([ 1.5053,  0.2282,  0.9976, -0.8068, -0.7411, -0.8803,  0.2176, -0.2257,
        -0.5528,  0.7864,  0.4388,  1.3882,  0.5434, -0.7253,  0.5131,  0.2003,
         1.2442,  0.7188,  0.4502])), ('layers.2.weight', tensor([[-0.4522, -0.0951, -0.5297,  0.0817,  0.0086, -0.1091, -0.0484,  0.0253,
         -0.2748, -0.6552,  0.5536, -0.4603,  0.4953, -0.3555,  0.3079,  0.1571,
         -0.2583, -0.2266, -0.4772]])), ('layers.2.bias', tensor([-0.4231]))])",0.31288343825350845,0.410211019704002
25,25,"OrderedDict([('layers.0.weight', tensor([[-1.2281],
        [-0.0014],
        [-1.0306],
        [ 0.8585],
        [ 0.2874],
        [ 0.2591],
        [-0.7171],
        [-0.3918],
        [-1.0457],
        [-0.5406],
        [ 1.0706],
        [-1.0749],
        [ 1.3251],
        [-0.5817],
        [ 1.2518],
        [ 0.8455],
        [-0.6620],
        [-0.4991],
        [-1.1660]])), ('layers.0.bias', tensor([ 1.5082,  0.2297,  0.9954, -0.8122, -0.7411, -0.8803,  0.2193, -0.2258,
        -0.5506,  0.7888,  0.4399,  1.3913,  0.5458, -0.7253,  0.5146,  0.2031,
         1.2503,  0.7219,  0.4592])), ('layers.2.weight', tensor([[-0.4550, -0.0964, -0.5328,  0.0799,  0.0086, -0.1091, -0.0497,  0.0252,
         -0.2750, -0.6596,  0.5548, -0.4636,  0.4964, -0.3555,  0.3091,  0.1577,
         -0.2606, -0.2289, -0.4800]])), ('layers.2.bias', tensor([-0.4248]))])",0.31279961649650734,0.4101573820788568
26,26,"OrderedDict([('layers.0.weight', tensor([[-1.2361],
        [-0.0025],
        [-1.0396],
        [ 0.8548],
        [ 0.2874],
        [ 0.2591],
        [-0.7174],
        [-0.3918],
        [-1.0463],
        [-0.5454],
        [ 1.0716],
        [-1.0841],
        [ 1.3267],
        [-0.5817],
        [ 1.2535],
        [ 0.8458],
        [-0.6662],
        [-0.5045],
        [-1.1679]])), ('layers.0.bias', tensor([ 1.5109,  0.2311,  0.9929, -0.8177, -0.7411, -0.8803,  0.2210, -0.2260,
        -0.5484,  0.7909,  0.4415,  1.3942,  0.5464, -0.7253,  0.5169,  0.2059,
         1.2562,  0.7248,  0.4680])), ('layers.2.weight', tensor([[-0.4577, -0.0977, -0.5357,  0.0781,  0.0086, -0.1091, -0.0510,  0.0252,
         -0.2751, -0.6637,  0.5557, -0.4668,  0.4973, -0.3555,  0.3101,  0.1582,
         -0.2629, -0.2311, -0.4826]])), ('layers.2.bias', tensor([-0.4265]))])",0.3127234028829359,0.4101116373096981
27,27,"OrderedDict([('layers.0.weight', tensor([[-1.2439],
        [-0.0035],
        [-1.0486],
        [ 0.8511],
        [ 0.2874],
        [ 0.2591],
        [-0.7177],
        [-0.3917],
        [-1.0469],
        [-0.5501],
        [ 1.0727],
        [-1.0930],
        [ 1.3281],
        [-0.5817],
        [ 1.2554],
        [ 0.8459],
        [-0.6700],
        [-0.5097],
        [-1.1698]])), ('layers.0.bias', tensor([ 1.5133,  0.2324,  0.9899, -0.8234, -0.7411, -0.8803,  0.2227, -0.2262,
        -0.5463,  0.7929,  0.4421,  1.3967,  0.5468, -0.7252,  0.5176,  0.2086,
         1.2617,  0.7274,  0.4765])), ('layers.2.weight', tensor([[-0.4602, -0.0990, -0.5386,  0.0763,  0.0086, -0.1091, -0.0522,  0.0251,
         -0.2753, -0.6676,  0.5565, -0.4697,  0.4981, -0.3556,  0.3109,  0.1585,
         -0.2650, -0.2332, -0.4853]])), ('layers.2.bias', tensor([-0.4280]))])",0.31265468609484137,0.41007415020818977
28,28,"OrderedDict([('layers.0.weight', tensor([[-1.2514],
        [-0.0044],
        [-1.0577],
        [ 0.8473],
        [ 0.2874],
        [ 0.2591],
        [-0.7180],
        [-0.3917],
        [-1.0474],
        [-0.5546],
        [ 1.0736],
        [-1.1015],
        [ 1.3292],
        [-0.5817],
        [ 1.2571],
        [ 0.8458],
        [-0.6735],
        [-0.5148],
        [-1.1716]])), ('layers.0.bias', tensor([ 1.5153,  0.2337,  0.9864, -0.8290, -0.7411, -0.8803,  0.2244, -0.2263,
        -0.5442,  0.7946,  0.4424,  1.3990,  0.5471, -0.7252,  0.5180,  0.2114,
         1.2670,  0.7297,  0.4848])), ('layers.2.weight', tensor([[-0.4626, -0.1002, -0.5414,  0.0745,  0.0086, -0.1091, -0.0534,  0.0251,
         -0.2754, -0.6713,  0.5571, -0.4726,  0.4987, -0.3556,  0.3116,  0.1588,
         -0.2670, -0.2351, -0.4878]])), ('layers.2.bias', tensor([-0.4295]))])",0.31259142697460146,0.41004101699994255
29,29,"OrderedDict([('layers.0.weight', tensor([[-1.2587],
        [-0.0052],
        [-1.0668],
        [ 0.8435],
        [ 0.2874],
        [ 0.2591],
        [-0.7183],
        [-0.3916],
        [-1.0479],
        [-0.5590],
        [ 1.0744],
        [-1.1098],
        [ 1.3301],
        [-0.5817],
        [ 1.2584],
        [ 0.8456],
        [-0.6767],
        [-0.5198],
        [-1.1735]])), ('layers.0.bias', tensor([ 1.5172,  0.2350,  0.9826, -0.8347, -0.7411, -0.8803,  0.2260, -0.2265,
        -0.5423,  0.7962,  0.4428,  1.4010,  0.5475, -0.7252,  0.5184,  0.2142,
         1.2721,  0.7317,  0.4929])), ('layers.2.weight', tensor([[-0.4649, -0.1014, -0.5440,  0.0727,  0.0086, -0.1091, -0.0546,  0.0250,
         -0.2755, -0.6748,  0.5576, -0.4752,  0.4992, -0.3556,  0.3122,  0.1589,
         -0.2688, -0.2370, -0.4904]])), ('layers.2.bias', tensor([-0.4309]))])",0.3125329472364683,0.4100097648139733
30,30,"OrderedDict([('layers.0.weight', tensor([[-1.2657],
        [-0.0059],
        [-1.0759],
        [ 0.8397],
        [ 0.2874],
        [ 0.2591],
        [-0.7185],
        [-0.3916],
        [-1.0485],
        [-0.5633],
        [ 1.0749],
        [-1.1179],
        [ 1.3307],
        [-0.5818],
        [ 1.2592],
        [ 0.8452],
        [-0.6796],
        [-0.5246],
        [-1.1752]])), ('layers.0.bias', tensor([ 1.5188,  0.2362,  0.9783, -0.8405, -0.7411, -0.8803,  0.2277, -0.2266,
        -0.5404,  0.7975,  0.4431,  1.4028,  0.5479, -0.7252,  0.5189,  0.2169,
         1.2770,  0.7335,  0.5008])), ('layers.2.weight', tensor([[-0.4670, -0.1025, -0.5466,  0.0709,  0.0086, -0.1091, -0.0557,  0.0250,
         -0.2757, -0.6781,  0.5580, -0.4778,  0.4996, -0.3556,  0.3126,  0.1590,
         -0.2706, -0.2387, -0.4929]])), ('layers.2.bias', tensor([-0.4323]))])",0.3124786114608772,0.409979998547351
31,31,"OrderedDict([('layers.0.weight', tensor([[-1.2725],
        [-0.0066],
        [-1.0850],
        [ 0.8359],
        [ 0.2874],
        [ 0.2591],
        [-0.7188],
        [-0.3916],
        [-1.0490],
        [-0.5674],
        [ 1.0751],
        [-1.1256],
        [ 1.3310],
        [-0.5818],
        [ 1.2596],
        [ 0.8448],
        [-0.6823],
        [-0.5293],
        [-1.1770]])), ('layers.0.bias', tensor([ 1.5203,  0.2374,  0.9738, -0.8463, -0.7411, -0.8803,  0.2293, -0.2267,
        -0.5385,  0.7987,  0.4435,  1.4043,  0.5484, -0.7252,  0.5194,  0.2196,
         1.2817,  0.7351,  0.5085])), ('layers.2.weight', tensor([[-0.4691, -0.1036, -0.5492,  0.0692,  0.0086, -0.1091, -0.0569,  0.0250,
         -0.2758, -0.6813,  0.5583, -0.4802,  0.4998, -0.3556,  0.3128,  0.1590,
         -0.2723, -0.2404, -0.4953]])), ('layers.2.bias', tensor([-0.4336]))])",0.3124278294640438,0.4099481670263534
32,32,"OrderedDict([('layers.0.weight', tensor([[-1.2791],
        [-0.0072],
        [-1.0942],
        [ 0.8321],
        [ 0.2874],
        [ 0.2591],
        [-0.7191],
        [-0.3915],
        [-1.0494],
        [-0.5715],
        [ 1.0752],
        [-1.1332],
        [ 1.3310],
        [-0.5818],
        [ 1.2596],
        [ 0.8441],
        [-0.6846],
        [-0.5338],
        [-1.1787]])), ('layers.0.bias', tensor([ 1.5216,  0.2386,  0.9689, -0.8521, -0.7411, -0.8803,  0.2309, -0.2269,
        -0.5367,  0.7998,  0.4439,  1.4057,  0.5488, -0.7252,  0.5199,  0.2223,
         1.2862,  0.7366,  0.5160])), ('layers.2.weight', tensor([[-0.4711, -0.1047, -0.5517,  0.0676,  0.0086, -0.1091, -0.0580,  0.0249,
         -0.2759, -0.6843,  0.5584, -0.4825,  0.4999, -0.3556,  0.3129,  0.1589,
         -0.2739, -0.2420, -0.4977]])), ('layers.2.bias', tensor([-0.4349]))])",0.31238012923349745,0.4099182197280849
33,33,"OrderedDict([('layers.0.weight', tensor([[-1.2855],
        [-0.0078],
        [-1.1034],
        [ 0.8283],
        [ 0.2874],
        [ 0.2591],
        [-0.7194],
        [-0.3915],
        [-1.0499],
        [-0.5754],
        [ 1.0750],
        [-1.1405],
        [ 1.3308],
        [-0.5818],
        [ 1.2593],
        [ 0.8434],
        [-0.6867],
        [-0.5383],
        [-1.1804]])), ('layers.0.bias', tensor([ 1.5227,  0.2398,  0.9638, -0.8578, -0.7411, -0.8803,  0.2326, -0.2270,
        -0.5349,  0.8007,  0.4444,  1.4070,  0.5493, -0.7252,  0.5204,  0.2249,
         1.2907,  0.7378,  0.5234])), ('layers.2.weight', tensor([[-0.4730, -0.1058, -0.5541,  0.0659,  0.0086, -0.1091, -0.0590,  0.0249,
         -0.2760, -0.6872,  0.5584, -0.4847,  0.4999, -0.3556,  0.3129,  0.1587,
         -0.2754, -0.2436, -0.5001]])), ('layers.2.bias', tensor([-0.4361]))])",0.31233508935280646,0.40988983504939824
34,34,"OrderedDict([('layers.0.weight', tensor([[-1.2917],
        [-0.0082],
        [-1.1126],
        [ 0.8245],
        [ 0.2874],
        [ 0.2591],
        [-0.7197],
        [-0.3914],
        [-1.0504],
        [-0.5791],
        [ 1.0746],
        [-1.1476],
        [ 1.3303],
        [-0.5818],
        [ 1.2586],
        [ 0.8425],
        [-0.6886],
        [-0.5426],
        [-1.1821]])), ('layers.0.bias', tensor([ 1.5237,  0.2409,  0.9583, -0.8636, -0.7411, -0.8803,  0.2342, -0.2271,
        -0.5332,  0.8015,  0.4448,  1.4080,  0.5498, -0.7252,  0.5209,  0.2275,
         1.2950,  0.7389,  0.5307])), ('layers.2.weight', tensor([[-0.4748, -0.1068, -0.5566,  0.0643,  0.0086, -0.1091, -0.0601,  0.0248,
         -0.2762, -0.6900,  0.5582, -0.4869,  0.4998, -0.3557,  0.3128,  0.1585,
         -0.2769, -0.2451, -0.5025]])), ('layers.2.bias', tensor([-0.4373]))])",0.31229231730831086,0.4098626572250699
35,35,"OrderedDict([('layers.0.weight', tensor([[-1.2978],
        [-0.0087],
        [-1.1219],
        [ 0.8207],
        [ 0.2874],
        [ 0.2591],
        [-0.7199],
        [-0.3914],
        [-1.0508],
        [-0.5828],
        [ 1.0740],
        [-1.1545],
        [ 1.3297],
        [-0.5818],
        [ 1.2575],
        [ 0.8415],
        [-0.6902],
        [-0.5468],
        [-1.1838]])), ('layers.0.bias', tensor([ 1.5245,  0.2420,  0.9526, -0.8694, -0.7411, -0.8803,  0.2358, -0.2273,
        -0.5316,  0.8022,  0.4452,  1.4089,  0.5503, -0.7251,  0.5215,  0.2301,
         1.2991,  0.7398,  0.5378])), ('layers.2.weight', tensor([[-0.4765, -0.1078, -0.5589,  0.0628,  0.0086, -0.1091, -0.0612,  0.0248,
         -0.2763, -0.6926,  0.5580, -0.4889,  0.4995, -0.3557,  0.3125,  0.1581,
         -0.2782, -0.2465, -0.5048]])), ('layers.2.bias', tensor([-0.4385]))])",0.3122514872450362,0.40983642686430055
36,36,"OrderedDict([('layers.0.weight', tensor([[-1.3037],
        [-0.0090],
        [-1.1312],
        [ 0.8169],
        [ 0.2874],
        [ 0.2591],
        [-0.7202],
        [-0.3914],
        [-1.0513],
        [-0.5864],
        [ 1.0733],
        [-1.1612],
        [ 1.3288],
        [-0.5818],
        [ 1.2562],
        [ 0.8405],
        [-0.6916],
        [-0.5509],
        [-1.1854]])), ('layers.0.bias', tensor([ 1.5252,  0.2431,  0.9466, -0.8751, -0.7411, -0.8803,  0.2374, -0.2274,
        -0.5299,  0.8028,  0.4457,  1.4097,  0.5508, -0.7251,  0.5220,  0.2326,
         1.3032,  0.7406,  0.5448])), ('layers.2.weight', tensor([[-0.4782, -0.1087, -0.5613,  0.0613,  0.0086, -0.1091, -0.0622,  0.0248,
         -0.2764, -0.6951,  0.5577, -0.4908,  0.4992, -0.3557,  0.3121,  0.1577,
         -0.2795, -0.2478, -0.5071]])), ('layers.2.bias', tensor([-0.4397]))])",0.3122123268537204,0.40981089466561876
37,37,"OrderedDict([('layers.0.weight', tensor([[-1.3094],
        [-0.0093],
        [-1.1405],
        [ 0.8131],
        [ 0.2874],
        [ 0.2591],
        [-0.7205],
        [-0.3913],
        [-1.0517],
        [-0.5899],
        [ 1.0724],
        [-1.1677],
        [ 1.3277],
        [-0.5818],
        [ 1.2545],
        [ 0.8393],
        [-0.6928],
        [-0.5549],
        [-1.1870]])), ('layers.0.bias', tensor([ 1.5258,  0.2442,  0.9404, -0.8808, -0.7411, -0.8803,  0.2390, -0.2275,
        -0.5283,  0.8033,  0.4461,  1.4103,  0.5513, -0.7251,  0.5225,  0.2352,
         1.3071,  0.7413,  0.5517])), ('layers.2.weight', tensor([[-0.4797, -0.1097, -0.5637,  0.0599,  0.0086, -0.1091, -0.0632,  0.0247,
         -0.2765, -0.6975,  0.5572, -0.4927,  0.4988, -0.3557,  0.3117,  0.1573,
         -0.2808, -0.2491, -0.5094]])), ('layers.2.bias', tensor([-0.4408]))])",0.31217460063732383,0.4097859275624311
38,38,"OrderedDict([('layers.0.weight', tensor([[-1.3150],
        [-0.0096],
        [-1.1499],
        [ 0.8094],
        [ 0.2874],
        [ 0.2591],
        [-0.7208],
        [-0.3913],
        [-1.0521],
        [-0.5934],
        [ 1.0713],
        [-1.1741],
        [ 1.3265],
        [-0.5818],
        [ 1.2527],
        [ 0.8380],
        [-0.6938],
        [-0.5588],
        [-1.1886]])), ('layers.0.bias', tensor([ 1.5263,  0.2452,  0.9339, -0.8865, -0.7411, -0.8803,  0.2406, -0.2276,
        -0.5267,  0.8037,  0.4466,  1.4109,  0.5518, -0.7251,  0.5231,  0.2376,
         1.3110,  0.7418,  0.5585])), ('layers.2.weight', tensor([[-0.4813, -0.1106, -0.5660,  0.0586,  0.0086, -0.1091, -0.0642,  0.0247,
         -0.2766, -0.6998,  0.5567, -0.4945,  0.4983, -0.3557,  0.3111,  0.1567,
         -0.2819, -0.2504, -0.5116]])), ('layers.2.bias', tensor([-0.4419]))])",0.31213809712741447,0.4097613385218816
39,39,"OrderedDict([('layers.0.weight', tensor([[-1.3204],
        [-0.0098],
        [-1.1594],
        [ 0.8057],
        [ 0.2874],
        [ 0.2591],
        [-0.7211],
        [-0.3912],
        [-1.0525],
        [-0.5967],
        [ 1.0701],
        [-1.1803],
        [ 1.3251],
        [-0.5818],
        [ 1.2505],
        [ 0.8367],
        [-0.6946],
        [-0.5627],
        [-1.1902]])), ('layers.0.bias', tensor([ 1.5267,  0.2463,  0.9272, -0.8921, -0.7411, -0.8803,  0.2421, -0.2277,
        -0.5252,  0.8040,  0.4470,  1.4113,  0.5523, -0.7251,  0.5237,  0.2401,
         1.3147,  0.7422,  0.5652])), ('layers.2.weight', tensor([[-0.4827, -0.1115, -0.5683,  0.0573,  0.0086, -0.1091, -0.0652,  0.0247,
         -0.2767, -0.7020,  0.5561, -0.4962,  0.4977, -0.3557,  0.3104,  0.1562,
         -0.2831, -0.2515, -0.5139]])), ('layers.2.bias', tensor([-0.4430]))])",0.312102676355668,0.40973704715142956
40,40,"OrderedDict([('layers.0.weight', tensor([[-1.3257],
        [-0.0099],
        [-1.1689],
        [ 0.8020],
        [ 0.2874],
        [ 0.2591],
        [-0.7214],
        [-0.3912],
        [-1.0529],
        [-0.6000],
        [ 1.0687],
        [-1.1863],
        [ 1.3235],
        [-0.5818],
        [ 1.2482],
        [ 0.8353],
        [-0.6953],
        [-0.5665],
        [-1.1918]])), ('layers.0.bias', tensor([ 1.5270,  0.2473,  0.9203, -0.8977, -0.7411, -0.8803,  0.2437, -0.2278,
        -0.5237,  0.8043,  0.4475,  1.4115,  0.5528, -0.7251,  0.5242,  0.2425,
         1.3184,  0.7425,  0.5719])), ('layers.2.weight', tensor([[-0.4841, -0.1124, -0.5706,  0.0561,  0.0086, -0.1091, -0.0662,  0.0247,
         -0.2769, -0.7042,  0.5554, -0.4979,  0.4970, -0.3557,  0.3097,  0.1555,
         -0.2841, -0.2527, -0.5161]])), ('layers.2.bias', tensor([-0.4440]))])",0.31206818298693784,0.4097129474655958
41,41,"OrderedDict([('layers.0.weight', tensor([[-1.3309],
        [-0.0100],
        [-1.1784],
        [ 0.7993],
        [ 0.2874],
        [ 0.2591],
        [-0.7217],
        [-0.3912],
        [-1.0533],
        [-0.6032],
        [ 1.0673],
        [-1.1923],
        [ 1.3218],
        [-0.5818],
        [ 1.2456],
        [ 0.8338],
        [-0.6957],
        [-0.5701],
        [-1.1934]])), ('layers.0.bias', tensor([ 1.5271,  0.2483,  0.9132, -0.9016, -0.7411, -0.8803,  0.2453, -0.2280,
        -0.5222,  0.8044,  0.4480,  1.4117,  0.5533, -0.7251,  0.5248,  0.2449,
         1.3220,  0.7426,  0.5784])), ('layers.2.weight', tensor([[-0.4855, -0.1133, -0.5730,  0.0550,  0.0086, -0.1091, -0.0672,  0.0246,
         -0.2770, -0.7062,  0.5547, -0.4995,  0.4963, -0.3557,  0.3089,  0.1549,
         -0.2852, -0.2538, -0.5183]])), ('layers.2.bias', tensor([-0.4450]))])",0.31203472940372495,0.40968911789532286
42,42,"OrderedDict([('layers.0.weight', tensor([[-1.3360],
        [-0.0101],
        [-1.1880],
        [ 0.7977],
        [ 0.2874],
        [ 0.2591],
        [-0.7219],
        [-0.3911],
        [-1.0537],
        [-0.6063],
        [ 1.0657],
        [-1.1981],
        [ 1.3200],
        [-0.5818],
        [ 1.2429],
        [ 0.8322],
        [-0.6960],
        [-0.5738],
        [-1.1950]])), ('layers.0.bias', tensor([ 1.5272,  0.2493,  0.9059, -0.9035, -0.7411, -0.8803,  0.2469, -0.2281,
        -0.5208,  0.8045,  0.4484,  1.4118,  0.5539, -0.7251,  0.5254,  0.2472,
         1.3255,  0.7427,  0.5849])), ('layers.2.weight', tensor([[-0.4868, -0.1142, -0.5753,  0.0538,  0.0086, -0.1091, -0.0682,  0.0246,
         -0.2771, -0.7082,  0.5538, -0.5010,  0.4955, -0.3557,  0.3080,  0.1542,
         -0.2862, -0.2549, -0.5205]])), ('layers.2.bias', tensor([-0.4460]))])",0.31200231270207346,0.4096731822821312
43,43,"OrderedDict([('layers.0.weight', tensor([[-1.3410],
        [-0.0101],
        [-1.1976],
        [ 0.7964],
        [ 0.2874],
        [ 0.2591],
        [-0.7222],
        [-0.3911],
        [-1.0541],
        [-0.6094],
        [ 1.0640],
        [-1.2037],
        [ 1.3180],
        [-0.5818],
        [ 1.2400],
        [ 0.8306],
        [-0.6962],
        [-0.5773],
        [-1.1966]])), ('layers.0.bias', tensor([ 1.5272,  0.2503,  0.8984, -0.9049, -0.7411, -0.8803,  0.2485, -0.2282,
        -0.5193,  0.8045,  0.4489,  1.4119,  0.5544, -0.7251,  0.5259,  0.2496,
         1.3289,  0.7427,  0.5913])), ('layers.2.weight', tensor([[-0.4881, -0.1150, -0.5777,  0.0527,  0.0086, -0.1091, -0.0691,  0.0246,
         -0.2772, -0.7100,  0.5529, -0.5025,  0.4947, -0.3557,  0.3071,  0.1534,
         -0.2871, -0.2559, -0.5227]])), ('layers.2.bias', tensor([-0.4470]))])",0.3119705213991741,0.4096600669484663
44,44,"OrderedDict([('layers.0.weight', tensor([[-1.3458],
        [-0.0101],
        [-1.2073],
        [ 0.7952],
        [ 0.2874],
        [ 0.2591],
        [-0.7225],
        [-0.3911],
        [-1.0545],
        [-0.6124],
        [ 1.0622],
        [-1.2092],
        [ 1.3159],
        [-0.5818],
        [ 1.2369],
        [ 0.8289],
        [-0.6962],
        [-0.5808],
        [-1.1981]])), ('layers.0.bias', tensor([ 1.5272,  0.2513,  0.8908, -0.9063, -0.7411, -0.8803,  0.2501, -0.2283,
        -0.5179,  0.8044,  0.4494,  1.4118,  0.5549, -0.7251,  0.5265,  0.2519,
         1.3323,  0.7427,  0.5976])), ('layers.2.weight', tensor([[-0.4893, -0.1158, -0.5800,  0.0516,  0.0086, -0.1091, -0.0701,  0.0245,
         -0.2773, -0.7119,  0.5520, -0.5039,  0.4938, -0.3557,  0.3060,  0.1526,
         -0.2880, -0.2569, -0.5249]])), ('layers.2.bias', tensor([-0.4480]))])",0.31193923888337544,0.4096493001988468
45,45,"OrderedDict([('layers.0.weight', tensor([[-1.3506],
        [-0.0101],
        [-1.2170],
        [ 0.7940],
        [ 0.2874],
        [ 0.2591],
        [-0.7228],
        [-0.3910],
        [-1.0549],
        [-0.6154],
        [ 1.0603],
        [-1.2147],
        [ 1.3137],
        [-0.5818],
        [ 1.2337],
        [ 0.8272],
        [-0.6961],
        [-0.5842],
        [-1.1997]])), ('layers.0.bias', tensor([ 1.5271,  0.2522,  0.8829, -0.9076, -0.7411, -0.8803,  0.2516, -0.2284,
        -0.5165,  0.8043,  0.4499,  1.4117,  0.5555, -0.7251,  0.5271,  0.2542,
         1.3356,  0.7425,  0.6039])), ('layers.2.weight', tensor([[-0.4904, -0.1167, -0.5824,  0.0505,  0.0086, -0.1091, -0.0710,  0.0245,
         -0.2774, -0.7136,  0.5510, -0.5053,  0.4928, -0.3557,  0.3050,  0.1518,
         -0.2889, -0.2578, -0.5270]])), ('layers.2.bias', tensor([-0.4490]))])",0.3119084224861581,0.409641224166262
46,46,"OrderedDict([('layers.0.weight', tensor([[-1.3552],
        [-0.0100],
        [-1.2268],
        [ 0.7928],
        [ 0.2874],
        [ 0.2591],
        [-0.7231],
        [-0.3910],
        [-1.0552],
        [-0.6183],
        [ 1.0583],
        [-1.2199],
        [ 1.3115],
        [-0.5819],
        [ 1.2304],
        [ 0.8255],
        [-0.6959],
        [-0.5875],
        [-1.2012]])), ('layers.0.bias', tensor([ 1.5269,  0.2532,  0.8750, -0.9089, -0.7411, -0.8803,  0.2532, -0.2285,
        -0.5152,  0.8042,  0.4503,  1.4115,  0.5560, -0.7251,  0.5276,  0.2564,
         1.3388,  0.7423,  0.6101])), ('layers.2.weight', tensor([[-0.4916, -0.1175, -0.5848,  0.0494,  0.0086, -0.1091, -0.0720,  0.0245,
         -0.2775, -0.7153,  0.5499, -0.5067,  0.4918, -0.3557,  0.3039,  0.1509,
         -0.2897, -0.2587, -0.5292]])), ('layers.2.bias', tensor([-0.4499]))])",0.3118780210009087,0.4096331184836648
47,47,"OrderedDict([('layers.0.weight', tensor([[-1.3598],
        [-0.0099],
        [-1.2366],
        [ 0.7917],
        [ 0.2874],
        [ 0.2591],
        [-0.7234],
        [-0.3910],
        [-1.0556],
        [-0.6211],
        [ 1.0563],
        [-1.2251],
        [ 1.3091],
        [-0.5819],
        [ 1.2270],
        [ 0.8237],
        [-0.6956],
        [-0.5908],
        [-1.2027]])), ('layers.0.bias', tensor([ 1.5267,  0.2541,  0.8668, -0.9102, -0.7411, -0.8803,  0.2548, -0.2286,
        -0.5138,  0.8040,  0.4508,  1.4112,  0.5565, -0.7251,  0.5282,  0.2586,
         1.3420,  0.7420,  0.6163])), ('layers.2.weight', tensor([[-0.4927, -0.1183, -0.5872,  0.0484,  0.0086, -0.1091, -0.0729,  0.0245,
         -0.2776, -0.7169,  0.5489, -0.5080,  0.4907, -0.3557,  0.3027,  0.1501,
         -0.2905, -0.2596, -0.5313]])), ('layers.2.bias', tensor([-0.4508]))])",0.3118480219554234,0.409624987457452
48,48,"OrderedDict([('layers.0.weight', tensor([[-1.3684],
        [-0.0097],
        [-1.2464],
        [ 0.7906],
        [ 0.2874],
        [ 0.2591],
        [-0.7237],
        [-0.3910],
        [-1.0559],
        [-0.6239],
        [ 1.0542],
        [-1.2302],
        [ 1.3067],
        [-0.5819],
        [ 1.2236],
        [ 0.8219],
        [-0.6952],
        [-0.5940],
        [-1.2043]])), ('layers.0.bias', tensor([ 1.5227,  0.2551,  0.8586, -0.9114, -0.7411, -0.8803,  0.2564, -0.2287,
        -0.5125,  0.8038,  0.4513,  1.4110,  0.5571, -0.7251,  0.5288,  0.2609,
         1.3451,  0.7417,  0.6224])), ('layers.2.weight', tensor([[-0.4937, -0.1190, -0.5897,  0.0473,  0.0086, -0.1091, -0.0738,  0.0244,
         -0.2777, -0.7185,  0.5477, -0.5092,  0.4897, -0.3557,  0.3015,  0.1492,
         -0.2912, -0.2605, -0.5335]])), ('layers.2.bias', tensor([-0.4517]))])",0.3118174575562686,0.40960685058671514
49,49,"OrderedDict([('layers.0.weight', tensor([[-1.3816],
        [-0.0095],
        [-1.2562],
        [ 0.7895],
        [ 0.2874],
        [ 0.2591],
        [-0.7240],
        [-0.3909],
        [-1.0563],
        [-0.6265],
        [ 1.0520],
        [-1.2349],
        [ 1.3041],
        [-0.5819],
        [ 1.2198],
        [ 0.8200],
        [-0.6946],
        [-0.5971],
        [-1.2058]])), ('layers.0.bias', tensor([ 1.5145,  0.2561,  0.8505, -0.9126, -0.7411, -0.8803,  0.2580, -0.2288,
        -0.5112,  0.8037,  0.4516,  1.4110,  0.5574, -0.7251,  0.5291,  0.2628,
         1.3485,  0.7417,  0.6285])), ('layers.2.weight', tensor([[-0.4948, -0.1199, -0.5922,  0.0462,  0.0086, -0.1091, -0.0748,  0.0244,
         -0.2778, -0.7202,  0.5465, -0.5105,  0.4884, -0.3557,  0.3002,  0.1482,
         -0.2920, -0.2614, -0.5356]])), ('layers.2.bias', tensor([-0.4527]))])",0.3117756697470516,0.4095831657672534
50,50,"OrderedDict([('layers.0.weight', tensor([[-1.3955],
        [-0.0093],
        [-1.2616],
        [ 0.7884],
        [ 0.2874],
        [ 0.2591],
        [-0.7243],
        [-0.3909],
        [-1.0566],
        [-0.6289],
        [ 1.0496],
        [-1.2394],
        [ 1.3013],
        [-0.5819],
        [ 1.2158],
        [ 0.8180],
        [-0.6937],
        [-0.5999],
        [-1.2073]])), ('layers.0.bias', tensor([ 1.5056,  0.2572,  0.8507, -0.9138, -0.7411, -0.8803,  0.2596, -0.2289,
        -0.5099,  0.8039,  0.4516,  1.4112,  0.5574, -0.7251,  0.5291,  0.2646,
         1.3522,  0.7420,  0.6346])), ('layers.2.weight', tensor([[-0.4960, -0.1208, -0.5947,  0.0452,  0.0086, -0.1091, -0.0757,  0.0244,
         -0.2779, -0.7218,  0.5450, -0.5118,  0.4871, -0.3557,  0.2987,  0.1471,
         -0.2929, -0.2623, -0.5377]])), ('layers.2.bias', tensor([-0.4538]))])",0.3117344844095593,0.40958457430194056
51,51,"OrderedDict([('layers.0.weight', tensor([[-1.4098],
        [-0.0090],
        [-1.2644],
        [ 0.7874],
        [ 0.2874],
        [ 0.2591],
        [-0.7246],
        [-0.3909],
        [-1.0570],
        [-0.6314],
        [ 1.0473],
        [-1.2439],
        [ 1.2987],
        [-0.5819],
        [ 1.2121],
        [ 0.8161],
        [-0.6930],
        [-0.6028],
        [-1.2089]])), ('layers.0.bias', tensor([ 1.4963,  0.2582,  0.8559, -0.9150, -0.7411, -0.8803,  0.2612, -0.2290,
        -0.5086,  0.8039,  0.4518,  1.4112,  0.5577, -0.7251,  0.5293,  0.2665,
         1.3555,  0.7420,  0.6406])), ('layers.2.weight', tensor([[-0.4971, -0.1217, -0.5972,  0.0441,  0.0086, -0.1091, -0.0766,  0.0244,
         -0.2780, -0.7234,  0.5438, -0.5130,  0.4858, -0.3557,  0.2973,  0.1461,
         -0.2937, -0.2631, -0.5398]])), ('layers.2.bias', tensor([-0.4548]))])",0.3117051834147181,0.4095931248671453
52,52,"OrderedDict([('layers.0.weight', tensor([[-1.4243],
        [-0.0088],
        [-1.2711],
        [ 0.7864],
        [ 0.2874],
        [ 0.2591],
        [-0.7249],
        [-0.3908],
        [-1.0573],
        [-0.6340],
        [ 1.0452],
        [-1.2487],
        [ 1.2964],
        [-0.5819],
        [ 1.2087],
        [ 0.8143],
        [-0.6924],
        [-0.6059],
        [-1.2104]])), ('layers.0.bias', tensor([ 1.4865,  0.2591,  0.8535, -0.9160, -0.7411, -0.8803,  0.2628, -0.2290,
        -0.5074,  0.8035,  0.4524,  1.4107,  0.5583, -0.7251,  0.5300,  0.2687,
         1.3582,  0.7414,  0.6465])), ('layers.2.weight', tensor([[-0.4983, -0.1224, -0.5997,  0.0431,  0.0086, -0.1091, -0.0775,  0.0244,
         -0.2781, -0.7248,  0.5427, -0.5141,  0.4848, -0.3558,  0.2962,  0.1452,
         -0.2943, -0.2639, -0.5419]])), ('layers.2.bias', tensor([-0.4556]))])",0.3116788470667719,0.4095720013118504
53,53,"OrderedDict([('layers.0.weight', tensor([[-1.4387],
        [-0.0087],
        [-1.2759],
        [ 0.7854],
        [ 0.2874],
        [ 0.2591],
        [-0.7252],
        [-0.3908],
        [-1.0577],
        [-0.6366],
        [ 1.0432],
        [-1.2533],
        [ 1.2940],
        [-0.5819],
        [ 1.2054],
        [ 0.8126],
        [-0.6919],
        [-0.6088],
        [-1.2119]])), ('layers.0.bias', tensor([ 1.4766,  0.2599,  0.8546, -0.9171, -0.7411, -0.8803,  0.2643, -0.2291,
        -0.5056,  0.8031,  0.4530,  1.4102,  0.5590, -0.7251,  0.5308,  0.2709,
         1.3609,  0.7409,  0.6523])), ('layers.2.weight', tensor([[-0.4994, -0.1230, -0.6021,  0.0421,  0.0086, -0.1091, -0.0784,  0.0243,
         -0.2782, -0.7261,  0.5416, -0.5152,  0.4838, -0.3558,  0.2951,  0.1444,
         -0.2950, -0.2647, -0.5440]])), ('layers.2.bias', tensor([-0.4564]))])",0.31164674795666847,0.4095593564231725
54,54,"OrderedDict([('layers.0.weight', tensor([[-1.4531],
        [-0.0085],
        [-1.2786],
        [ 0.7845],
        [ 0.2874],
        [ 0.2591],
        [-0.7255],
        [-0.3908],
        [-1.0584],
        [-0.6391],
        [ 1.0411],
        [-1.2577],
        [ 1.2916],
        [-0.5819],
        [ 1.2020],
        [ 0.8108],
        [-0.6912],
        [-0.6117],
        [-1.2134]])), ('layers.0.bias', tensor([ 1.4668,  0.2608,  0.8598, -0.9181, -0.7411, -0.8803,  0.2659, -0.2292,
        -0.5026,  0.8028,  0.4536,  1.4098,  0.5596, -0.7251,  0.5314,  0.2730,
         1.3636,  0.7404,  0.6581])), ('layers.2.weight', tensor([[-0.5006, -0.1237, -0.6046,  0.0412,  0.0086, -0.1091, -0.0793,  0.0243,
         -0.2783, -0.7275,  0.5405, -0.5163,  0.4827, -0.3558,  0.2939,  0.1435,
         -0.2956, -0.2654, -0.5461]])), ('layers.2.bias', tensor([-0.4572]))])",0.31161763391684566,0.40955966413360634
55,55,"OrderedDict([('layers.0.weight', tensor([[-1.4674],
        [-0.0083],
        [-1.2808],
        [ 0.7836],
        [ 0.2874],
        [ 0.2591],
        [-0.7258],
        [-0.3908],
        [-1.0591],
        [-0.6415],
        [ 1.0390],
        [-1.2669],
        [ 1.2892],
        [-0.5819],
        [ 1.1987],
        [ 0.8091],
        [-0.6906],
        [-0.6145],
        [-1.2149]])), ('layers.0.bias', tensor([ 1.4569,  0.2616,  0.8658, -0.9191, -0.7411, -0.8803,  0.2675, -0.2293,
        -0.4993,  0.8024,  0.4542,  1.4052,  0.5603, -0.7251,  0.5321,  0.2751,
         1.3663,  0.7400,  0.6639])), ('layers.2.weight', tensor([[-0.5018, -0.1244, -0.6070,  0.0402,  0.0086, -0.1091, -0.0802,  0.0243,
         -0.2784, -0.7288,  0.5395, -0.5174,  0.4817, -0.3558,  0.2928,  0.1426,
         -0.2962, -0.2661, -0.5482]])), ('layers.2.bias', tensor([-0.4579]))])",0.3115859107679171,0.4095506256402587
56,56,"OrderedDict([('layers.0.weight', tensor([[-1.4815],
        [-0.0080],
        [-1.2872],
        [ 0.7828],
        [ 0.2874],
        [ 0.2591],
        [-0.7262],
        [-0.3907],
        [-1.0598],
        [-0.6437],
        [ 1.0369],
        [-1.2813],
        [ 1.2868],
        [-0.5819],
        [ 1.1952],
        [ 0.8073],
        [-0.6898],
        [-0.6171],
        [-1.2164]])), ('layers.0.bias', tensor([ 1.4473,  0.2625,  0.8637, -0.9200, -0.7411, -0.8803,  0.2691, -0.2294,
        -0.4961,  0.8023,  0.4546,  1.3962,  0.5607, -0.7251,  0.5325,  0.2770,
         1.3691,  0.7398,  0.6695])), ('layers.2.weight', tensor([[-0.5031, -0.1252, -0.6094,  0.0393,  0.0086, -0.1091, -0.0810,  0.0243,
         -0.2785, -0.7301,  0.5383, -0.5184,  0.4805, -0.3558,  0.2915,  0.1417,
         -0.2969, -0.2668, -0.5502]])), ('layers.2.bias', tensor([-0.4588]))])",0.31154669819797315,0.4095131097870762
57,57,"OrderedDict([('layers.0.weight', tensor([[-1.4952],
        [-0.0077],
        [-1.2918],
        [ 0.7820],
        [ 0.2874],
        [ 0.2591],
        [-0.7265],
        [-0.3907],
        [-1.0605],
        [-0.6457],
        [ 1.0345],
        [-1.2963],
        [ 1.2840],
        [-0.5819],
        [ 1.1914],
        [ 0.8054],
        [-0.6887],
        [-0.6194],
        [-1.2178]])), ('layers.0.bias', tensor([ 1.4382,  0.2636,  0.8649, -0.9209, -0.7411, -0.8803,  0.2706, -0.2295,
        -0.4928,  0.8026,  0.4545,  1.3868,  0.5607, -0.7251,  0.5324,  0.2786,
         1.3725,  0.7402,  0.6752])), ('layers.2.weight', tensor([[-0.5044, -0.1260, -0.6118,  0.0385,  0.0086, -0.1091, -0.0819,  0.0242,
         -0.2786, -0.7315,  0.5369, -0.5197,  0.4792, -0.3558,  0.2900,  0.1406,
         -0.2976, -0.2676, -0.5523]])), ('layers.2.bias', tensor([-0.4598]))])",0.311504629050637,0.4094938899805129
58,58,"OrderedDict([('layers.0.weight', tensor([[-1.5085],
        [-0.0073],
        [-1.2944],
        [ 0.7813],
        [ 0.2874],
        [ 0.2591],
        [-0.7268],
        [-0.3907],
        [-1.0611],
        [-0.6475],
        [ 1.0321],
        [-1.3112],
        [ 1.2813],
        [-0.5819],
        [ 1.1876],
        [ 0.8035],
        [-0.6875],
        [-0.6216],
        [-1.2193]])), ('layers.0.bias', tensor([ 1.4296,  0.2648,  0.8699, -0.9217, -0.7411, -0.8803,  0.2722, -0.2296,
        -0.4897,  0.8032,  0.4543,  1.3776,  0.5604, -0.7251,  0.5321,  0.2799,
         1.3762,  0.7410,  0.6807])), ('layers.2.weight', tensor([[-0.5058, -0.1270, -0.6142,  0.0376,  0.0086, -0.1091, -0.0828,  0.0242,
         -0.2787, -0.7330,  0.5354, -0.5210,  0.4777, -0.3558,  0.2885,  0.1395,
         -0.2985, -0.2685, -0.5543]])), ('layers.2.bias', tensor([-0.4608]))])",0.31146564670214144,0.40949109747355883
59,59,"OrderedDict([('layers.0.weight', tensor([[-1.5216],
        [-0.0070],
        [-1.2966],
        [ 0.7806],
        [ 0.2874],
        [ 0.2591],
        [-0.7271],
        [-0.3907],
        [-1.0618],
        [-0.6493],
        [ 1.0299],
        [-1.3259],
        [ 1.2787],
        [-0.5819],
        [ 1.1840],
        [ 0.8017],
        [-0.6864],
        [-0.6236],
        [-1.2208]])), ('layers.0.bias', tensor([ 1.4211,  0.2660,  0.8757, -0.9225, -0.7411, -0.8803,  0.2738, -0.2296,
        -0.4865,  0.8039,  0.4541,  1.3687,  0.5602, -0.7251,  0.5319,  0.2813,
         1.3798,  0.7418,  0.6863])), ('layers.2.weight', tensor([[-0.5073, -0.1280, -0.6165,  0.0368,  0.0086, -0.1091, -0.0836,  0.0242,
         -0.2788, -0.7345,  0.5340, -0.5224,  0.4764, -0.3558,  0.2870,  0.1385,
         -0.2993, -0.2693, -0.5563]])), ('layers.2.bias', tensor([-0.4619]))])",0.3114276091304819,0.4094916787181622
60,60,"OrderedDict([('layers.0.weight', tensor([[-1.5345],
        [-0.0067],
        [-1.3026],
        [ 0.7799],
        [ 0.2874],
        [ 0.2591],
        [-0.7274],
        [-0.3906],
        [-1.0625],
        [-0.6510],
        [ 1.0278],
        [-1.3404],
        [ 1.2764],
        [-0.5819],
        [ 1.1807],
        [ 0.8001],
        [-0.6855],
        [-0.6257],
        [-1.2222]])), ('layers.0.bias', tensor([ 1.4128,  0.2671,  0.8740, -0.9232, -0.7411, -0.8803,  0.2753, -0.2297,
        -0.4834,  0.8045,  0.4540,  1.3598,  0.5601, -0.7251,  0.5317,  0.2827,
         1.3832,  0.7426,  0.6917])), ('layers.2.weight', tensor([[-0.5087, -0.1289, -0.6188,  0.0361,  0.0086, -0.1091, -0.0845,  0.0242,
         -0.2789, -0.7360,  0.5327, -0.5238,  0.4752, -0.3558,  0.2857,  0.1376,
         -0.3001, -0.2701, -0.5583]])), ('layers.2.bias', tensor([-0.4629]))])",0.31139250555139975,0.40947148851676807
61,61,"OrderedDict([('layers.0.weight', tensor([[-1.5472],
        [-0.0065],
        [-1.3069],
        [ 0.7794],
        [ 0.2874],
        [ 0.2591],
        [-0.7277],
        [-0.3906],
        [-1.0631],
        [-0.6527],
        [ 1.0259],
        [-1.3546],
        [ 1.2741],
        [-0.5819],
        [ 1.1777],
        [ 0.7985],
        [-0.6847],
        [-0.6276],
        [-1.2237]])), ('layers.0.bias', tensor([ 1.4048,  0.2683,  0.8753, -0.9238, -0.7411, -0.8803,  0.2768, -0.2298,
        -0.4804,  0.8053,  0.4539,  1.3513,  0.5599, -0.7251,  0.5314,  0.2840,
         1.3867,  0.7437,  0.6970])), ('layers.2.weight', tensor([[-0.5103, -0.1298, -0.6211,  0.0354,  0.0086, -0.1091, -0.0853,  0.0242,
         -0.2790, -0.7375,  0.5315, -0.5252,  0.4740, -0.3558,  0.2845,  0.1367,
         -0.3010, -0.2709, -0.5603]])), ('layers.2.bias', tensor([-0.4639]))])",0.3113583403724533,0.40946025351986465
62,62,"OrderedDict([('layers.0.weight', tensor([[-1.5595],
        [-0.0063],
        [-1.3094],
        [ 0.7788],
        [ 0.2874],
        [ 0.2591],
        [-0.7280],
        [-0.3906],
        [-1.0638],
        [-0.6542],
        [ 1.0241],
        [-1.3684],
        [ 1.2721],
        [-0.5819],
        [ 1.1748],
        [ 0.7970],
        [-0.6840],
        [-0.6294],
        [-1.2251]])), ('layers.0.bias', tensor([ 1.3971,  0.2694,  0.8801, -0.9244, -0.7411, -0.8803,  0.2784, -0.2299,
        -0.4774,  0.8062,  0.4537,  1.3431,  0.5597, -0.7251,  0.5312,  0.2853,
         1.3901,  0.7449,  0.7023])), ('layers.2.weight', tensor([[-0.5118, -0.1307, -0.6234,  0.0348,  0.0086, -0.1091, -0.0861,  0.0241,
         -0.2792, -0.7391,  0.5304, -0.5268,  0.4729, -0.3558,  0.2833,  0.1358,
         -0.3018, -0.2717, -0.5622]])), ('layers.2.bias', tensor([-0.4649]))])",0.3113262096232347,0.4094539945564369
63,63,"OrderedDict([('layers.0.weight', tensor([[-1.5716],
        [-0.0061],
        [-1.3115],
        [ 0.7784],
        [ 0.2874],
        [ 0.2591],
        [-0.7283],
        [-0.3906],
        [-1.0644],
        [-0.6557],
        [ 1.0224],
        [-1.3820],
        [ 1.2702],
        [-0.5819],
        [ 1.1722],
        [ 0.7956],
        [-0.6834],
        [-0.6312],
        [-1.2265]])), ('layers.0.bias', tensor([ 1.3896,  0.2705,  0.8856, -0.9250, -0.7411, -0.8803,  0.2799, -0.2299,
        -0.4744,  0.8072,  0.4535,  1.3351,  0.5595, -0.7251,  0.5309,  0.2865,
         1.3935,  0.7461,  0.7075])), ('layers.2.weight', tensor([[-0.5133, -0.1316, -0.6256,  0.0343,  0.0086, -0.1091, -0.0870,  0.0241,
         -0.2793, -0.7406,  0.5293, -0.5284,  0.4719, -0.3558,  0.2822,  0.1350,
         -0.3027, -0.2726, -0.5642]])), ('layers.2.bias', tensor([-0.4659]))])",0.311295044970287,0.40945116840030094
64,64,"OrderedDict([('layers.0.weight', tensor([[-1.5835],
        [-0.0060],
        [-1.3170],
        [ 0.7779],
        [ 0.2874],
        [ 0.2591],
        [-0.7286],
        [-0.3905],
        [-1.0650],
        [-0.6572],
        [ 1.0209],
        [-1.3952],
        [ 1.2684],
        [-0.5819],
        [ 1.1699],
        [ 0.7943],
        [-0.6829],
        [-0.6329],
        [-1.2279]])), ('layers.0.bias', tensor([ 1.3824,  0.2717,  0.8843, -0.9254, -0.7411, -0.8803,  0.2813, -0.2300,
        -0.4715,  0.8082,  0.4534,  1.3274,  0.5593, -0.7251,  0.5307,  0.2878,
         1.3969,  0.7475,  0.7126])), ('layers.2.weight', tensor([[-0.5149, -0.1325, -0.6278,  0.0338,  0.0086, -0.1091, -0.0878,  0.0241,
         -0.2794, -0.7421,  0.5284, -0.5300,  0.4710, -0.3558,  0.2812,  0.1343,
         -0.3036, -0.2734, -0.5661]])), ('layers.2.bias', tensor([-0.4668]))])",0.3112662054862388,0.4094300111836674
65,65,"OrderedDict([('layers.0.weight', tensor([[-1.5950],
        [-0.0060],
        [-1.3211],
        [ 0.7776],
        [ 0.2874],
        [ 0.2591],
        [-0.7289],
        [-0.3905],
        [-1.0656],
        [-0.6585],
        [ 1.0195],
        [-1.4082],
        [ 1.2668],
        [-0.5819],
        [ 1.1677],
        [ 0.7931],
        [-0.6825],
        [-0.6344],
        [-1.2293]])), ('layers.0.bias', tensor([ 1.3754,  0.2728,  0.8856, -0.9259, -0.7411, -0.8803,  0.2828, -0.2301,
        -0.4687,  0.8095,  0.4532,  1.3200,  0.5591, -0.7251,  0.5304,  0.2890,
         1.4003,  0.7491,  0.7176])), ('layers.2.weight', tensor([[-0.5165, -0.1334, -0.6299,  0.0334,  0.0086, -0.1091, -0.0885,  0.0241,
         -0.2795, -0.7437,  0.5275, -0.5316,  0.4701, -0.3558,  0.2803,  0.1337,
         -0.3045, -0.2743, -0.5679]])), ('layers.2.bias', tensor([-0.4678]))])",0.31123892080892496,0.4094191923871373
66,66,"OrderedDict([('layers.0.weight', tensor([[-1.6062],
        [-0.0059],
        [-1.3235],
        [ 0.7773],
        [ 0.2874],
        [ 0.2591],
        [-0.7292],
        [-0.3905],
        [-1.0662],
        [-0.6597],
        [ 1.0182],
        [-1.4207],
        [ 1.2654],
        [-0.5819],
        [ 1.1657],
        [ 0.7919],
        [-0.6822],
        [-0.6359],
        [-1.2307]])), ('layers.0.bias', tensor([ 1.3688,  0.2739,  0.8901, -0.9262, -0.7411, -0.8803,  0.2843, -0.2302,
        -0.4659,  0.8108,  0.4529,  1.3129,  0.5588, -0.7251,  0.5301,  0.2901,
         1.4036,  0.7508,  0.7225])), ('layers.2.weight', tensor([[-0.5181, -0.1343, -0.6321,  0.0330,  0.0086, -0.1091, -0.0893,  0.0241,
         -0.2796, -0.7453,  0.5267, -0.5333,  0.4693, -0.3558,  0.2794,  0.1331,
         -0.3055, -0.2751, -0.5698]])), ('layers.2.bias', tensor([-0.4688]))])",0.3112131765746199,0.40941976075429615
67,67,"OrderedDict([('layers.0.weight', tensor([[-1.6172],
        [-0.0059],
        [-1.3255],
        [ 0.7770],
        [ 0.2874],
        [ 0.2591],
        [-0.7295],
        [-0.3905],
        [-1.0668],
        [-0.6609],
        [ 1.0171],
        [-1.4330],
        [ 1.2641],
        [-0.5819],
        [ 1.1640],
        [ 0.7909],
        [-0.6821],
        [-0.6373],
        [-1.2321]])), ('layers.0.bias', tensor([ 1.3624,  0.2751,  0.8952, -0.9266, -0.7411, -0.8803,  0.2857, -0.2302,
        -0.4631,  0.8122,  0.4527,  1.3061,  0.5586, -0.7251,  0.5298,  0.2913,
         1.4070,  0.7527,  0.7273])), ('layers.2.weight', tensor([[-0.5197, -0.1352, -0.6342,  0.0327,  0.0086, -0.1091, -0.0901,  0.0241,
         -0.2797, -0.7468,  0.5260, -0.5351,  0.4686, -0.3558,  0.2787,  0.1325,
         -0.3064, -0.2760, -0.5716]])), ('layers.2.bias', tensor([-0.4697]))])",0.3111882488164762,0.4094234559100566
68,68,"OrderedDict([('layers.0.weight', tensor([[-1.6279],
        [-0.0060],
        [-1.3305],
        [ 0.7767],
        [ 0.2874],
        [ 0.2591],
        [-0.7298],
        [-0.3905],
        [-1.0673],
        [-0.6620],
        [ 1.0161],
        [-1.4450],
        [ 1.2630],
        [-0.5819],
        [ 1.1625],
        [ 0.7899],
        [-0.6820],
        [-0.6386],
        [-1.2334]])), ('layers.0.bias', tensor([ 1.3562,  0.2762,  0.8943, -0.9268, -0.7411, -0.8803,  0.2871, -0.2303,
        -0.4604,  0.8137,  0.4525,  1.2995,  0.5584, -0.7251,  0.5296,  0.2924,
         1.4102,  0.7546,  0.7320])), ('layers.2.weight', tensor([[-0.5214, -0.1361, -0.6362,  0.0324,  0.0086, -0.1091, -0.0909,  0.0240,
         -0.2799, -0.7484,  0.5253, -0.5368,  0.4680, -0.3558,  0.2780,  0.1321,
         -0.3073, -0.2768, -0.5734]])), ('layers.2.bias', tensor([-0.4706]))])",0.31116521759798466,0.409402277911686
69,69,"OrderedDict([('layers.0.weight', tensor([[-1.6382],
        [-0.0061],
        [-1.3343],
        [ 0.7765],
        [ 0.2874],
        [ 0.2591],
        [-0.7302],
        [-0.3904],
        [-1.0679],
        [-0.6630],
        [ 1.0152],
        [-1.4566],
        [ 1.2620],
        [-0.5819],
        [ 1.1611],
        [ 0.7890],
        [-0.6820],
        [-0.6398],
        [-1.2348]])), ('layers.0.bias', tensor([ 1.3503,  0.2773,  0.8957, -0.9271, -0.7411, -0.8803,  0.2885, -0.2303,
        -0.4577,  0.8153,  0.4523,  1.2933,  0.5581, -0.7251,  0.5293,  0.2935,
         1.4135,  0.7567,  0.7367])), ('layers.2.weight', tensor([[-0.5230, -0.1370, -0.6382,  0.0322,  0.0086, -0.1091, -0.0916,  0.0240,
         -0.2800, -0.7500,  0.5247, -0.5386,  0.4674, -0.3558,  0.2774,  0.1316,
         -0.3083, -0.2777, -0.5752]])), ('layers.2.bias', tensor([-0.4715]))])",0.31114347266513204,0.4093905718711293
